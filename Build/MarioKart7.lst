         w __deregister_frame_info
         w __gnu_Unwind_Find_exidx
         w __register_frame_info
         w _ITM_deregisterTMCloneTable
         w _ITM_registerTMCloneTable
00000000 a shift
00000000 a shift
00100000 T __start__
00100000 T _start
00100028 t relocNotFinished
00100044 t notRelativeEntry
00100088 t ClearMem
0010009c t ClrLoop
001000c4 T _init
001000e0 T dispatchArm11KernelCmd
001000f4 t arm11kMemcpy
00100104 t _memcpy
0010011c t loc_108230
00100124 t GetKprocessFromHandle
00100148 t loc_10825C
0010014c t GetCurrentKprocess
0010015c t test4
00100160 t SetCurrentKprocess
00100184 t SetKProcessID
001001ac t loc_1082AC
001001b4 t GetKProcessState
001001c0 t ReadCTXID
001001d0 t exit
001001d4 T executeKernelCmd
001001f0 T initSystem
001001f8 T initLib
0010021c T __ctru_exit
00100238 t .udivsi3_skip_div0_test
00100238 t __aeabi_uidiv
00100238 000001ec T __udivsi3
00100424 00000020 t __aeabi_uidivmod
00100444 t __aeabi_idiv
00100444 00000220 T __divsi3
0010044c t .divsi3_skip_div0_test
00100664 00000020 t __aeabi_idivmod
00100684 00000004 t __aeabi_idiv0
00100684 00000004 t __aeabi_ldiv0
00100688 0000019c T __aeabi_frsub
00100690 00000194 T __aeabi_fsub
00100690 00000194 T __subsf3
00100694 00000190 T __addsf3
00100694 00000190 T __aeabi_fadd
00100824 00000028 T __aeabi_ui2f
00100824 00000028 T __floatunsisf
0010082c 00000020 T __aeabi_i2f
0010082c 00000020 T __floatsisf
0010084c 0000008c t __aeabi_ul2f
0010084c 0000008c T __floatundisf
0010085c 0000007c t __aeabi_l2f
0010085c 0000007c T __floatdisf
001008d8 t __aeabi_ldivmod
001009ac 00000014 T __restore_core_regs
001009ac 00000014 t restore_core_regs
001009c0 t __gnu_Unwind_Restore_VFP
001009c8 t __gnu_Unwind_Save_VFP
001009d0 t __gnu_Unwind_Restore_VFP_D
001009d8 t __gnu_Unwind_Save_VFP_D
001009e0 t __gnu_Unwind_Restore_VFP_D_16_to_31
001009e8 t __gnu_Unwind_Save_VFP_D_16_to_31
001009f0 t __gnu_Unwind_Restore_WMMXD
00100a34 t __gnu_Unwind_Save_WMMXD
00100a78 t __gnu_Unwind_Restore_WMMXC
00100a8c t __gnu_Unwind_Save_WMMXC
00100aa0 00000024 T ___Unwind_RaiseException
00100aa0 00000024 t _Unwind_RaiseException
00100ac4 00000024 T ___Unwind_Resume
00100ac4 00000024 t _Unwind_Resume
00100ae8 00000024 T ___Unwind_Resume_or_Rethrow
00100ae8 00000024 t _Unwind_Resume_or_Rethrow
00100b0c 00000024 T ___Unwind_ForcedUnwind
00100b0c 00000024 T _Unwind_ForcedUnwind
00100b30 00000024 T ___Unwind_Backtrace
00100b30 00000024 T _Unwind_Backtrace
00100b68 00000390 T strcmp
00100ef0 t __aeabi_uldivmod
00100f2c t deregister_tm_clones
00100f58 t register_tm_clones
00100f90 t __do_global_dtors_aux
00100fd4 t frame_dummy
00101008 000000b0 t CTRPluginFramework::GetRacePointer() [clone .part.6]
001010b8 0000003c t CTRPluginFramework::GetFNsPointer() [clone .part.7]
001010f4 00000068 t CTRPluginFramework::GetOldPointer5CC() [clone .part.8]
0010115c 00000064 t CTRPluginFramework::GetOldPointer5D0() [clone .part.9]
001011c0 00000090 t CTRPluginFramework::GetItemPointer() [clone .part.10]
00101250 0000008c T CTRPluginFramework::IsInRace()
001012dc 00000070 T CTRPluginFramework::writeItem(unsigned long)
0010134c 000000c4 T CTRPluginFramework::writeSpeed(unsigned long)
00101410 00000048 T CTRPluginFramework::writeVR(unsigned long)
00101458 0000004c T CTRPluginFramework::writeLocation(unsigned long)
001014a4 00000064 T CTRPluginFramework::writeFlag(unsigned short)
00101508 00000040 T CTRPluginFramework::invincible(CTRPluginFramework::MenuEntry*)
00101548 00000040 T CTRPluginFramework::alwaysStarPower(CTRPluginFramework::MenuEntry*)
00101588 0000003c T CTRPluginFramework::trickAnywhere(CTRPluginFramework::MenuEntry*)
001015c4 00000040 T CTRPluginFramework::alwaysBlackKart(CTRPluginFramework::MenuEntry*)
00101604 0000003c T CTRPluginFramework::alwaysShocked(CTRPluginFramework::MenuEntry*)
00101640 00000004 T CTRPluginFramework::alwaysCrushed(CTRPluginFramework::MenuEntry*)
00101644 00000028 T CTRPluginFramework::instantMT(CTRPluginFramework::MenuEntry*)
0010166c 00000014 T CTRPluginFramework::hugeBunnyhop(CTRPluginFramework::MenuEntry*)
00101680 00000014 T CTRPluginFramework::fastReverse(CTRPluginFramework::MenuEntry*)
00101694 00000068 T CTRPluginFramework::noCountdown(CTRPluginFramework::MenuEntry*)
001016fc 0000004c T CTRPluginFramework::moonjump(CTRPluginFramework::MenuEntry*)
00101748 000000b4 T CTRPluginFramework::saveSlotTeleporter(CTRPluginFramework::MenuEntry*)
001017fc 00000054 T CTRPluginFramework::maxTimer(CTRPluginFramework::MenuEntry*)
00101850 00000074 T CTRPluginFramework::waterEverywhere(CTRPluginFramework::MenuEntry*)
001018c4 000000f4 T CTRPluginFramework::driveAnywhere(CTRPluginFramework::MenuEntry*)
001019b8 000002d8 T CTRPluginFramework::stalking(CTRPluginFramework::MenuEntry*)
00101c90 000000dc T CTRPluginFramework::cpuBrawl(CTRPluginFramework::MenuEntry*)
00101d6c 00000198 T CTRPluginFramework::TouchCode(CTRPluginFramework::MenuEntry*)
00101f04 00000010 T CTRPluginFramework::fastBlueShell(CTRPluginFramework::MenuEntry*)
00101f14 00000010 T CTRPluginFramework::stoppedBlueShell(CTRPluginFramework::MenuEntry*)
00101f24 00000010 T CTRPluginFramework::fastGreenShell(CTRPluginFramework::MenuEntry*)
00101f34 00000010 T CTRPluginFramework::stoppedGreenShell(CTRPluginFramework::MenuEntry*)
00101f44 0000005c T CTRPluginFramework::dropMushrooms(CTRPluginFramework::MenuEntry*)
00101fa0 0000004c T CTRPluginFramework::bulletControl(CTRPluginFramework::MenuEntry*)
00101fec 00000084 T CTRPluginFramework::disableStarMusic(CTRPluginFramework::MenuEntry*)
00102070 00000070 T CTRPluginFramework::bulletSpeed(CTRPluginFramework::MenuEntry*)
001020e0 00000144 T CTRPluginFramework::blueShellRide(CTRPluginFramework::MenuEntry*)
00102224 00000118 T CTRPluginFramework::itemWheel(CTRPluginFramework::MenuEntry*)
0010233c 00000110 T CTRPluginFramework::SetItem(CTRPluginFramework::MenuEntry*)
0010244c 000000ac T CTRPluginFramework::instantAcceleration(CTRPluginFramework::MenuEntry*)
001024f8 000000b4 T CTRPluginFramework::instantBackAcceleration(CTRPluginFramework::MenuEntry*)
001025ac 0000005c T CTRPluginFramework::instantStop(CTRPluginFramework::MenuEntry*)
00102608 0000000c T CTRPluginFramework::TwoHundredCC(CTRPluginFramework::MenuEntry*)
00102614 0000000c T CTRPluginFramework::FiveHundredCC(CTRPluginFramework::MenuEntry*)
00102620 00000118 T CTRPluginFramework::eliminationMode(CTRPluginFramework::MenuEntry*)
00102738 00000064 T CTRPluginFramework::disableFirstPersonView(CTRPluginFramework::MenuEntry*)
0010279c 000000ec T CTRPluginFramework::vrExtender(CTRPluginFramework::MenuEntry*)
00102888 0000010c T CTRPluginFramework::SetVR(CTRPluginFramework::MenuEntry*)
00102994 00000088 T CTRPluginFramework::randomVR(CTRPluginFramework::MenuEntry*)
00102a1c 000000b4 T CTRPluginFramework::unlockEverything(CTRPluginFramework::MenuEntry*)
00102ad0 00000048 T CTRPluginFramework::NoDC(CTRPluginFramework::MenuEntry*)
00102b18 0000005c T CTRPluginFramework::fastGame(CTRPluginFramework::MenuEntry*)
00102b74 0000020c T CTRPluginFramework::SetFlag(CTRPluginFramework::MenuEntry*)
00102d80 000000d0 T CTRPluginFramework::SetCoordinates(CTRPluginFramework::MenuEntry*)
00102e50 000000a0 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(char const*, std::allocator<char> const&) [clone .isra.15]
00102ef0 00000004 T CTRPluginFramework::PatchProcess(CTRPluginFramework::FwkSettings&)
00102ef4 00001728 T CTRPluginFramework::main()
0010461c 00000030 T CTRPluginFramework::HoldKey::HoldKey(unsigned long, CTRPluginFramework::Time)
0010461c 00000030 T CTRPluginFramework::HoldKey::HoldKey(unsigned long, CTRPluginFramework::Time)
0010464c 000000a0 T CTRPluginFramework::QuickMenu::~QuickMenu()
0010464c 000000a0 T CTRPluginFramework::QuickMenu::~QuickMenu()
001046ec 000000b0 t void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct<char*>(char*, char*, std::forward_iterator_tag) [clone .isra.47]
001046ec 000000b0 t void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct<char const*>(char const*, char const*, std::forward_iterator_tag) [clone .isra.66]
0010479c 000000cc T CTRPluginFramework::QuickMenu::QuickMenu(unsigned long)
0010479c 000000cc T CTRPluginFramework::QuickMenu::QuickMenu(unsigned long)
00104868 000002a8 W void std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::_M_realloc_insert<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&>(__gnu_cxx::__normal_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
00104b10 00000034 t _GLOBAL__sub_I__ZN18CTRPluginFramework13QuickMenuItemC2ERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEENS0_8ItemTypeE
00104b44 00000424 T CTRPluginFramework::KeepThreadMain(void*)
00104f68 00000038 T onLoadCro
00104fa0 00000164 T CTRPluginFramework::Initialize()
00105104 00000098 T CTRPluginFramework::ThreadExit()
0010519c 00000060 T abort
001051fc 00000024 T CTRPluginFramework::ThreadInit(void*)
00105220 00000068 T LaunchMainThread
00105288 0000000c t _GLOBAL__sub_I_g_mainThread
00105294 00000018 T CTRPluginFramework::Color::Color(unsigned char, unsigned char, unsigned char, unsigned char)
00105294 00000018 T CTRPluginFramework::Color::Color(unsigned char, unsigned char, unsigned char, unsigned char)
001052ac 00000020 T CTRPluginFramework::Color::Color(unsigned long)
001052ac 00000020 T CTRPluginFramework::Color::Color(unsigned long)
001052cc 00000008 T CTRPluginFramework::Color::ToU32() const
001052d8 00000120 T CTRPluginFramework::Color::Fade(double)
001053f8 00000040 T CTRPluginFramework::Color::operator<=(CTRPluginFramework::Color const&) const
00105438 00000080 T CTRPluginFramework::Color::operator*(CTRPluginFramework::Color const&) const
001054b8 000001d8 T CTRPluginFramework::Color::Blend(CTRPluginFramework::Color const&, CTRPluginFramework::Color::BlendMode) const
00105690 000001cc t _GLOBAL__sub_I__ZN18CTRPluginFramework5Color5BlackE
0010585c 00000080 T CTRPluginFramework::OSD::Notify(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, CTRPluginFramework::Color, CTRPluginFramework::Color)
001058dc 00000004 T CTRPluginFramework::OSD::TryLock()
001058e0 00000004 T CTRPluginFramework::OSD::Unlock()
001058e4 000000c4 T CTRPluginFramework::ConvertToFloat(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, bool)
001059a8 000000a8 T CTRPluginFramework::stou32(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, unsigned long&)
00105a50 00000050 T CTRPluginFramework::Keyboard::Keyboard(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
00105a50 00000050 T CTRPluginFramework::Keyboard::Keyboard(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
00105aa0 00000068 T CTRPluginFramework::Keyboard::Keyboard(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&)
00105aa0 00000068 T CTRPluginFramework::Keyboard::Keyboard(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&)
00105b08 0000002c T CTRPluginFramework::Keyboard::~Keyboard()
00105b08 0000002c T CTRPluginFramework::Keyboard::~Keyboard()
00105b34 00000008 T CTRPluginFramework::Keyboard::IsHexadecimal(bool)
00105b3c 00000008 T CTRPluginFramework::Keyboard::SetCompareCallback(bool (*)(void const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)) const
00105b44 0000001c T CTRPluginFramework::Keyboard::Populate(std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&)
00105b60 00000028 T CTRPluginFramework::Keyboard::Open() const
00105b88 00000078 T CTRPluginFramework::Keyboard::Open(float&) const
00105c00 000000b0 T CTRPluginFramework::Keyboard::Open(float&, float) const
00105cb0 00000054 T CTRPluginFramework::Keyboard::Open(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&) const
00105d04 00000068 T CTRPluginFramework::Keyboard::Open(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const
00105d6c 0000009c W unsigned long __gnu_cxx::__stoa<unsigned long, unsigned long, char, int>(unsigned long (*)(char const*, char**, int), char const*, char const*, unsigned int*, int)
00105e08 0000008c T CTRPluginFramework::ConvertToU16(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, bool)
00105e94 000000a8 T CTRPluginFramework::Keyboard::Open(unsigned short&) const
00105f3c 000000e8 T CTRPluginFramework::Keyboard::Open(unsigned short&, unsigned short) const
00106024 0000008c T CTRPluginFramework::ConvertToU32(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, bool)
001060b0 000000a8 T CTRPluginFramework::Keyboard::Open(unsigned long&) const
00106158 000000e8 T CTRPluginFramework::Keyboard::Open(unsigned long&, unsigned long) const
00106240 0000008c T CTRPluginFramework::ConvertToU8(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, bool)
001062cc 000000a8 T CTRPluginFramework::Keyboard::Open(unsigned char&) const
00106374 000000e8 T CTRPluginFramework::Keyboard::Open(unsigned char&, unsigned char) const
0010645c 0000004c T CTRPluginFramework::MenuEntry::MenuEntry(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, void (*)(CTRPluginFramework::MenuEntry*), std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
0010645c 0000004c T CTRPluginFramework::MenuEntry::MenuEntry(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, void (*)(CTRPluginFramework::MenuEntry*), std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
001064a8 00000030 T CTRPluginFramework::MenuEntry::~MenuEntry()
001064a8 00000030 T CTRPluginFramework::MenuEntry::~MenuEntry()
001064d8 00000008 T CTRPluginFramework::MenuEntry::RefreshNote() const
001064e0 00000028 t __tcf_0
00106508 00000078 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(char const*, std::allocator<char> const&) [clone .isra.40]
00106580 00000008 T CTRPluginFramework::Hotkey::operator=(unsigned long)
00106588 00000080 T CTRPluginFramework::Hotkey::AskForKeys()
00106608 0000007c T CTRPluginFramework::KeysToString[abi:cxx11](unsigned long)
00106684 000000d8 T CTRPluginFramework::Hotkey::ToString[abi:cxx11](bool) const
0010675c 0000001c T CTRPluginFramework::HotkeyManager::HotkeyManager(CTRPluginFramework::MenuEntry*)
0010675c 0000001c T CTRPluginFramework::HotkeyManager::HotkeyManager(CTRPluginFramework::MenuEntry*)
00106778 00000040 T CTRPluginFramework::HotkeyManager::~HotkeyManager()
00106778 00000040 T CTRPluginFramework::HotkeyManager::~HotkeyManager()
001067b8 00000010 T CTRPluginFramework::HotkeyManager::operator[](unsigned long)
001067c8 000000c0 T CTRPluginFramework::HotkeyManager::ToString[abi:cxx11]()
00106888 00000020 T CTRPluginFramework::HotkeyManager::Count()
001068a8 00000134 T CTRPluginFramework::HotkeyManager::AskForKeys()
001069dc 00000128 t _GLOBAL__sub_I__ZN18CTRPluginFramework6HotkeyC2Ev
00106b04 00000040 T CTRPluginFramework::MenuFolder::MenuFolder(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
00106b04 00000040 T CTRPluginFramework::MenuFolder::MenuFolder(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
00106b44 00000028 T CTRPluginFramework::MenuFolder::~MenuFolder()
00106b44 00000028 T CTRPluginFramework::MenuFolder::~MenuFolder()
00106b6c 00000010 T CTRPluginFramework::MenuFolder::Append(CTRPluginFramework::MenuEntry*) const
00106b7c 0000006c T CTRPluginFramework::PluginMenu::PluginMenu(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long, unsigned long, unsigned long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)
00106b7c 0000006c T CTRPluginFramework::PluginMenu::PluginMenu(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long, unsigned long, unsigned long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)
00106be8 00000014 T CTRPluginFramework::PluginMenu::Append(CTRPluginFramework::MenuFolder*) const
00106bfc 00000038 T CTRPluginFramework::PluginMenu::Run() const
00106c34 00000008 T CTRPluginFramework::PluginMenu::IsOpen()
00106c3c 00000010 T CTRPluginFramework::PluginMenu::GetRunningInstance()
00106c4c 0000000c T CTRPluginFramework::PluginMenu::SynchronizeWithFrame(bool)
00106c58 00000030 t CTRPluginFramework::GetCurrentTime()
00106c88 00000014 T CTRPluginFramework::Clock::Clock()
00106c88 00000014 T CTRPluginFramework::Clock::Clock()
00106c9c 00000038 T CTRPluginFramework::Clock::GetElapsedTime() const
00106cd4 00000030 T CTRPluginFramework::Clock::HasTimePassed(CTRPluginFramework::Time) const
00106d04 00000044 T CTRPluginFramework::Clock::Restart()
00106d48 00000014 T CTRPluginFramework::Controller::GetKeysDown()
00106d5c 0000001c T CTRPluginFramework::Controller::IsKeyDown(CTRPluginFramework::Key)
00106d78 0000001c T CTRPluginFramework::Controller::IsKeyPressed(CTRPluginFramework::Key)
00106d94 0000001c T CTRPluginFramework::Controller::IsKeyReleased(CTRPluginFramework::Key)
00106db0 0000001c T CTRPluginFramework::Controller::IsKeysDown(unsigned long)
00106dcc 0000002c T CTRPluginFramework::Controller::InjectKey(unsigned long)
00106df8 0000002c T CTRPluginFramework::Controller::Update()
00106e24 00000070 t CTRPluginFramework::Directory::_List() const::{lambda(FS_DirectoryEntry const&, FS_DirectoryEntry const&)#1}::operator()(FS_DirectoryEntry const&, FS_DirectoryEntry const&) const [clone .isra.11]
00106e94 00000128 t void std::__adjust_heap<__gnu_cxx::__normal_iterator<FS_DirectoryEntry*, std::vector<FS_DirectoryEntry, std::allocator<FS_DirectoryEntry> > >, int, FS_DirectoryEntry, __gnu_cxx::__ops::_Iter_comp_iter<CTRPluginFramework::Directory::_List() const::{lambda(FS_DirectoryEntry const&, FS_DirectoryEntry const&)#1}> >(__gnu_cxx::__normal_iterator<FS_DirectoryEntry*, std::vector<FS_DirectoryEntry, std::allocator<FS_DirectoryEntry> > >, int, __gnu_cxx::__normal_iterator<FS_DirectoryEntry*, std::vector<FS_DirectoryEntry, std::allocator<FS_DirectoryEntry> > >, FS_DirectoryEntry, __gnu_cxx::__ops::_Iter_comp_iter<CTRPluginFramework::Directory::_List() const::{lambda(FS_DirectoryEntry const&, FS_DirectoryEntry const&)#1}>) [clone .isra.42]
00106fbc 00000084 t void std::__make_heap<__gnu_cxx::__normal_iterator<FS_DirectoryEntry*, std::vector<FS_DirectoryEntry, std::allocator<FS_DirectoryEntry> > >, __gnu_cxx::__ops::_Iter_comp_iter<CTRPluginFramework::Directory::_List() const::{lambda(FS_DirectoryEntry const&, FS_DirectoryEntry const&)#1}> >(__gnu_cxx::__normal_iterator<FS_DirectoryEntry*, std::vector<FS_DirectoryEntry, std::allocator<FS_DirectoryEntry> > >, __gnu_cxx::__ops::_Iter_comp_iter<CTRPluginFramework::Directory::_List() const::{lambda(FS_DirectoryEntry const&, FS_DirectoryEntry const&)#1}>, __gnu_cxx::__ops::_Iter_comp_iter<CTRPluginFramework::Directory::_List() const::{lambda(FS_DirectoryEntry const&, FS_DirectoryEntry const&)#1}>&) [clone .isra.43]
00107040 0000007c t void std::__pop_heap<__gnu_cxx::__normal_iterator<FS_DirectoryEntry*, std::vector<FS_DirectoryEntry, std::allocator<FS_DirectoryEntry> > >, __gnu_cxx::__ops::_Iter_comp_iter<CTRPluginFramework::Directory::_List() const::{lambda(FS_DirectoryEntry const&, FS_DirectoryEntry const&)#1}> >(__gnu_cxx::__normal_iterator<FS_DirectoryEntry*, std::vector<FS_DirectoryEntry, std::allocator<FS_DirectoryEntry> > >, __gnu_cxx::__ops::_Iter_comp_iter<CTRPluginFramework::Directory::_List() const::{lambda(FS_DirectoryEntry const&, FS_DirectoryEntry const&)#1}>, __gnu_cxx::__ops::_Iter_comp_iter<CTRPluginFramework::Directory::_List() const::{lambda(FS_DirectoryEntry const&, FS_DirectoryEntry const&)#1}>, __gnu_cxx::__ops::_Iter_comp_iter<CTRPluginFramework::Directory::_List() const::{lambda(FS_DirectoryEntry const&, FS_DirectoryEntry const&)#1}>&) [clone .isra.44]
001070bc 00000078 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(char const*, std::allocator<char> const&) [clone .isra.53]
00107134 00000064 t void std::__unguarded_linear_insert<__gnu_cxx::__normal_iterator<FS_DirectoryEntry*, std::vector<FS_DirectoryEntry, std::allocator<FS_DirectoryEntry> > >, __gnu_cxx::__ops::_Val_comp_iter<CTRPluginFramework::Directory::_List() const::{lambda(FS_DirectoryEntry const&, FS_DirectoryEntry const&)#1}> >(__gnu_cxx::__normal_iterator<FS_DirectoryEntry*, std::vector<FS_DirectoryEntry, std::allocator<FS_DirectoryEntry> > >, __gnu_cxx::__ops::_Val_comp_iter<CTRPluginFramework::Directory::_List() const::{lambda(FS_DirectoryEntry const&, FS_DirectoryEntry const&)#1}>) [clone .isra.69]
00107198 00000090 t void std::__insertion_sort<__gnu_cxx::__normal_iterator<FS_DirectoryEntry*, std::vector<FS_DirectoryEntry, std::allocator<FS_DirectoryEntry> > >, __gnu_cxx::__ops::_Iter_comp_iter<CTRPluginFramework::Directory::_List() const::{lambda(FS_DirectoryEntry const&, FS_DirectoryEntry const&)#1}> >(__gnu_cxx::__normal_iterator<FS_DirectoryEntry*, std::vector<FS_DirectoryEntry, std::allocator<FS_DirectoryEntry> > >, __gnu_cxx::__ops::_Iter_comp_iter<CTRPluginFramework::Directory::_List() const::{lambda(FS_DirectoryEntry const&, FS_DirectoryEntry const&)#1}>, __gnu_cxx::__ops::_Iter_comp_iter<CTRPluginFramework::Directory::_List() const::{lambda(FS_DirectoryEntry const&, FS_DirectoryEntry const&)#1}>) [clone .isra.81]
00107228 00000114 T CTRPluginFramework::_Path::SdmcFixPath(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)
0010733c 00000074 T CTRPluginFramework::_Path::SdmcUtf16Path(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)
001073b0 0000008c T CTRPluginFramework::Directory::ChangeWorkingDirectory(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
0010743c 00000078 T CTRPluginFramework::Directory::Create(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
001074b4 00000078 T CTRPluginFramework::Directory::IsExists(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
0010752c 00000034 T CTRPluginFramework::Directory::Close() const
00107560 00000100 T CTRPluginFramework::Directory::Open(CTRPluginFramework::Directory&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, bool)
00107660 00000014 T CTRPluginFramework::Directory::GetFullName[abi:cxx11]() const
00107674 00000008 T CTRPluginFramework::Directory::IsOpen() const
0010767c 0000002c T CTRPluginFramework::Directory::Directory()
0010767c 0000002c T CTRPluginFramework::Directory::Directory()
001076a8 00000034 T CTRPluginFramework::Directory::Directory(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, bool)
001076a8 00000034 T CTRPluginFramework::Directory::Directory(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, bool)
001076dc 0000002c T CTRPluginFramework::Directory::~Directory()
001076dc 0000002c T CTRPluginFramework::Directory::~Directory()
00107708 00000100 W void std::vector<FS_DirectoryEntry, std::allocator<FS_DirectoryEntry> >::_M_realloc_insert<FS_DirectoryEntry const&>(__gnu_cxx::__normal_iterator<FS_DirectoryEntry*, std::vector<FS_DirectoryEntry, std::allocator<FS_DirectoryEntry> > >, FS_DirectoryEntry const&)
00107808 00000044 W std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::push_back(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
0010784c 0000004c W std::enable_if<std::__and_<std::__not_<std::__is_tuple_like<FS_DirectoryEntry> >, std::is_move_constructible<FS_DirectoryEntry>, std::is_move_assignable<FS_DirectoryEntry> >::value, void>::type std::swap<FS_DirectoryEntry>(FS_DirectoryEntry&, FS_DirectoryEntry&)
00107898 00000184 t void std::__introsort_loop<__gnu_cxx::__normal_iterator<FS_DirectoryEntry*, std::vector<FS_DirectoryEntry, std::allocator<FS_DirectoryEntry> > >, int, __gnu_cxx::__ops::_Iter_comp_iter<CTRPluginFramework::Directory::_List() const::{lambda(FS_DirectoryEntry const&, FS_DirectoryEntry const&)#1}> >(__gnu_cxx::__normal_iterator<FS_DirectoryEntry*, std::vector<FS_DirectoryEntry, std::allocator<FS_DirectoryEntry> > >, __gnu_cxx::__ops::_Iter_comp_iter<CTRPluginFramework::Directory::_List() const::{lambda(FS_DirectoryEntry const&, FS_DirectoryEntry const&)#1}>, int, __gnu_cxx::__ops::_Iter_comp_iter<CTRPluginFramework::Directory::_List() const::{lambda(FS_DirectoryEntry const&, FS_DirectoryEntry const&)#1}>)
00107a1c 0000010c T CTRPluginFramework::Directory::_List() const
00107b28 00000168 T CTRPluginFramework::Directory::ListFiles(std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const
00107c90 00000160 T CTRPluginFramework::Directory::ListDirectories(std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const
00107df0 00000038 t _GLOBAL__sub_I__ZN18CTRPluginFramework5_Path11SdmcFixPathERNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE
00107e28 000000e0 T CTRPluginFramework::File::Rename(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
00107f08 00000060 T CTRPluginFramework::File::Remove(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
00107f68 00000088 T CTRPluginFramework::File::Exists(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
00107ff0 0000005c T CTRPluginFramework::File::Close() const
0010804c 000000dc T CTRPluginFramework::File::Open(CTRPluginFramework::File&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, int)
00108128 000000b0 T CTRPluginFramework::File::Read(void*, unsigned long) const
001081d8 000000e8 T CTRPluginFramework::File::Write(void const*, unsigned long)
001082c0 0000002c T CTRPluginFramework::File::WriteLine(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)
001082ec 000000b0 T CTRPluginFramework::File::Seek(long long, CTRPluginFramework::File::SeekPos) const
0010839c 00000008 T CTRPluginFramework::File::Tell() const
001083a4 00000010 T CTRPluginFramework::File::Rewind() const
001083b4 00000008 T CTRPluginFramework::File::Flush() const
001083bc 00000044 T CTRPluginFramework::File::GetSize() const
00108400 00000008 T CTRPluginFramework::File::IsOpen() const
00108408 00000014 T CTRPluginFramework::File::GetFullName[abi:cxx11]() const
0010841c 00000034 T CTRPluginFramework::File::File()
0010841c 00000034 T CTRPluginFramework::File::File()
00108450 00000040 T CTRPluginFramework::File::File(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned long)
00108450 00000040 T CTRPluginFramework::File::File(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned long)
00108490 00000100 T CTRPluginFramework::FwkSettings::SetThemeDefault()
00108590 00000010 T CTRPluginFramework::Process::GetHandle()
001085a0 00000010 T CTRPluginFramework::Process::GetTitleID()
001085b0 00000060 T CTRPluginFramework::Process::GetTitleID(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)
00108610 00000038 T CTRPluginFramework::Process::GetName(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)
00108648 00000024 T CTRPluginFramework::Process::GetTextSize()
0010866c 0000005c T CTRPluginFramework::Process::ProtectMemory(unsigned long, unsigned long, int)
001086c8 00000074 T CTRPluginFramework::Process::ProtectRegion(unsigned long, int)
0010873c 000000a8 T CTRPluginFramework::Process::CheckAddress(unsigned long, unsigned long)
001087e4 000000b8 T CTRPluginFramework::Process::CopyMemory(void*, void const*, unsigned long)
0010889c 000000b0 T CTRPluginFramework::Process::CheckRegion(unsigned long, unsigned long&, unsigned long)
0010894c 0000003c T CTRPluginFramework::Process::Write32(unsigned long, unsigned long)
00108988 00000028 T CTRPluginFramework::Process::Write16(unsigned long, unsigned short)
001089b0 00000020 T CTRPluginFramework::Process::Write8(unsigned long, unsigned char)
001089d0 00000028 T CTRPluginFramework::Process::WriteFloat(unsigned long, float)
001089f8 00000040 T CTRPluginFramework::Process::Read32(unsigned long, unsigned long&)
00108a38 0000002c T CTRPluginFramework::Process::Read16(unsigned long, unsigned short&)
00108a64 00000024 T CTRPluginFramework::Process::Read8(unsigned long, unsigned char&)
00108a88 00000024 T CTRPluginFramework::Process::ReadFloat(unsigned long, float&)
00108aac 00000048 T CTRPluginFramework::Sleep(CTRPluginFramework::Time)
00108af4 00000010 T CTRPluginFramework::System::IsNew3DS()
00108b04 00000010 T CTRPluginFramework::System::IsLoaderNTR()
00108b14 00000014 T CTRPluginFramework::Time::Time()
00108b14 00000014 T CTRPluginFramework::Time::Time()
00108b28 00000020 T CTRPluginFramework::Time::AsSeconds() const
00108b48 00000018 T CTRPluginFramework::Time::AsMilliseconds() const
00108b60 00000008 T CTRPluginFramework::Time::AsMicroseconds() const
00108b68 00000028 T CTRPluginFramework::Seconds(float)
00108b90 00000010 T CTRPluginFramework::Milliseconds(int)
00108ba0 00000008 T CTRPluginFramework::Microseconds(long long)
00108ba8 00000014 T CTRPluginFramework::operator<(CTRPluginFramework::Time, CTRPluginFramework::Time)
00108bbc 00000014 T CTRPluginFramework::operator>(CTRPluginFramework::Time, CTRPluginFramework::Time)
00108bd0 00000014 T CTRPluginFramework::operator>=(CTRPluginFramework::Time, CTRPluginFramework::Time)
00108be4 00000020 T CTRPluginFramework::operator-(CTRPluginFramework::Time, CTRPluginFramework::Time)
00108c04 0000004c T CTRPluginFramework::operator/(CTRPluginFramework::Time, float)
00108c50 00000018 t _GLOBAL__sub_I__ZN18CTRPluginFramework4Time4ZeroE
00108c68 00000064 t void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct<char const*>(char const*, char const*, std::forward_iterator_tag) [clone .isra.17]
00108ccc 00000074 T CTRPluginFramework::Utils::Format[abi:cxx11](char const*, ...)
00108d40 0000005c T CTRPluginFramework::Utils::ToHex[abi:cxx11](unsigned long)
00108d9c 00000080 T CTRPluginFramework::Utils::ToString[abi:cxx11](float, int)
00108e1c 000000b4 T CTRPluginFramework::Utils::GetSize(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
00108ed0 00000140 T CTRPluginFramework::Utils::RemoveLastChar(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)
00109010 00000038 W std::mersenne_twister_engine<unsigned int, 32u, 624u, 397u, 31u, 2567483615u, 11u, 4294967295u, 7u, 2636928640u, 15u, 4022730752u, 18u, 1812433253u>::seed(unsigned int)
00109048 0000001c T CTRPluginFramework::InitializeRandomEngine()
00109064 0000010c W std::mersenne_twister_engine<unsigned int, 32u, 624u, 397u, 31u, 2567483615u, 11u, 4294967295u, 7u, 2636928640u, 15u, 4022730752u, 18u, 1812433253u>::operator()()
00109170 00000068 T CTRPluginFramework::Utils::Random(unsigned long, unsigned long)
001091d8 0000001c t _GLOBAL__sub_I__ZN18CTRPluginFramework5Utils6FormatB5cxx11EPKcz
001091f4 00000078 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(char const*, std::allocator<char> const&) [clone .isra.24]
0010926c 0000001c W CTRPluginFramework::File::~File()
0010926c 0000001c W CTRPluginFramework::File::~File()
00109288 000000a0 W CTRPluginFramework::BMPImage::BMPImage(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
00109288 000000a0 W CTRPluginFramework::BMPImage::BMPImage(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
00109328 00000060 W CTRPluginFramework::BMPImage::BMPImage(unsigned long, unsigned long)
00109328 00000060 W CTRPluginFramework::BMPImage::BMPImage(unsigned long, unsigned long)
00109388 00000010 W CTRPluginFramework::BMPImage::DataClear()
00109398 00000134 W CTRPluginFramework::BMPImage::Resample(CTRPluginFramework::BMPImage&, int, int)
001094cc 0000002c T CTRPluginFramework::GetRatio(int, int, int, int)
001094f8 00000138 T CTRPluginFramework::PostProcess(CTRPluginFramework::BMPImage*, int, int)
00109630 00000298 T CTRPluginFramework::Preferences::OpenConfigFile(CTRPluginFramework::File&, CTRPluginFramework::Preferences::HeaderV1&)
001098c8 000000d0 T CTRPluginFramework::Preferences::LoadSettings()
00109998 000000b8 T CTRPluginFramework::Preferences::LoadSavedEnabledCheats()
00109a50 000000b8 T CTRPluginFramework::Preferences::LoadSavedFavorites()
00109b08 0000005c T CTRPluginFramework::Preferences::LoadHotkeysFromFile()
00109b64 00000194 T CTRPluginFramework::Preferences::LoadBackgrounds()
00109cf8 00000080 T CTRPluginFramework::Preferences::UnloadBackgrounds()
00109d78 000001ec T CTRPluginFramework::Preferences::WriteSettings()
00109f64 00000004 T CTRPluginFramework::Preferences::Initialize()
00109f68 00000078 t _GLOBAL__sub_I__ZN18CTRPluginFramework11Preferences18topBackgroundImageE
00109fe0 00000008 t int CTRPluginFramework::BMPImage::ReadFromFile<unsigned int>(CTRPluginFramework::File&, unsigned int&) [clone .isra.9]
00109fe8 00000078 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(char const*, std::allocator<char> const&) [clone .isra.25]
0010a060 0000000c W CTRPluginFramework::BMPImage::BitmapFileHeader::Clear()
0010a06c 0000000c W CTRPluginFramework::BMPImage::BitmapInformationHeader::Clear()
0010a078 00000100 W CTRPluginFramework::BMPImage::ReadBIH(CTRPluginFramework::File&, CTRPluginFramework::BMPImage::BitmapInformationHeader&)
0010a178 00000030 T CTRPluginFramework::BMPImage::~BMPImage()
0010a178 00000030 T CTRPluginFramework::BMPImage::~BMPImage()
0010a1a8 000000cc T CTRPluginFramework::BMPImage::FillWithImg(CTRPluginFramework::BMPImage const&)
0010a274 00000114 T CTRPluginFramework::BMPImage::Draw(int, int)
0010a388 00000204 T CTRPluginFramework::BMPImage::Draw(CTRPluginFramework::Rect<int> const&, float)
0010a58c 00000058 T CTRPluginFramework::BMPImage::CreateBitmap()
0010a5e4 000004d4 T CTRPluginFramework::BMPImage::LoadBitmap()
0010aab8 00000010 T CTRPluginFramework::Glyph::Width() const
0010aac8 00000060 T CTRPluginFramework::Font::Initialize()
0010ab28 00000354 T CTRPluginFramework::GetOriginalGlyph(unsigned long)
0010ae7c 00000308 T CTRPluginFramework::ShrinkGlyph(unsigned char*, unsigned char*)
0010b184 000000f4 T CTRPluginFramework::Font::CacheGlyph(unsigned long)
0010b278 00000068 T CTRPluginFramework::Font::GetGlyph(unsigned char*&)
0010b2e0 00000020 T CTRPluginFramework::Font::GetGlyph(char)
0010b300 0000002c W std::__cxx11::list<CTRPluginFramework::OSDImpl::OSDMessage*, std::allocator<CTRPluginFramework::OSDImpl::OSDMessage*> >::~list()
0010b300 0000002c W std::__cxx11::list<CTRPluginFramework::OSDImpl::OSDMessage*, std::allocator<CTRPluginFramework::OSDImpl::OSDMessage*> >::~list()
0010b32c 00000020 W std::vector<bool (*)(CTRPluginFramework::Screen const&), std::allocator<bool (*)(CTRPluginFramework::Screen const&)> >::~vector()
0010b32c 00000020 W std::vector<bool (*)(CTRPluginFramework::Screen const&), std::allocator<bool (*)(CTRPluginFramework::Screen const&)> >::~vector()
0010b34c 000000b8 t CTRPluginFramework::memsearch(unsigned char*, void const*, unsigned long, unsigned long) [clone .constprop.32]
0010b404 00000054 t CTRPluginFramework::SearchStmfd(unsigned long, unsigned long, unsigned long, bool&) [clone .part.0] [clone .constprop.36]
0010b458 0000009c T CTRPluginFramework::OSDImpl::OSDMessage::OSDMessage(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::Color const&, CTRPluginFramework::Color const&)
0010b458 0000009c T CTRPluginFramework::OSDImpl::OSDMessage::OSDMessage(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::Color const&, CTRPluginFramework::Color const&)
0010b4f4 0000000c T CTRPluginFramework::OSDImpl::Lock()
0010b500 0000001c T CTRPluginFramework::OSDImpl::TryLock()
0010b51c 0000000c T CTRPluginFramework::OSDImpl::Unlock()
0010b528 000000e4 T CTRPluginFramework::OSDImpl::Draw()
0010b60c 000000d8 T CTRPluginFramework::OSDImpl::UpdateScreens()
0010b6e4 000001b8 T CTRPluginFramework::InstallOSD()
0010b89c 00000028 T CTRPluginFramework::OSDImpl::_Initialize()
0010b8c4 000000e0 t _GLOBAL__sub_I__ZN18CTRPluginFramework7OSDImpl12DrawSaveIconE
0010b9a4 00000108 T CTRPluginFramework::OSDImpl::Update()
0010baac 00000618 T CTRPluginFramework::OSDImpl::CallbackGlobal(unsigned long, void*, void*, int, int)
0010c0c4 00000068 T CTRPluginFramework::OSDImpl::MainCallback(unsigned long, int, void*, void*, int, int, int)
0010c12c 00000064 T CTRPluginFramework::OSDImpl::MainCallback2(unsigned long, unsigned long*, unsigned long, unsigned long)
0010c190 0000002c T CTRPluginFramework::PrivColor::_ReadRGBA8(unsigned char*)
0010c1bc 00000024 T CTRPluginFramework::PrivColor::_ReadBGR8(unsigned char*)
0010c1e0 00000038 T CTRPluginFramework::PrivColor::_ReadRGB565(unsigned char*)
0010c218 00000038 T CTRPluginFramework::PrivColor::_ReadRGB5A1(unsigned char*)
0010c250 00000030 T CTRPluginFramework::PrivColor::_ReadRGBA4(unsigned char*)
0010c280 00000028 T CTRPluginFramework::PrivColor::_WriteRGBA8(unsigned char*, CTRPluginFramework::Color const&)
0010c2a8 00000020 T CTRPluginFramework::PrivColor::_WriteBGR8(unsigned char*, CTRPluginFramework::Color const&)
0010c2c8 0000003c T CTRPluginFramework::PrivColor::_WriteRGB565(unsigned char*, CTRPluginFramework::Color const&)
0010c304 00000048 T CTRPluginFramework::PrivColor::_WriteRGB5A1(unsigned char*, CTRPluginFramework::Color const&)
0010c34c 00000044 T CTRPluginFramework::PrivColor::_WriteRGBA4(unsigned char*, CTRPluginFramework::Color const&)
0010c390 00000104 T CTRPluginFramework::PrivColor::SetFormat(GSPGPU_FramebufferFormats)
0010c494 0000003c T CTRPluginFramework::PrivColor::UseClamp(bool, CTRPluginFramework::Rect<int>)
0010c4d0 00000070 W CTRPluginFramework::Rect<int>::Contains(int, int) const
0010c540 00000084 T CTRPluginFramework::PrivColor::_WriteRGBA8Clamp(unsigned char*, CTRPluginFramework::Color const&)
0010c5c4 00000078 T CTRPluginFramework::PrivColor::_WriteBGR8Clamp(unsigned char*, CTRPluginFramework::Color const&)
0010c63c 00000098 T CTRPluginFramework::PrivColor::_WriteRGB565Clamp(unsigned char*, CTRPluginFramework::Color const&)
0010c6d4 000000a4 T CTRPluginFramework::PrivColor::_WriteRGB5A1Clamp(unsigned char*, CTRPluginFramework::Color const&)
0010c778 000000a0 T CTRPluginFramework::PrivColor::_WriteRGBA4Clamp(unsigned char*, CTRPluginFramework::Color const&)
0010c818 00000020 t _GLOBAL__sub_I__ZN18CTRPluginFramework9PrivColor15FromFramebufferE
0010c838 0000003c T CTRPluginFramework::Renderer::SetTarget(CTRPluginFramework::Target)
0010c874 00000278 T CTRPluginFramework::Renderer::MenuSelector(int, int, int, int)
0010caec 00000120 T CTRPluginFramework::Renderer::EndFrame(bool)
0010cc0c 0000001c t _GLOBAL__sub_I__ZN18CTRPluginFramework8Renderer7_targetE
0010cc28 00000044 t CTRPluginFramework::Line<int>* std::__uninitialized_move_if_noexcept_a<CTRPluginFramework::Line<int>*, CTRPluginFramework::Line<int>*, std::allocator<CTRPluginFramework::Line<int> > >(CTRPluginFramework::Line<int>*, CTRPluginFramework::Line<int>*, CTRPluginFramework::Line<int>*, std::allocator<CTRPluginFramework::Line<int> >&) [clone .isra.41]
0010cc6c 000000a8 T CTRPluginFramework::Renderer::DrawLine(int, int, int, CTRPluginFramework::Color const&, int)
0010cd14 000000a8 T CTRPluginFramework::Renderer::DrawLine(CTRPluginFramework::Vector<int>&, CTRPluginFramework::Vector<int>&, CTRPluginFramework::Color const&)
0010cdbc 000000c0 T CTRPluginFramework::Renderer::DrawStippledLine(int, int, int, CTRPluginFramework::Color const&, int)
0010ce7c 00000094 T CTRPluginFramework::Renderer::DrawRect(int, int, int, int, CTRPluginFramework::Color const&, bool, int)
0010cf10 000000a8 T CTRPluginFramework::Renderer::DrawRect(CTRPluginFramework::Rect<int> const&, CTRPluginFramework::Color const&, bool)
0010cfb8 00000054 T CTRPluginFramework::Renderer::DrawRect2(CTRPluginFramework::Rect<int> const&, CTRPluginFramework::Color const&, CTRPluginFramework::Color const&)
0010d00c 00000044 W std::_Deque_base<CTRPluginFramework::Vector<int>, std::allocator<CTRPluginFramework::Vector<int> > >::~_Deque_base()
0010d00c 00000044 W std::_Deque_base<CTRPluginFramework::Vector<int>, std::allocator<CTRPluginFramework::Vector<int> > >::~_Deque_base()
0010d050 00000054 W std::deque<CTRPluginFramework::Vector<int>, std::allocator<CTRPluginFramework::Vector<int> > >::pop_front()
0010d0a4 00000194 W void std::deque<CTRPluginFramework::Vector<int>, std::allocator<CTRPluginFramework::Vector<int> > >::emplace_back<CTRPluginFramework::Vector<int> >(CTRPluginFramework::Vector<int>&&)
0010d238 000000b0 W void std::vector<CTRPluginFramework::Line<int>, std::allocator<CTRPluginFramework::Line<int> > >::_M_realloc_insert<CTRPluginFramework::Line<int> >(__gnu_cxx::__normal_iterator<CTRPluginFramework::Line<int>*, std::vector<CTRPluginFramework::Line<int>, std::allocator<CTRPluginFramework::Line<int> > > >, CTRPluginFramework::Line<int>&&)
0010d2e8 00000044 W void std::vector<CTRPluginFramework::Line<int>, std::allocator<CTRPluginFramework::Line<int> > >::emplace_back<CTRPluginFramework::Line<int> >(CTRPluginFramework::Line<int>&&)
0010d330 0000068c T CTRPluginFramework::Renderer::ComputeRoundedRectangle(std::vector<CTRPluginFramework::Line<int>, std::allocator<CTRPluginFramework::Line<int> > >&, CTRPluginFramework::Rect<int> const&, float, int)
0010d9bc 0000003c T CTRPluginFramework::Renderer::DrawPixel(int, int, CTRPluginFramework::Color const&)
0010d9f8 00000140 T CTRPluginFramework::Renderer::DrawCharacter(int, int, int, CTRPluginFramework::Color const&)
0010db38 00000144 T CTRPluginFramework::Renderer::DrawCharacter(int, int, int, CTRPluginFramework::Color const&, CTRPluginFramework::Color const&)
0010dc7c 000000c8 T CTRPluginFramework::Renderer::DrawString(char const*, int, int&, CTRPluginFramework::Color)
0010dd44 000001c4 T CTRPluginFramework::Renderer::DrawString(char const*, int, int&, CTRPluginFramework::Color, CTRPluginFramework::Color)
0010df08 00000030 T CTRPluginFramework::Renderer::LinuxFontSize(char const*)
0010df38 00000130 T CTRPluginFramework::Renderer::FontCalcGlyphPos(fontGlyphPos_s*, charWidthInfo_s**, int, float, float)
0010e068 000000d4 T CTRPluginFramework::Renderer::GetTextSize(char const*)
0010e13c 0000014c T CTRPluginFramework::Renderer::GetTextInfos(char const*, int&, float&, float)
0010e288 00000104 T CTRPluginFramework::Renderer::DrawGlyph(CTRPluginFramework::Glyph*, int, int, CTRPluginFramework::Color)
0010e38c 00000154 T CTRPluginFramework::Renderer::DrawGlyph(CTRPluginFramework::Glyph*, int, int, float&, CTRPluginFramework::Color)
0010e4e0 00000198 T CTRPluginFramework::Renderer::DrawSysStringReturn(unsigned char const*, int, int&, int, CTRPluginFramework::Color, int)
0010e678 000001ec T CTRPluginFramework::Renderer::DrawSysString(char const*, int, int&, int, CTRPluginFramework::Color, float, char const*)
0010e864 00000070 T CTRPluginFramework::Renderer::DrawSysCheckBox(char const*, int, int&, int, CTRPluginFramework::Color, bool, float)
0010e8d4 0000006c T CTRPluginFramework::Renderer::DrawSysFolder(char const*, int, int&, int, CTRPluginFramework::Color, float)
0010e940 00000024 t _GLOBAL__sub_I__ZN18CTRPluginFramework8Renderer16FontCalcGlyphPosEP14fontGlyphPos_sPP15charWidthInfo_siff
0010e964 00000028 T CTRPluginFramework::Window::~Window()
0010e964 00000028 T CTRPluginFramework::Window::~Window()
0010e98c 00000004 W CTRPluginFramework::IconButton<CTRPluginFramework::Window, void>::~IconButton()
0010e98c 00000004 W CTRPluginFramework::IconButton<CTRPluginFramework::Window, void>::~IconButton()
0010e990 0000001c W CTRPluginFramework::IconButton<CTRPluginFramework::Window, void>::Draw()
0010e9ac 00000014 W CTRPluginFramework::IconButton<CTRPluginFramework::Window, void>::~IconButton()
0010e9c0 00000064 W CTRPluginFramework::IconButton<CTRPluginFramework::Window, void>::operator()()
0010ea24 000000c8 T CTRPluginFramework::Window::Window(unsigned long, unsigned long, unsigned long, unsigned long, bool, CTRPluginFramework::BMPImage*)
0010ea24 000000c8 T CTRPluginFramework::Window::Window(unsigned long, unsigned long, unsigned long, unsigned long, bool, CTRPluginFramework::BMPImage*)
0010eaec 00000064 T CTRPluginFramework::Window::Draw() const
0010eb50 000000d8 T CTRPluginFramework::Window::Draw(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const
0010ec28 00000018 T CTRPluginFramework::Window::Update(bool, CTRPluginFramework::Vector<int> const&) const
0010ec40 00000018 T CTRPluginFramework::Window::MustClose() const
0010ec58 00000014 T CTRPluginFramework::Window::Close() const
0010ec6c 00000004 T CTRPluginFramework::Window::GetRect() const
0010ec70 0000002c T CTRPluginFramework::Window::Initialize()
0010ec9c 00000080 W CTRPluginFramework::IconButton<CTRPluginFramework::Window, void>::Update(bool, CTRPluginFramework::Vector<int> const&)
0010ed1c 000000a8 t _GLOBAL__sub_I__ZN18CTRPluginFramework6Window12BottomWindowE
0010edc4 000001b0 W CTRPluginFramework::Icon::DrawImg(unsigned char*, int, int, int, int)
0010ef74 0000002c T CTRPluginFramework::Icon::DrawAbout(int, int)
0010efa0 0000003c T CTRPluginFramework::Icon::DrawCapsLockOn(int, int, bool)
0010efdc 0000003c T CTRPluginFramework::Icon::DrawCheckBox(int, int, bool)
0010f018 0000003c T CTRPluginFramework::Icon::DrawClearSymbol(int, int, bool)
0010f054 0000003c T CTRPluginFramework::Icon::DrawClipboard(int, int, bool)
0010f090 0000003c T CTRPluginFramework::Icon::DrawClose(int, int, bool)
0010f0cc 0000002c T CTRPluginFramework::Icon::DrawController(int, int)
0010f0f8 0000003c T CTRPluginFramework::Icon::DrawCut(int, int, bool)
0010f134 0000003c T CTRPluginFramework::Icon::DrawDuplicate(int, int, bool)
0010f170 0000003c T CTRPluginFramework::Icon::DrawEdit(int, int, bool)
0010f1ac 0000003c T CTRPluginFramework::Icon::DrawEnterKey(int, int, bool)
0010f1e8 0000002c T CTRPluginFramework::Icon::DrawFolder(int, int)
0010f214 0000003c T CTRPluginFramework::Icon::DrawAddFavorite(int, int, bool)
0010f250 0000002c T CTRPluginFramework::Icon::DrawFavorite(int, int)
0010f27c 0000002c T CTRPluginFramework::Icon::DrawFile(int, int)
0010f2a8 0000002c T CTRPluginFramework::Icon::DrawGameController(int, int)
0010f2d4 0000003c T CTRPluginFramework::Icon::DrawGameController(int, int, bool)
0010f310 0000002c T CTRPluginFramework::Icon::DrawGrid(int, int)
0010f33c 0000003c T CTRPluginFramework::Icon::DrawInfo(int, int, bool)
0010f378 0000002c T CTRPluginFramework::Icon::DrawGuide(int, int)
0010f3a4 00000034 T CTRPluginFramework::Icon::DrawHandCursor(int, int)
0010f3d8 0000003c T CTRPluginFramework::Icon::DrawKeyboard(int, int, bool)
0010f414 0000002c T CTRPluginFramework::Icon::DrawMore(int, int)
0010f440 0000003c T CTRPluginFramework::Icon::DrawPlus(int, int, bool)
0010f47c 0000002c T CTRPluginFramework::Icon::DrawRAM(int, int)
0010f4a8 0000002c T CTRPluginFramework::Icon::DrawRestart(int, int)
0010f4d4 0000002c T CTRPluginFramework::Icon::DrawRocket(int, int)
0010f500 0000002c T CTRPluginFramework::Icon::DrawSave(int, int)
0010f52c 0000002c T CTRPluginFramework::Icon::DrawSearch(int, int)
0010f558 0000002c T CTRPluginFramework::Icon::DrawSettings(int, int)
0010f584 0000002c T CTRPluginFramework::Icon::DrawShutdown(int, int)
0010f5b0 0000002c T CTRPluginFramework::Icon::DrawTools(int, int)
0010f5dc 0000003c T CTRPluginFramework::Icon::DrawTrash(int, int, bool)
0010f618 0000001c W CTRPluginFramework::IconButton<CTRPluginFramework::CheckBox, void>::Draw()
0010f634 00000004 W CTRPluginFramework::IconButton<CTRPluginFramework::CheckBox, void>::~IconButton()
0010f634 00000004 W CTRPluginFramework::IconButton<CTRPluginFramework::CheckBox, void>::~IconButton()
0010f638 00000014 W CTRPluginFramework::IconButton<CTRPluginFramework::CheckBox, void>::~IconButton()
0010f64c 00000064 W CTRPluginFramework::IconButton<CTRPluginFramework::CheckBox, void>::operator()()
0010f6b0 00000084 t void __gnu_cxx::new_allocator<CTRPluginFramework::CheckBox>::construct<CTRPluginFramework::CheckBox, CTRPluginFramework::CheckBox>(CTRPluginFramework::CheckBox*, CTRPluginFramework::CheckBox&&) [clone .isra.16]
0010f734 000000c8 t CTRPluginFramework::CheckBox* std::__uninitialized_move_if_noexcept_a<CTRPluginFramework::CheckBox*, CTRPluginFramework::CheckBox*, std::allocator<CTRPluginFramework::CheckBox> >(CTRPluginFramework::CheckBox*, CTRPluginFramework::CheckBox*, CTRPluginFramework::CheckBox*, std::allocator<CTRPluginFramework::CheckBox>&) [clone .isra.41]
0010f7fc 00000090 T CTRPluginFramework::HotkeysModifier::_DrawTop() const
0010f88c 0000011c T CTRPluginFramework::HotkeysModifier::_DrawBottom()
0010f9a8 00000070 T CTRPluginFramework::HotkeysModifier::_Update()
0010fa18 000000a0 T CTRPluginFramework::HotkeysModifier::operator()()
0010fab8 0000002c W void std::_Destroy_aux<false>::__destroy<CTRPluginFramework::CheckBox*>(CTRPluginFramework::CheckBox*, CTRPluginFramework::CheckBox*)
0010fae4 00000030 T CTRPluginFramework::HotkeysModifier::~HotkeysModifier()
0010fae4 00000030 T CTRPluginFramework::HotkeysModifier::~HotkeysModifier()
0010fb14 000000d4 W void std::vector<CTRPluginFramework::CheckBox, std::allocator<CTRPluginFramework::CheckBox> >::_M_realloc_insert<CTRPluginFramework::CheckBox>(__gnu_cxx::__normal_iterator<CTRPluginFramework::CheckBox*, std::vector<CTRPluginFramework::CheckBox, std::allocator<CTRPluginFramework::CheckBox> > >, CTRPluginFramework::CheckBox&&)
0010fbe8 0000003c W void std::vector<CTRPluginFramework::CheckBox, std::allocator<CTRPluginFramework::CheckBox> >::emplace_back<CTRPluginFramework::CheckBox>(CTRPluginFramework::CheckBox&&)
0010fc24 0000011c T CTRPluginFramework::HotkeysModifier::HotkeysModifier(unsigned long&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
0010fc24 0000011c T CTRPluginFramework::HotkeysModifier::HotkeysModifier(unsigned long&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
0010fd40 00000080 W CTRPluginFramework::IconButton<CTRPluginFramework::CheckBox, void>::Update(bool, CTRPluginFramework::Vector<int> const&)
0010fdc0 00000078 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(char const*, std::allocator<char> const&) [clone .isra.47]
0010fe38 000000a4 t CTRPluginFramework::TouchKey* std::__uninitialized_move_if_noexcept_a<CTRPluginFramework::TouchKey*, CTRPluginFramework::TouchKey*, std::allocator<CTRPluginFramework::TouchKey> >(CTRPluginFramework::TouchKey*, CTRPluginFramework::TouchKey*, CTRPluginFramework::TouchKey*, std::allocator<CTRPluginFramework::TouchKey>&) [clone .isra.69]
0010fedc 00000144 T CTRPluginFramework::KeyboardImpl::KeyboardImpl(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
0010fedc 00000144 T CTRPluginFramework::KeyboardImpl::KeyboardImpl(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
00110020 00000148 T CTRPluginFramework::KeyboardImpl::KeyboardImpl(CTRPluginFramework::Keyboard*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
00110020 00000148 T CTRPluginFramework::KeyboardImpl::KeyboardImpl(CTRPluginFramework::Keyboard*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
00110168 00000064 T CTRPluginFramework::KeyboardImpl::~KeyboardImpl()
00110168 00000064 T CTRPluginFramework::KeyboardImpl::~KeyboardImpl()
001101cc 00000008 T CTRPluginFramework::KeyboardImpl::IsHexadecimal() const
001101d4 00000008 T CTRPluginFramework::KeyboardImpl::SetMaxInput(int)
001101dc 00000008 T CTRPluginFramework::KeyboardImpl::GetInput[abi:cxx11]()
001101e4 00000008 T CTRPluginFramework::KeyboardImpl::SetConvertCallback(void* (*)(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, bool))
001101ec 00000008 T CTRPluginFramework::KeyboardImpl::SetCompareCallback(bool (*)(void const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&))
001101f4 00000164 T CTRPluginFramework::KeyboardImpl::_RenderTop()
00110358 00000494 T CTRPluginFramework::KeyboardImpl::_RenderBottom()
001107ec 00000064 T CTRPluginFramework::UnitsToNextChar(char const*, int)
00110850 00000090 T CTRPluginFramework::UnitsToPreviousChar(char const*, int)
001108e0 00000080 T CTRPluginFramework::KeyboardImpl::_ScrollUp()
00110960 00000084 T CTRPluginFramework::KeyboardImpl::_ScrollDown()
001109e4 00000160 T CTRPluginFramework::KeyboardImpl::_UpdateScrollInfos()
00110b44 00000280 T CTRPluginFramework::KeyboardImpl::_Update(float)
00110dc4 0000057c T CTRPluginFramework::KeyboardImpl::_CheckKeys()
00111340 00000068 T CTRPluginFramework::KeyboardImpl::_CheckInput()
001113a8 00000050 T CTRPluginFramework::KeyboardImpl::_CheckButtons(int&)
001113f8 00000070 T CTRPluginFramework::KeyboardImpl::operator()(int&)
00111468 00000008 T CTRPluginFramework::KeyboardImpl::CanChangeLayout(bool)
00111470 00000044 W std::_Deque_base<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >::~_Deque_base()
00111470 00000044 W std::_Deque_base<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >::~_Deque_base()
001114b4 00000030 W std::vector<CTRPluginFramework::TouchKey, std::allocator<CTRPluginFramework::TouchKey> >::_M_range_check(unsigned int) const
001114e4 000000d8 W void std::vector<CTRPluginFramework::TouchKeyString*, std::allocator<CTRPluginFramework::TouchKeyString*> >::_M_realloc_insert<CTRPluginFramework::TouchKeyString*>(__gnu_cxx::__normal_iterator<CTRPluginFramework::TouchKeyString**, std::vector<CTRPluginFramework::TouchKeyString*, std::allocator<CTRPluginFramework::TouchKeyString*> > >, CTRPluginFramework::TouchKeyString*&&)
001115bc 000001cc T CTRPluginFramework::KeyboardImpl::Populate(std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&)
00111788 0000002c W void std::_Destroy_aux<false>::__destroy<CTRPluginFramework::TouchKey*>(CTRPluginFramework::TouchKey*, CTRPluginFramework::TouchKey*)
001117b4 00000028 W std::vector<CTRPluginFramework::TouchKey, std::allocator<CTRPluginFramework::TouchKey> >::~vector()
001117b4 00000028 W std::vector<CTRPluginFramework::TouchKey, std::allocator<CTRPluginFramework::TouchKey> >::~vector()
001117dc 0000011c W void std::vector<CTRPluginFramework::TouchKey, std::allocator<CTRPluginFramework::TouchKey> >::_M_realloc_insert<CTRPluginFramework::TouchKey>(__gnu_cxx::__normal_iterator<CTRPluginFramework::TouchKey*, std::vector<CTRPluginFramework::TouchKey, std::allocator<CTRPluginFramework::TouchKey> > >, CTRPluginFramework::TouchKey&&)
001118f8 00000090 W void std::vector<CTRPluginFramework::TouchKey, std::allocator<CTRPluginFramework::TouchKey> >::emplace_back<CTRPluginFramework::TouchKey>(CTRPluginFramework::TouchKey&&)
00111988 000008f4 T CTRPluginFramework::KeyboardImpl::_QwertyLowCase()
0011227c 000008f4 T CTRPluginFramework::KeyboardImpl::_QwertyUpCase()
00112b70 00001344 T CTRPluginFramework::KeyboardImpl::_QwertySymbols()
00113eb4 00001740 T CTRPluginFramework::KeyboardImpl::_QwertyNintendo()
001155f4 00000044 T CTRPluginFramework::KeyboardImpl::_Qwerty()
00115638 00000254 T CTRPluginFramework::KeyboardImpl::_DigitKeyboard(std::vector<CTRPluginFramework::TouchKey, std::allocator<CTRPluginFramework::TouchKey> >&)
0011588c 00000050 T CTRPluginFramework::KeyboardImpl::_Decimal()
001158dc 00000068 T CTRPluginFramework::KeyboardImpl::_Hexadecimal()
00115944 00000048 T CTRPluginFramework::KeyboardImpl::SetLayout(CTRPluginFramework::Layout)
0011598c 00000324 T CTRPluginFramework::KeyboardImpl::_ProcessEvent(CTRPluginFramework::Event&)
00115cb0 00000250 T CTRPluginFramework::KeyboardImpl::Run()
00115f00 00000078 t _GLOBAL__sub_I__ZN18CTRPluginFramework12KeyboardImpl12_DecimalKeysE
00115f78 00000008 W CTRPluginFramework::MenuItem::GetNote[abi:cxx11]()
00115f80 00000014 T CTRPluginFramework::MenuEntryImpl::Disable()
00115f94 00000028 W CTRPluginFramework::MenuItem::~MenuItem()
00115f94 00000028 W CTRPluginFramework::MenuItem::~MenuItem()
00115fbc 00000028 T CTRPluginFramework::MenuEntryImpl::~MenuEntryImpl()
00115fbc 00000028 T CTRPluginFramework::MenuEntryImpl::~MenuEntryImpl()
00115fe4 0000001c W CTRPluginFramework::MenuItem::~MenuItem()
00116000 0000001c T CTRPluginFramework::MenuEntryImpl::~MenuEntryImpl()
0011601c 00000118 T CTRPluginFramework::MenuEntryImpl::GetNote[abi:cxx11]()
00116134 000000d8 T CTRPluginFramework::MenuEntryImpl::MenuEntryImpl(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::MenuEntry*)
00116134 000000d8 T CTRPluginFramework::MenuEntryImpl::MenuEntryImpl(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::MenuEntry*)
0011620c 000000dc T CTRPluginFramework::MenuEntryImpl::MenuEntryImpl(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, void (*)(CTRPluginFramework::MenuEntry*), std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::MenuEntry*)
0011620c 000000dc T CTRPluginFramework::MenuEntryImpl::MenuEntryImpl(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, void (*)(CTRPluginFramework::MenuEntry*), std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::MenuEntry*)
001162e8 00000008 T CTRPluginFramework::MenuEntryImpl::GetArg() const
001162f0 0000000c T CTRPluginFramework::MenuEntryImpl::IsActivated() const
001162fc 00000008 T CTRPluginFramework::MenuEntryImpl::AsMenuEntry() const
00116304 00000024 T CTRPluginFramework::MenuEntryImpl::_TriggerState()
00116328 00000030 T CTRPluginFramework::MenuEntryImpl::Enable()
00116358 0000001c T CTRPluginFramework::MenuEntryImpl::_MustBeRemoved() const
00116374 00000068 T CTRPluginFramework::MenuEntryImpl::_Execute()
001163dc 000000cc T CTRPluginFramework::MenuFolderImpl::~MenuFolderImpl()
001163dc 000000cc T CTRPluginFramework::MenuFolderImpl::~MenuFolderImpl()
001164a8 0000001c T CTRPluginFramework::MenuFolderImpl::~MenuFolderImpl()
001164c4 000000bc T CTRPluginFramework::MenuFolderImpl::MenuFolderImpl(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
001164c4 000000bc T CTRPluginFramework::MenuFolderImpl::MenuFolderImpl(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
00116580 000000c0 T CTRPluginFramework::MenuFolderImpl::MenuFolderImpl(CTRPluginFramework::MenuFolder*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
00116580 000000c0 T CTRPluginFramework::MenuFolderImpl::MenuFolderImpl(CTRPluginFramework::MenuFolder*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
00116640 00000014 T CTRPluginFramework::MenuFolderImpl::ItemsCount() const
00116654 00000050 T CTRPluginFramework::MenuFolderImpl::GetItem(unsigned long)
001166a4 00000018 T CTRPluginFramework::MenuFolderImpl::operator[](int)
001166bc 00000024 T CTRPluginFramework::MenuFolderImpl::HasParent()
001166e0 00000010 T CTRPluginFramework::MenuFolderImpl::_Open(CTRPluginFramework::MenuFolderImpl*, int, bool)
001166f0 00000024 T CTRPluginFramework::MenuFolderImpl::_Close(int&, bool)
00116714 000000d8 W void std::vector<CTRPluginFramework::MenuItem*, std::allocator<CTRPluginFramework::MenuItem*> >::_M_realloc_insert<CTRPluginFramework::MenuItem* const&>(__gnu_cxx::__normal_iterator<CTRPluginFramework::MenuItem**, std::vector<CTRPluginFramework::MenuItem*, std::allocator<CTRPluginFramework::MenuItem*> > >, CTRPluginFramework::MenuItem* const&)
001167ec 00000060 T CTRPluginFramework::MenuFolderImpl::Append(CTRPluginFramework::MenuItem*, bool)
0011684c 00000010 T CTRPluginFramework::MenuItem::NoteChanged()
0011685c 00000010 T CTRPluginFramework::MenuItem::HasNoteChanged() const
0011686c 00000010 T CTRPluginFramework::MenuItem::HandledNoteChanges()
0011687c 00000004 W CTRPluginFramework::ToggleButton<CTRPluginFramework::PluginMenuActionReplay, void>::~ToggleButton()
0011687c 00000004 W CTRPluginFramework::ToggleButton<CTRPluginFramework::PluginMenuActionReplay, void>::~ToggleButton()
00116880 00000004 W CTRPluginFramework::IconButton<CTRPluginFramework::PluginMenuActionReplay, void>::~IconButton()
00116880 00000004 W CTRPluginFramework::IconButton<CTRPluginFramework::PluginMenuActionReplay, void>::~IconButton()
00116884 0000001c W CTRPluginFramework::ToggleButton<CTRPluginFramework::PluginMenuActionReplay, void>::Draw()
001168a0 0000001c W CTRPluginFramework::IconButton<CTRPluginFramework::PluginMenuActionReplay, void>::Draw()
001168bc 00000014 W CTRPluginFramework::ToggleButton<CTRPluginFramework::PluginMenuActionReplay, void>::~ToggleButton()
001168d0 00000014 W CTRPluginFramework::IconButton<CTRPluginFramework::PluginMenuActionReplay, void>::~IconButton()
001168e4 00000028 T CTRPluginFramework::PluginMenuActionReplay::_PasteBtn_OnClick()
0011690c 00000064 W CTRPluginFramework::ToggleButton<CTRPluginFramework::PluginMenuActionReplay, void>::operator()()
00116970 00000064 W CTRPluginFramework::IconButton<CTRPluginFramework::PluginMenuActionReplay, void>::operator()()
001169d4 00000028 t CTRPluginFramework::ActionReplay_GetInput(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)::{lambda(void const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)#1}::_FUN(void const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)
001169fc 00000024 T CTRPluginFramework::PluginMenuActionReplay::_CutBtn_OnClick()
00116a20 00000078 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(char const*, std::allocator<char> const&) [clone .isra.55]
00116a98 0000006c t CTRPluginFramework::ActionReplay_GetInput(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)
00116b04 000000d4 T CTRPluginFramework::PluginMenuActionReplay::_TrashBtn_OnClick()
00116bd8 000000a0 t void std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::_M_range_initialize<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const*>(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const*, std::forward_iterator_tag) [clone .isra.65]
00116c78 00000268 T CTRPluginFramework::PluginMenuActionReplay::PluginMenuActionReplay()
00116c78 00000268 T CTRPluginFramework::PluginMenuActionReplay::PluginMenuActionReplay()
00116ee0 00000014 T CTRPluginFramework::PluginMenuActionReplay::Initialize()
00116ef4 00000058 T CTRPluginFramework::PluginMenuActionReplay::_DrawBottom()
00116f4c 00000054 T CTRPluginFramework::PluginMenuActionReplay::_ProcessEvent(std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >&)
00116fa0 00000120 T CTRPluginFramework::PluginMenuActionReplay::SaveCodes()
001170c0 0000003c W std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::~vector()
001170c0 0000003c W std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::~vector()
001170fc 00000174 T CTRPluginFramework::PluginMenuActionReplay::_NewBtn_OnClick()
00117270 00000080 W CTRPluginFramework::ToggleButton<CTRPluginFramework::PluginMenuActionReplay, void>::Update(bool, CTRPluginFramework::Vector<int> const&)
001172f0 00000080 W CTRPluginFramework::IconButton<CTRPluginFramework::PluginMenuActionReplay, void>::Update(bool, CTRPluginFramework::Vector<int> const&)
00117370 00000160 T CTRPluginFramework::PluginMenuActionReplay::_Update(CTRPluginFramework::Time const&)
001174d0 000000a8 T CTRPluginFramework::PluginMenuActionReplay::operator()(std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >&, CTRPluginFramework::Time const&)
00117578 00000184 W void std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::_M_realloc_insert<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >(__gnu_cxx::__normal_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&&)
001176fc 00000188 T CTRPluginFramework::PluginMenuActionReplay::_EditorBtn_OnClick()
00117884 0000000c W void std::_Destroy<CTRPluginFramework::ARCode>(CTRPluginFramework::ARCode*)
00117890 00000184 W void std::vector<CTRPluginFramework::ARCode, std::allocator<CTRPluginFramework::ARCode> >::_M_realloc_insert<CTRPluginFramework::ARCode>(__gnu_cxx::__normal_iterator<CTRPluginFramework::ARCode*, std::vector<CTRPluginFramework::ARCode, std::allocator<CTRPluginFramework::ARCode> > >, CTRPluginFramework::ARCode&&)
00117a14 00000044 W void std::vector<CTRPluginFramework::ARCode, std::allocator<CTRPluginFramework::ARCode> >::emplace_back<CTRPluginFramework::ARCode>(CTRPluginFramework::ARCode&&)
00117a58 00000030 W unsigned long* std::__copy_move<false, true, std::random_access_iterator_tag>::__copy_m<unsigned long>(unsigned long const*, unsigned long const*, unsigned long*)
00117a88 000000d4 W std::vector<unsigned long, std::allocator<unsigned long> >::operator=(std::vector<unsigned long, std::allocator<unsigned long> > const&)
00117b5c 00000088 W CTRPluginFramework::ARCode* std::__copy_move<false, false, std::random_access_iterator_tag>::__copy_m<CTRPluginFramework::ARCode const*, CTRPluginFramework::ARCode*>(CTRPluginFramework::ARCode const*, CTRPluginFramework::ARCode const*, CTRPluginFramework::ARCode*)
00117be4 00000174 W std::vector<CTRPluginFramework::ARCode, std::allocator<CTRPluginFramework::ARCode> >::operator=(std::vector<CTRPluginFramework::ARCode, std::allocator<CTRPluginFramework::ARCode> > const&)
00117d58 00000070 T CTRPluginFramework::PluginMenuActionReplay::_DuplicateBtn_OnClick()
00117dc8 00000030 W CTRPluginFramework::ARCode::~ARCode()
00117dc8 00000030 W CTRPluginFramework::ARCode::~ARCode()
00117df8 00000144 T CTRPluginFramework::PluginMenuActionReplay::NewARCode(unsigned char, unsigned long, unsigned long)
00117f3c 0000001c W CTRPluginFramework::ARCode::~ARCode()
00117f58 00000058 t CTRPluginFramework::PluginMenuExecuteLoop::Add(CTRPluginFramework::MenuEntryImpl*)::{lambda(CTRPluginFramework::MenuEntryImpl*)#1}::operator()(CTRPluginFramework::MenuEntryImpl*) const [clone .isra.4]
00117fb0 0000002c T CTRPluginFramework::PluginMenuExecuteLoop::PluginMenuExecuteLoop()
00117fb0 0000002c T CTRPluginFramework::PluginMenuExecuteLoop::PluginMenuExecuteLoop()
00117fdc 0000000c T CTRPluginFramework::PluginMenuExecuteLoop::Lock()
00117fe8 0000000c T CTRPluginFramework::PluginMenuExecuteLoop::Unlock()
00117ff4 0000011c T CTRPluginFramework::PluginMenuExecuteLoop::RemoveAR(CTRPluginFramework::MenuEntryActionReplay*)
00118110 0000003c T CTRPluginFramework::PluginMenuExecuteLoop::ExecuteAR()
0011814c 0000000c T CTRPluginFramework::PluginMenuExecuteLoop::LockAR()
00118158 0000000c T CTRPluginFramework::PluginMenuExecuteLoop::UnlockAR()
00118164 00000020 T CTRPluginFramework::PluginMenuExecuteLoop::InitLocks()
00118184 000000d8 W void std::vector<unsigned long, std::allocator<unsigned long> >::_M_realloc_insert<unsigned long const&>(__gnu_cxx::__normal_iterator<unsigned long*, std::vector<unsigned long, std::allocator<unsigned long> > >, unsigned long const&)
0011825c 0000019c T CTRPluginFramework::PluginMenuExecuteLoop::WriteEnabledCheatsToFile(CTRPluginFramework::Preferences::HeaderV1&, CTRPluginFramework::File&)
001183f8 00000054 W std::vector<CTRPluginFramework::MenuEntryImpl*, std::allocator<CTRPluginFramework::MenuEntryImpl*> >::_M_erase(__gnu_cxx::__normal_iterator<CTRPluginFramework::MenuEntryImpl**, std::vector<CTRPluginFramework::MenuEntryImpl*, std::allocator<CTRPluginFramework::MenuEntryImpl*> > >, __gnu_cxx::__normal_iterator<CTRPluginFramework::MenuEntryImpl**, std::vector<CTRPluginFramework::MenuEntryImpl*, std::allocator<CTRPluginFramework::MenuEntryImpl*> > >)
0011844c 00000160 T CTRPluginFramework::PluginMenuExecuteLoop::operator()()
001185ac 00000018 T CTRPluginFramework::PluginMenuExecuteLoop::ExecuteBuiltin()
001185c4 00000124 T CTRPluginFramework::PluginMenuExecuteLoop::Remove(CTRPluginFramework::MenuEntryImpl*)
001186e8 000000d8 W void std::vector<CTRPluginFramework::MenuEntryImpl*, std::allocator<CTRPluginFramework::MenuEntryImpl*> >::_M_realloc_insert<CTRPluginFramework::MenuEntryImpl* const&>(__gnu_cxx::__normal_iterator<CTRPluginFramework::MenuEntryImpl**, std::vector<CTRPluginFramework::MenuEntryImpl*, std::allocator<CTRPluginFramework::MenuEntryImpl*> > >, CTRPluginFramework::MenuEntryImpl* const&)
001187c0 000001bc T CTRPluginFramework::PluginMenuExecuteLoop::Add(CTRPluginFramework::MenuEntryImpl*)
0011897c 000000d8 W void std::vector<CTRPluginFramework::MenuEntryActionReplay*, std::allocator<CTRPluginFramework::MenuEntryActionReplay*> >::_M_realloc_insert<CTRPluginFramework::MenuEntryActionReplay* const&>(__gnu_cxx::__normal_iterator<CTRPluginFramework::MenuEntryActionReplay**, std::vector<CTRPluginFramework::MenuEntryActionReplay*, std::allocator<CTRPluginFramework::MenuEntryActionReplay*> > >, CTRPluginFramework::MenuEntryActionReplay* const&)
00118a54 00000084 T CTRPluginFramework::PluginMenuExecuteLoop::AddAR(CTRPluginFramework::MenuEntryActionReplay*)
00118ad8 00000214 W CTRPluginFramework::Button<CTRPluginFramework::PluginMenuHome, void>::Draw()
00118cec 00000204 W CTRPluginFramework::CheckedButton<CTRPluginFramework::PluginMenuHome, void>::Draw()
00118ef0 00000204 W CTRPluginFramework::CheckedButton<CTRPluginFramework::PluginMenuSearch, void>::Draw()
001190f4 00000214 W CTRPluginFramework::Button<CTRPluginFramework::PluginMenuSearch, void>::Draw()
00119308 00000058 W CTRPluginFramework::CheckedButton<CTRPluginFramework::PluginMenuSearch, void>::operator()()
00119360 00000074 W CTRPluginFramework::Button<CTRPluginFramework::PluginMenuSearch, void>::operator()()
001193d4 00000074 W CTRPluginFramework::Button<CTRPluginFramework::PluginMenuHome, void>::operator()()
00119448 00000058 W CTRPluginFramework::CheckedButton<CTRPluginFramework::PluginMenuHome, void>::operator()()
001194a0 00000088 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(char const*, std::allocator<char> const&) [clone .isra.115]
00119528 0000000c t std::_Vector_base<CTRPluginFramework::Line<int>, std::allocator<CTRPluginFramework::Line<int> > >::_M_deallocate(CTRPluginFramework::Line<int>*, unsigned int) [clone .isra.118]
00119534 00000028 W CTRPluginFramework::Button<CTRPluginFramework::PluginMenuSearch, void>::~Button()
00119534 00000028 W CTRPluginFramework::Button<CTRPluginFramework::PluginMenuSearch, void>::~Button()
0011955c 0000001c W CTRPluginFramework::Button<CTRPluginFramework::PluginMenuSearch, void>::~Button()
00119578 00000094 t CTRPluginFramework::Preferences::HotkeysInfos* std::__uninitialized_move_if_noexcept_a<CTRPluginFramework::Preferences::HotkeysInfos*, CTRPluginFramework::Preferences::HotkeysInfos*, std::allocator<CTRPluginFramework::Preferences::HotkeysInfos> >(CTRPluginFramework::Preferences::HotkeysInfos*, CTRPluginFramework::Preferences::HotkeysInfos*, CTRPluginFramework::Preferences::HotkeysInfos*, std::allocator<CTRPluginFramework::Preferences::HotkeysInfos>&) [clone .isra.174]
0011960c 00000028 W CTRPluginFramework::CheckedButton<CTRPluginFramework::PluginMenuSearch, void>::~CheckedButton()
0011960c 00000028 W CTRPluginFramework::CheckedButton<CTRPluginFramework::PluginMenuSearch, void>::~CheckedButton()
00119634 0000001c W CTRPluginFramework::CheckedButton<CTRPluginFramework::PluginMenuSearch, void>::~CheckedButton()
00119650 00000028 W CTRPluginFramework::CheckedButton<CTRPluginFramework::PluginMenuHome, void>::~CheckedButton()
00119650 00000028 W CTRPluginFramework::CheckedButton<CTRPluginFramework::PluginMenuHome, void>::~CheckedButton()
00119678 0000001c W CTRPluginFramework::CheckedButton<CTRPluginFramework::PluginMenuHome, void>::~CheckedButton()
00119694 00000028 W CTRPluginFramework::Button<CTRPluginFramework::PluginMenuHome, void>::~Button()
00119694 00000028 W CTRPluginFramework::Button<CTRPluginFramework::PluginMenuHome, void>::~Button()
001196bc 0000001c W CTRPluginFramework::Button<CTRPluginFramework::PluginMenuHome, void>::~Button()
001196d8 00000020 W CTRPluginFramework::KeySequenceImpl::~KeySequenceImpl()
001196d8 00000020 W CTRPluginFramework::KeySequenceImpl::~KeySequenceImpl()
001196f8 00000030 W CTRPluginFramework::TextBox::~TextBox()
001196f8 00000030 W CTRPluginFramework::TextBox::~TextBox()
00119728 0000001c W CTRPluginFramework::TextBox::~TextBox()
00119744 000000f0 T CTRPluginFramework::PluginMenuImpl::PluginMenuImpl(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)
00119744 000000f0 T CTRPluginFramework::PluginMenuImpl::PluginMenuImpl(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)
00119834 00000008 T CTRPluginFramework::PluginMenuImpl::Append(CTRPluginFramework::MenuItem*) const
0011983c 00000094 W CTRPluginFramework::KeySequenceImpl::KeySequenceImpl(std::vector<CTRPluginFramework::Key, std::allocator<CTRPluginFramework::Key> >)
0011983c 00000094 W CTRPluginFramework::KeySequenceImpl::KeySequenceImpl(std::vector<CTRPluginFramework::Key, std::allocator<CTRPluginFramework::Key> >)
001198d0 00000020 T CTRPluginFramework::PluginMenuImpl::Close(CTRPluginFramework::MenuFolderImpl*)
001198f0 0000018c T CTRPluginFramework::PluginMenuImpl::LoadHotkeysFromFile(CTRPluginFramework::Preferences::HeaderV1 const&, CTRPluginFramework::File&)
00119a7c 00000020 T CTRPluginFramework::PluginMenuImpl::GetRegionsList(std::vector<CTRPluginFramework::Region, std::allocator<CTRPluginFramework::Region> >&)
00119a9c 0000001c T CTRPluginFramework::PluginMenuImpl::ForceExit()
00119ab8 0000001c T CTRPluginFramework::PluginMenuImpl::ForceOpen()
00119ad4 00000008 T CTRPluginFramework::PluginMenuImpl::IsOpen() const
00119adc 00000008 T CTRPluginFramework::PluginMenuImpl::AddPluginVersion(unsigned long) const
00119ae4 00000020 W std::_Vector_base<unsigned long, std::allocator<unsigned long> >::~_Vector_base()
00119ae4 00000020 W std::_Vector_base<unsigned long, std::allocator<unsigned long> >::~_Vector_base()
00119b04 000000f4 W void std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >::_M_realloc_insert<CTRPluginFramework::Event const&>(__gnu_cxx::__normal_iterator<CTRPluginFramework::Event*, std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> > >, CTRPluginFramework::Event const&)
00119bf8 0000075c T CTRPluginFramework::PluginMenuImpl::Run()
0011a354 00000058 W std::vector<unsigned long, std::allocator<unsigned long> >::_M_check_len(unsigned int, char const*) const
0011a3ac 00000030 W unsigned long* std::__copy_move<true, true, std::random_access_iterator_tag>::__copy_m<unsigned long>(unsigned long const*, unsigned long const*, unsigned long*)
0011a3dc 000000c4 W std::vector<unsigned long, std::allocator<unsigned long> >::_M_default_append(unsigned int)
0011a4a0 00000034 W std::vector<unsigned long, std::allocator<unsigned long> >::resize(unsigned int)
0011a4d4 00000130 T CTRPluginFramework::PluginMenuImpl::LoadEnabledCheatsFromFile(CTRPluginFramework::Preferences::HeaderV1 const&, CTRPluginFramework::File&)
0011a604 0000013c T CTRPluginFramework::PluginMenuImpl::LoadFavoritesFromFile(CTRPluginFramework::Preferences::HeaderV1 const&, CTRPluginFramework::File&)
0011a740 000000c4 W std::vector<unsigned long, std::allocator<unsigned long> >::push_back(unsigned long const&)
0011a804 00000108 T CTRPluginFramework::PluginMenuImpl::WriteFavoritesToFile(CTRPluginFramework::Preferences::HeaderV1&, CTRPluginFramework::File&)
0011a90c 00000068 W std::vector<unsigned long, std::allocator<unsigned long> >::vector(std::vector<unsigned long, std::allocator<unsigned long> > const&)
0011a90c 00000068 W std::vector<unsigned long, std::allocator<unsigned long> >::vector(std::vector<unsigned long, std::allocator<unsigned long> > const&)
0011a974 000000fc W void std::vector<CTRPluginFramework::Preferences::HotkeysInfos, std::allocator<CTRPluginFramework::Preferences::HotkeysInfos> >::_M_realloc_insert<CTRPluginFramework::Preferences::HotkeysInfos const&>(__gnu_cxx::__normal_iterator<CTRPluginFramework::Preferences::HotkeysInfos*, std::vector<CTRPluginFramework::Preferences::HotkeysInfos, std::allocator<CTRPluginFramework::Preferences::HotkeysInfos> > >, CTRPluginFramework::Preferences::HotkeysInfos const&)
0011aa70 00000140 T CTRPluginFramework::PluginMenuImpl::ExtractHotkeys(std::vector<CTRPluginFramework::Preferences::HotkeysInfos, std::allocator<CTRPluginFramework::Preferences::HotkeysInfos> >&, CTRPluginFramework::MenuFolderImpl*, unsigned long&)
0011abb0 00000198 T CTRPluginFramework::PluginMenuImpl::WriteHotkeysToFile(CTRPluginFramework::Preferences::HeaderV1&, CTRPluginFramework::File&)
0011ad48 00000080 W CTRPluginFramework::Button<CTRPluginFramework::PluginMenuHome, void>::Update(bool, CTRPluginFramework::Vector<int> const&)
0011adc8 00000074 W CTRPluginFramework::CheckedButton<CTRPluginFramework::PluginMenuHome, void>::Update(bool, CTRPluginFramework::Vector<int> const&)
0011ae3c 00000074 W CTRPluginFramework::CheckedButton<CTRPluginFramework::PluginMenuSearch, void>::Update(bool, CTRPluginFramework::Vector<int> const&)
0011aeb0 00000080 W CTRPluginFramework::Button<CTRPluginFramework::PluginMenuSearch, void>::Update(bool, CTRPluginFramework::Vector<int> const&)
0011af30 00000078 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(char const*, std::allocator<char> const&) [clone .isra.57]
0011afa8 00000044 T CTRPluginFramework::PluginMenuSearch::_ProcessEvent(CTRPluginFramework::Event&)
0011afec 0000013c T CTRPluginFramework::PluginMenuSearch::_RenderBottom()
0011b128 00000068 T CTRPluginFramework::PluginMenuSearch::_Update(CTRPluginFramework::Time)
0011b190 0000016c T CTRPluginFramework::PluginMenuSearch::_PopulateSearchType(bool)
0011b2fc 00000050 T CTRPluginFramework::PluginMenuSearch::_cancelBtn_OnClick()
0011b34c 000000ac W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > __gnu_cxx::__to_xstring<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, char>(int (*)(char*, unsigned int, char const*, std::__va_list), unsigned int, char const*, ...)
0011b3f8 000004cc T CTRPluginFramework::PluginMenuSearch::_ShowProgressWindow() const
0011b8c4 00000070 T CTRPluginFramework::PluginMenuSearch::_RenderTop()
0011b934 000000f4 t CTRPluginFramework::ClearSearchFolder()
0011ba28 00000158 W CTRPluginFramework::Button<CTRPluginFramework::PluginMenuSearch, void>::Button(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::PluginMenuSearch&, void (CTRPluginFramework::PluginMenuSearch::*)(), CTRPluginFramework::Rect<int>, int (*)(int, int))
0011ba28 00000158 W CTRPluginFramework::Button<CTRPluginFramework::PluginMenuSearch, void>::Button(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::PluginMenuSearch&, void (CTRPluginFramework::PluginMenuSearch::*)(), CTRPluginFramework::Rect<int>, int (*)(int, int))
0011bb80 0000005c W CTRPluginFramework::Button<CTRPluginFramework::PluginMenuSearch, void>::UseSysFont(bool)
0011bbdc 00000640 T CTRPluginFramework::PluginMenuSearch::PluginMenuSearch(CTRPluginFramework::HexEditor&)
0011bbdc 00000640 T CTRPluginFramework::PluginMenuSearch::PluginMenuSearch(CTRPluginFramework::HexEditor&)
0011c21c 00000034 W std::__cxx11::list<CTRPluginFramework::Search*, std::allocator<CTRPluginFramework::Search*> >::push_back(CTRPluginFramework::Search* const&)
0011c250 00000220 T CTRPluginFramework::PluginMenuSearch::RestoreSearchState()
0011c470 00000028 W std::__cxx11::list<CTRPluginFramework::Search*, std::allocator<CTRPluginFramework::Search*> >::pop_back()
0011c498 00000068 T CTRPluginFramework::PluginMenuSearch::_undoBtn_OnClick()
0011c500 00000030 W CTRPluginFramework::Region* std::__copy_move<false, true, std::random_access_iterator_tag>::__copy_m<CTRPluginFramework::Region>(CTRPluginFramework::Region const*, CTRPluginFramework::Region const*, CTRPluginFramework::Region*)
0011c530 000000d4 W std::vector<CTRPluginFramework::Region, std::allocator<CTRPluginFramework::Region> >::operator=(std::vector<CTRPluginFramework::Region, std::allocator<CTRPluginFramework::Region> > const&)
0011c604 000000ac W void std::vector<CTRPluginFramework::Region, std::allocator<CTRPluginFramework::Region> >::_M_realloc_insert<CTRPluginFramework::Region const&>(__gnu_cxx::__normal_iterator<CTRPluginFramework::Region*, std::vector<CTRPluginFramework::Region, std::allocator<CTRPluginFramework::Region> > >, CTRPluginFramework::Region const&)
0011c6b0 00000040 W std::vector<CTRPluginFramework::Region, std::allocator<CTRPluginFramework::Region> >::push_back(CTRPluginFramework::Region const&)
0011c6f0 0000026c T CTRPluginFramework::PluginMenuSearch::_ListRegion()
0011c95c 00000388 T CTRPluginFramework::PluginMenuSearch::operator()(std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >&, CTRPluginFramework::Time&)
0011cce4 000000dc T CTRPluginFramework::PluginMenuSearch::_resetBtn_OnClick()
0011cdc0 00000038 T CTRPluginFramework::PluginMenuSearch::GetRegionsList(std::vector<CTRPluginFramework::Region, std::allocator<CTRPluginFramework::Region> >&)
0011cdf8 0000027c T CTRPluginFramework::PluginMenuSearch::_searchBtn_OnClick()
0011d074 00000014 t CTRPluginFramework::PluginMenuTools::InitMenu()::{lambda()#1}::_FUN()
0011d088 00000014 t CTRPluginFramework::PluginMenuTools::InitMenu()::{lambda()#2}::_FUN()
0011d09c 00000014 t CTRPluginFramework::PluginMenuTools::InitMenu()::{lambda()#3}::_FUN()
0011d0b0 00000114 t CTRPluginFramework::FsTryOpenFileCallback(unsigned long, unsigned short*, unsigned long)
0011d1c4 00000004 t CTRPluginFramework::PluginMenuTools::InitMenu()::{lambda()#13}::_FUN()
0011d1c8 00000004 t CTRPluginFramework::PluginMenuTools::InitMenu()::{lambda()#14}::_FUN()
0011d1cc 00000018 t CTRPluginFramework::PluginMenuTools::InitMenu()::{lambda()#4}::_FUN()
0011d1e4 00000018 t CTRPluginFramework::PluginMenuTools::InitMenu()::{lambda()#5}::_FUN()
0011d1fc 00000018 t CTRPluginFramework::PluginMenuTools::InitMenu()::{lambda()#6}::_FUN()
0011d214 00000018 t CTRPluginFramework::PluginMenuTools::InitMenu()::{lambda()#7}::_FUN()
0011d22c 00000018 t CTRPluginFramework::PluginMenuTools::InitMenu()::{lambda()#8}::_FUN()
0011d244 00000018 t CTRPluginFramework::PluginMenuTools::InitMenu()::{lambda()#9}::_FUN()
0011d25c 00000018 t CTRPluginFramework::PluginMenuTools::InitMenu()::{lambda()#10}::_FUN()
0011d274 00000018 t CTRPluginFramework::PluginMenuTools::InitMenu()::{lambda()#11}::_FUN()
0011d28c 00000018 t CTRPluginFramework::PluginMenuTools::InitMenu()::{lambda()#12}::_FUN()
0011d2a4 00000078 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(char const*, std::allocator<char> const&) [clone .isra.49]
0011d31c 00000064 t CTRPluginFramework::MenuHotkeyModifier()
0011d380 00000120 t CTRPluginFramework::ConfirmBeforeProceed(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
0011d4a0 0000005c t CTRPluginFramework::Reboot()
0011d4fc 00000064 t CTRPluginFramework::Shutdown()
0011d560 000000f8 t CTRPluginFramework::FindFunction(unsigned long&) [clone .constprop.62]
0011d658 00000140 t CTRPluginFramework::_DisplayLoadedFiles(CTRPluginFramework::MenuEntryTools*)
0011d798 000001c8 t CTRPluginFramework::_WriteLoadedFiles(CTRPluginFramework::MenuEntryTools*)
0011d960 000001f4 T CTRPluginFramework::PluginMenuTools::UpdateSettings()
0011db54 000007fc T CTRPluginFramework::PluginMenuTools::InitMenu()
0011e350 00000154 T CTRPluginFramework::PluginMenuTools::PluginMenuTools(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, CTRPluginFramework::HexEditor&)
0011e350 00000154 T CTRPluginFramework::PluginMenuTools::PluginMenuTools(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, CTRPluginFramework::HexEditor&)
0011e4a4 0000010c T CTRPluginFramework::PluginMenuTools::_ProcessEvent(CTRPluginFramework::Event&)
0011e5b0 000000a4 T CTRPluginFramework::PluginMenuTools::_RenderBottom()
0011e654 00000040 T CTRPluginFramework::PluginMenuTools::_Update(CTRPluginFramework::Time)
0011e694 0000003c t _GLOBAL__sub_I__ZN18CTRPluginFramework15PluginMenuToolsC2ERNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERNS_9HexEditorE
0011e6d0 0000003c T CTRPluginFramework::PluginMenuTools::_RenderTop()
0011e70c 00000108 T CTRPluginFramework::PluginMenuTools::operator()(std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >&, CTRPluginFramework::Time&)
0011e814 00000088 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(char const*, std::allocator<char> const&) [clone .isra.35]
0011e89c 000000a0 t void std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::_M_range_initialize<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const*>(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const*, std::forward_iterator_tag) [clone .isra.48]
0011e93c 0000007c T CTRPluginFramework::SearchMenu::_OpenExportFile()
0011e9b8 000000b4 T CTRPluginFramework::SearchMenu::_NewCheat()
0011ea6c 0000018c T CTRPluginFramework::SearchMenu::_Edit()
0011ebf8 00000048 T CTRPluginFramework::SearchMenu::_JumpInEditor()
0011ec40 0000014c T CTRPluginFramework::SearchMenu::_Export()
0011ed8c 0000015c T CTRPluginFramework::SearchMenu::_ExportAll()
0011eee8 000001ac T CTRPluginFramework::SearchMenu::_ShowGame()
0011f094 00000030 W std::__cxx11::to_string(unsigned long)
0011f0c4 00000084 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > std::operator+<char, std::char_traits<char>, std::allocator<char> >(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&&)
0011f148 00000584 T CTRPluginFramework::SearchMenu::Draw()
0011f6cc 000000b4 T CTRPluginFramework::SearchMenu::SearchMenu(CTRPluginFramework::Search*&, CTRPluginFramework::HexEditor&, bool&, bool&)
0011f6cc 000000b4 T CTRPluginFramework::SearchMenu::SearchMenu(CTRPluginFramework::Search*&, CTRPluginFramework::HexEditor&, bool&, bool&)
0011f780 00000030 W std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::clear()
0011f7b0 00000230 T CTRPluginFramework::SearchMenu::Update()
0011f9e0 0000050c T CTRPluginFramework::SearchMenu::ProcessEvent(std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >&, CTRPluginFramework::Time&)
0011feec 00000064 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >* std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const*, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >(__gnu_cxx::__normal_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const*, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >, __gnu_cxx::__normal_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const*, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >&) [clone .isra.29]
0011ff50 00000094 T CTRPluginFramework::SubMenu::SubMenu(std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&)
0011ff50 00000094 T CTRPluginFramework::SubMenu::SubMenu(std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&)
0011ffe4 0000001c T CTRPluginFramework::SubMenu::operator()()
00120000 00000214 T CTRPluginFramework::SubMenu::Draw()
00120214 000000bc T CTRPluginFramework::SubMenu::ProcessEvent(CTRPluginFramework::Event const&)
001202d0 00000008 T CTRPluginFramework::SubMenu::IsOpen()
001202d8 0000001c T CTRPluginFramework::SubMenu::OptionsCount()
001202f4 00000198 W std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::operator=(std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&)
0012048c 00000048 T CTRPluginFramework::SubMenu::ChangeOptions(std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&)
001204d4 000000c4 T CTRPluginFramework::Search32::FirstSearchUnknown()
00120598 000000c0 T CTRPluginFramework::Search32::FirstSearchSpecified()
00120658 0000003c t CTRPluginFramework::Results32WithOld* std::__uninitialized_default_n_a<CTRPluginFramework::Results32WithOld*, unsigned int, IAllocator<CTRPluginFramework::Results32WithOld> >(CTRPluginFramework::Results32WithOld*, unsigned int, IAllocator<CTRPluginFramework::Results32WithOld>&) [clone .isra.79]
00120694 00000078 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(char const*, std::allocator<char> const&) [clone .isra.92]
0012070c 000002a0 T CTRPluginFramework::Search32::SecondSearchUnknown()
001209ac 000002bc T CTRPluginFramework::Search32::SecondSearchSpecified()
00120c68 00000040 W CTRPluginFramework::Search::~Search()
00120c68 00000040 W CTRPluginFramework::Search::~Search()
00120ca8 00000044 T CTRPluginFramework::Search32::~Search32()
00120ca8 00000044 T CTRPluginFramework::Search32::~Search32()
00120cec 0000001c T CTRPluginFramework::Search32::~Search32()
00120d08 0000001c W CTRPluginFramework::Search::~Search()
00120d24 00000228 T CTRPluginFramework::Search32::Search32(CTRPluginFramework::SearchParameters&)
00120d24 00000228 T CTRPluginFramework::Search32::Search32(CTRPluginFramework::SearchParameters&)
00120f4c 00000020 T CTRPluginFramework::Search32::Search32(CTRPluginFramework::Search*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
00120f4c 00000020 T CTRPluginFramework::Search32::Search32(CTRPluginFramework::Search*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
00120f6c 0000005c W std::vector<CTRPluginFramework::Results32WithOld, IAllocator<CTRPluginFramework::Results32WithOld> >::vector(unsigned int, IAllocator<CTRPluginFramework::Results32WithOld> const&)
00120f6c 0000005c W std::vector<CTRPluginFramework::Results32WithOld, IAllocator<CTRPluginFramework::Results32WithOld> >::vector(unsigned int, IAllocator<CTRPluginFramework::Results32WithOld> const&)
00120fc8 00000138 W std::vector<CTRPluginFramework::Results32WithOld, IAllocator<CTRPluginFramework::Results32WithOld> >::_M_default_append(unsigned int)
00121100 00000048 W std::vector<CTRPluginFramework::Results32WithOld, IAllocator<CTRPluginFramework::Results32WithOld> >::resize(unsigned int)
00121148 00000144 T CTRPluginFramework::Search32::SubsidiarySearchSpecified()
0012128c 00000144 T CTRPluginFramework::Search32::SubsidiarySearchUnknown()
001213d0 00000044 W void std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::emplace_back<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&&)
00121414 0000002c W CTRPluginFramework::Results32* std::__uninitialized_default_n_1<true>::__uninit_default_n<CTRPluginFramework::Results32*, unsigned int>(CTRPluginFramework::Results32*, unsigned int)
00121440 000000ec W std::vector<CTRPluginFramework::Results32, std::allocator<CTRPluginFramework::Results32> >::_M_default_append(unsigned int)
0012152c 00000034 W std::vector<CTRPluginFramework::Results32, std::allocator<CTRPluginFramework::Results32> >::resize(unsigned int)
00121560 00000034 W CTRPluginFramework::Results32WithOld* std::__uninitialized_default_n_1<true>::__uninit_default_n<CTRPluginFramework::Results32WithOld*, unsigned int>(CTRPluginFramework::Results32WithOld*, unsigned int)
00121594 0000010c W std::vector<CTRPluginFramework::Results32WithOld, std::allocator<CTRPluginFramework::Results32WithOld> >::_M_default_append(unsigned int)
001216a0 00000048 W std::vector<CTRPluginFramework::Results32WithOld, std::allocator<CTRPluginFramework::Results32WithOld> >::resize(unsigned int)
001216e8 00000318 T CTRPluginFramework::Search32::ReadResults(unsigned long, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >&, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >&, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >&)
00121a00 00000260 T CTRPluginFramework::Search32::FirstSearchSpecifiedU8(unsigned long, CTRPluginFramework::SearchFlags, CTRPluginFramework::Results32*)
00121c60 00000278 T CTRPluginFramework::Search32::FirstSearchSpecifiedU16(unsigned long, CTRPluginFramework::SearchFlags, CTRPluginFramework::Results32*)
00121ed8 00000260 T CTRPluginFramework::Search32::FirstSearchSpecifiedU32(unsigned long, CTRPluginFramework::SearchFlags, CTRPluginFramework::Results32*)
00122138 00000034 T CTRPluginFramework::AlmostEqualRelative(float, float, float)
0012216c 00000324 T CTRPluginFramework::Search32::FirstSearchSpecifiedFloat(unsigned long, CTRPluginFramework::SearchFlags, CTRPluginFramework::Results32*)
00122490 0000082c T CTRPluginFramework::Search32::SecondSearchSpecifiedU8(std::vector<CTRPluginFramework::Results32, IAllocator<CTRPluginFramework::Results32> >&, CTRPluginFramework::SearchFlags, CTRPluginFramework::Results32WithOld*)
00122cbc 000008cc T CTRPluginFramework::Search32::SecondSearchSpecifiedU16(std::vector<CTRPluginFramework::Results32, IAllocator<CTRPluginFramework::Results32> >&, CTRPluginFramework::SearchFlags, CTRPluginFramework::Results32WithOld*)
00123588 000008ac T CTRPluginFramework::Search32::SecondSearchSpecifiedU32(std::vector<CTRPluginFramework::Results32, IAllocator<CTRPluginFramework::Results32> >&, CTRPluginFramework::SearchFlags, CTRPluginFramework::Results32WithOld*)
00123e34 00000db0 T CTRPluginFramework::Search32::SecondSearchSpecifiedFloat(std::vector<CTRPluginFramework::Results32, IAllocator<CTRPluginFramework::Results32> >&, CTRPluginFramework::SearchFlags, CTRPluginFramework::Results32WithOld*)
00124be4 00000bb4 T CTRPluginFramework::Search32::SecondSearchUnknownU8(std::vector<unsigned long, IAllocator<unsigned long> >&, CTRPluginFramework::SearchFlags, CTRPluginFramework::Results32WithOld*)
00125798 000006f4 T CTRPluginFramework::Search32::SecondSearchUnknownU16(std::vector<unsigned long, IAllocator<unsigned long> >&, CTRPluginFramework::SearchFlags, CTRPluginFramework::Results32WithOld*)
00125e8c 000003e0 T CTRPluginFramework::Search32::SecondSearchUnknownU32(std::vector<unsigned long, IAllocator<unsigned long> >&, CTRPluginFramework::SearchFlags, CTRPluginFramework::Results32WithOld*)
0012626c 0000079c T CTRPluginFramework::Search32::SecondSearchUnknownFloat(std::vector<unsigned long, IAllocator<unsigned long> >&, CTRPluginFramework::SearchFlags, CTRPluginFramework::Results32WithOld*)
00126a08 00000444 T CTRPluginFramework::Search32::SubsidiarySearchSpecifiedU8(std::vector<CTRPluginFramework::Results32WithOld, IAllocator<CTRPluginFramework::Results32WithOld> >&, CTRPluginFramework::SearchFlags, CTRPluginFramework::Results32WithOld*)
00126e4c 00000448 T CTRPluginFramework::Search32::SubsidiarySearchSpecifiedU16(std::vector<CTRPluginFramework::Results32WithOld, IAllocator<CTRPluginFramework::Results32WithOld> >&, CTRPluginFramework::SearchFlags, CTRPluginFramework::Results32WithOld*)
00127294 00000444 T CTRPluginFramework::Search32::SubsidiarySearchSpecifiedU32(std::vector<CTRPluginFramework::Results32WithOld, IAllocator<CTRPluginFramework::Results32WithOld> >&, CTRPluginFramework::SearchFlags, CTRPluginFramework::Results32WithOld*)
001276d8 00000630 T CTRPluginFramework::Search32::SubsidiarySearchSpecifiedFloat(std::vector<CTRPluginFramework::Results32WithOld, IAllocator<CTRPluginFramework::Results32WithOld> >&, CTRPluginFramework::SearchFlags, CTRPluginFramework::Results32WithOld*)
00127d08 000008bc T CTRPluginFramework::Search32::SubsidiarySearchUnknownU8(std::vector<CTRPluginFramework::Results32WithOld, IAllocator<CTRPluginFramework::Results32WithOld> >&, CTRPluginFramework::SearchFlags, CTRPluginFramework::Results32WithOld*)
001285c4 000008c0 T CTRPluginFramework::Search32::SubsidiarySearchUnknownU16(std::vector<CTRPluginFramework::Results32WithOld, IAllocator<CTRPluginFramework::Results32WithOld> >&, CTRPluginFramework::SearchFlags, CTRPluginFramework::Results32WithOld*)
00128e84 000008bc T CTRPluginFramework::Search32::SubsidiarySearchUnknownU32(std::vector<CTRPluginFramework::Results32WithOld, IAllocator<CTRPluginFramework::Results32WithOld> >&, CTRPluginFramework::SearchFlags, CTRPluginFramework::Results32WithOld*)
00129740 00000c50 T CTRPluginFramework::Search32::SubsidiarySearchUnknownFloat(std::vector<CTRPluginFramework::Results32WithOld, IAllocator<CTRPluginFramework::Results32WithOld> >&, CTRPluginFramework::SearchFlags, CTRPluginFramework::Results32WithOld*)
0012a390 00000044 T CTRPluginFramework::Search::UpdateProgress()
0012a3d4 00000194 T CTRPluginFramework::Search::CheckNextRegion()
0012a568 00000078 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(char const*, std::allocator<char> const&) [clone .isra.27]
0012a5e0 00000008 T CTRPluginFramework::Search::GetHeader() const
0012a5e8 00000058 T CTRPluginFramework::Search::GetTotalResults(CTRPluginFramework::Header const&) const
0012a640 0000000c T CTRPluginFramework::Search::GetType() const
0012a64c 00000018 T CTRPluginFramework::Search::IsFirstUnknownSearch() const
0012a664 00000070 T CTRPluginFramework::Search::WriteHeader()
0012a6d4 00000058 T CTRPluginFramework::Search::WriteResults()
0012a72c 0000004c T CTRPluginFramework::Search::GetRegionIndex(unsigned long)
0012a778 00000220 T CTRPluginFramework::Search::ExtractPreviousHits(void*, unsigned long, unsigned long, unsigned long&, bool)
0012a998 00000240 T CTRPluginFramework::Search::Search(CTRPluginFramework::Search*)
0012a998 00000240 T CTRPluginFramework::Search::Search(CTRPluginFramework::Search*)
0012abd8 000000d8 W void std::vector<CTRPluginFramework::Search::RegionIndex, std::allocator<CTRPluginFramework::Search::RegionIndex> >::_M_realloc_insert<CTRPluginFramework::Search::RegionIndex const&>(__gnu_cxx::__normal_iterator<CTRPluginFramework::Search::RegionIndex*, std::vector<CTRPluginFramework::Search::RegionIndex, std::allocator<CTRPluginFramework::Search::RegionIndex> > >, CTRPluginFramework::Search::RegionIndex const&)
0012acb0 0000008c T CTRPluginFramework::Search::CreateIndexTable()
0012ad3c 000001a8 T CTRPluginFramework::Search::Search(CTRPluginFramework::Search*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
0012ad3c 000001a8 T CTRPluginFramework::Search::Search(CTRPluginFramework::Search*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
0012aee4 00000080 T CTRPluginFramework::Search::Cancel()
0012af64 00000118 T CTRPluginFramework::Search::ExecuteSearch()
0012b07c 00000090 T CTRPluginFramework::EventManager::EventManager()
0012b07c 00000090 T CTRPluginFramework::EventManager::EventManager()
0012b10c 00000168 W void std::deque<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >::_M_push_back_aux<CTRPluginFramework::Event const&>(CTRPluginFramework::Event const&)
0012b274 00000044 W std::deque<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >::push_back(CTRPluginFramework::Event const&)
0012b2b8 0000028c T CTRPluginFramework::EventManager::ProcessEvents()
0012b544 00000104 T CTRPluginFramework::EventManager::PopEvent(CTRPluginFramework::Event&, bool)
0012b648 00000008 T CTRPluginFramework::EventManager::PollEvent(CTRPluginFramework::Event&)
0012b650 00000024 t addrMapNodeComparator(rbtree_node const*, rbtree_node const*)
0012b674 00000004 t addrMapNodeDestructor(rbtree_node*)
0012b678 00000110 T CTRPluginFramework::Heap::MemAlign(unsigned int, unsigned int)
0012b788 00000008 T CTRPluginFramework::Heap::Alloc(unsigned int)
0012b790 00000050 T CTRPluginFramework::Heap::Free(void*)
0012b7e0 0000000c T CTRPluginFramework::Heap::SpaceFree()
0012b7ec 00000128 T CTRPluginFramework::ProcessImpl::Initialize()
0012b914 0000004c T CTRPluginFramework::ProcessImpl::UpdateThreadHandle()
0012b960 00000018 T CTRPluginFramework::ProcessImpl::IsPaused()
0012b978 00000018 T IsPaused
0012b990 00000188 T CTRPluginFramework::ProcessImpl::Pause(bool)
0012bb18 00000158 T CTRPluginFramework::ProcessImpl::Play(bool)
0012bc70 00000060 T CTRPluginFramework::FromPhysicalToVirtual(unsigned long)
0012bcd0 00000018 T CTRPluginFramework::GetBPP(GSPGPU_FramebufferFormats)
0012bce8 00000030 T CTRPluginFramework::ScreenImpl::ScreenImpl(unsigned long, unsigned long, bool)
0012bce8 00000030 T CTRPluginFramework::ScreenImpl::ScreenImpl(unsigned long, unsigned long, bool)
0012bd18 00000060 T CTRPluginFramework::ScreenImpl::Initialize()
0012bd78 000000a8 T CTRPluginFramework::ScreenImpl::Fade(float, bool)
0012be20 00000068 T CTRPluginFramework::ScreenImpl::Acquire(unsigned long, unsigned long, unsigned long, unsigned long)
0012be88 000000b4 T CTRPluginFramework::ScreenImpl::Copy()
0012bf3c 000000b8 T CTRPluginFramework::ScreenImpl::Acquire()
0012bff4 00000008 T CTRPluginFramework::ScreenImpl::IsTopScreen()
0012bffc 0000005c T CTRPluginFramework::ScreenImpl::Is3DEnabled()
0012c058 00000118 T CTRPluginFramework::ScreenImpl::Flush()
0012c170 00000118 T CTRPluginFramework::ScreenImpl::Invalidate()
0012c288 00000058 T CTRPluginFramework::ScreenImpl::Flash(CTRPluginFramework::Color&)
0012c2e0 00000078 T CTRPluginFramework::ScreenImpl::Clean()
0012c358 00000074 T CTRPluginFramework::ScreenImpl::SwapBuffer(bool, bool)
0012c3cc 00000008 T CTRPluginFramework::ScreenImpl::GetFormat()
0012c3d4 00000008 T CTRPluginFramework::ScreenImpl::GetStride()
0012c3dc 00000008 T CTRPluginFramework::ScreenImpl::GetBytesPerPixel()
0012c3e4 0000001c T CTRPluginFramework::ScreenImpl::GetFramebufferInfos(int&, int&, GSPGPU_FramebufferFormats&)
0012c400 0000001c T CTRPluginFramework::ScreenImpl::GetLeftFramebuffer(bool)
0012c41c 00000054 T CTRPluginFramework::ScreenImpl::GetLeftFramebuffer(int, int)
0012c470 00000030 T CTRPluginFramework::ScreenImpl::GetRightFramebuffer(bool)
0012c4a0 00000058 T CTRPluginFramework::ScreenImpl::GetRightFramebuffer(int, int)
0012c4f8 00000074 T CTRPluginFramework::ScreenImpl::GetPosFromAddress(unsigned long, int&, int&)
0012c56c 000000f0 T CTRPluginFramework::SystemImpl::Initialize()
0012c65c 00000010 T CTRPluginFramework::SystemImpl::GetIOBaseLCD()
0012c66c 00000010 T CTRPluginFramework::SystemImpl::GetIOBasePDC()
0012c67c 00000028 T CTRPluginFramework::ARCode::ToString[abi:cxx11]() const
0012c6a4 00000020 W std::vector<unsigned char, std::allocator<unsigned char> >::~vector()
0012c6a4 00000020 W std::vector<unsigned char, std::allocator<unsigned char> >::~vector()
0012c6c4 00000088 T CTRPluginFramework::ActionReplayPriv::Str2U32(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, bool&)
0012c74c 00000138 T CTRPluginFramework::ARCode::ARCode(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, bool&)
0012c74c 00000138 T CTRPluginFramework::ARCode::ARCode(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, bool&)
0012c884 00000104 T CTRPluginFramework::ARCode::Update(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
0012c988 0000006c T CTRPluginFramework::ARCode::Update()
0012c9f4 000000c4 T CTRPluginFramework::ARCode::ARCode(CTRPluginFramework::ARCode const&)
0012c9f4 000000c4 T CTRPluginFramework::ARCode::ARCode(CTRPluginFramework::ARCode const&)
0012cab8 00000040 T CTRPluginFramework::ARCode::ARCode(unsigned char, unsigned long, unsigned long)
0012cab8 00000040 T CTRPluginFramework::ARCode::ARCode(unsigned char, unsigned long, unsigned long)
0012caf8 00000040 T CTRPluginFramework::ARCodeContext::Update()
0012cb38 00000048 T CTRPluginFramework::ARCodeContext::Clear()
0012cb80 00000074 t _GLOBAL__sub_I__ZN18CTRPluginFramework11g_codeTypesE
0012cbf4 00000060 t CTRPluginFramework::GetCond32Str(unsigned long, unsigned long, char const*)
0012cc54 000000cc t CTRPluginFramework::GetCond16Str(unsigned long, unsigned long, char const*)
0012cd20 0000000c t void __gnu_cxx::new_allocator<CTRPluginFramework::ARCode>::construct<CTRPluginFramework::ARCode, CTRPluginFramework::ARCode const&>(CTRPluginFramework::ARCode*, CTRPluginFramework::ARCode const&) [clone .isra.29]
0012cd20 0000000c t void __gnu_cxx::new_allocator<CTRPluginFramework::ARCode>::construct<CTRPluginFramework::ARCode, CTRPluginFramework::ARCode>(CTRPluginFramework::ARCode*, CTRPluginFramework::ARCode&&) [clone .isra.51]
0012cd2c 00000088 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(char const*, std::allocator<char> const&) [clone .isra.85]
0012cdb4 0000005c t CTRPluginFramework::ColorToString(CTRPluginFramework::Color const&)
0012ce10 00000770 t CTRPluginFramework::ColorCodeLine(CTRPluginFramework::ARCode const&)
0012d580 00000080 T CTRPluginFramework::ARCodeEditor::CodeLine::CodeLine(CTRPluginFramework::ARCode&)
0012d580 00000080 T CTRPluginFramework::ARCodeEditor::CodeLine::CodeLine(CTRPluginFramework::ARCode&)
0012d600 00000050 T CTRPluginFramework::ARCodeEditor::CodeLine::CodeLine(CTRPluginFramework::ARCodeEditor::CodeLine&&)
0012d600 00000050 T CTRPluginFramework::ARCodeEditor::CodeLine::CodeLine(CTRPluginFramework::ARCodeEditor::CodeLine const&)
0012d600 00000050 T CTRPluginFramework::ARCodeEditor::CodeLine::CodeLine(CTRPluginFramework::ARCodeEditor::CodeLine&&)
0012d600 00000050 T CTRPluginFramework::ARCodeEditor::CodeLine::CodeLine(CTRPluginFramework::ARCodeEditor::CodeLine const&)
0012d650 00000b10 T CTRPluginFramework::ARCodeEditor::CodeLine::Update()
0012e160 000001a0 T CTRPluginFramework::ARCodeEditor::ARCodeEditor()
0012e160 000001a0 T CTRPluginFramework::ARCodeEditor::ARCodeEditor()
0012e300 000002e4 T CTRPluginFramework::ARCodeEditor::_RenderTop()
0012e5e4 0000001c T CTRPluginFramework::ARCodeEditor::_RenderBottom()
0012e600 00000088 T CTRPluginFramework::ARCodeEditor::_Update()
0012e688 00000038 W std::vector<CTRPluginFramework::ARCodeEditor::CodeLine, std::allocator<CTRPluginFramework::ARCodeEditor::CodeLine> >::clear()
0012e6c0 00000184 W void std::vector<CTRPluginFramework::ARCodeEditor::CodeLine, std::allocator<CTRPluginFramework::ARCodeEditor::CodeLine> >::_M_realloc_insert<CTRPluginFramework::ARCodeEditor::CodeLine>(__gnu_cxx::__normal_iterator<CTRPluginFramework::ARCodeEditor::CodeLine*, std::vector<CTRPluginFramework::ARCodeEditor::CodeLine, std::allocator<CTRPluginFramework::ARCodeEditor::CodeLine> > >, CTRPluginFramework::ARCodeEditor::CodeLine&&)
0012e844 00000044 W void std::vector<CTRPluginFramework::ARCodeEditor::CodeLine, std::allocator<CTRPluginFramework::ARCodeEditor::CodeLine> >::emplace_back<CTRPluginFramework::ARCodeEditor::CodeLine>(CTRPluginFramework::ARCodeEditor::CodeLine&&)
0012e888 00000064 W std::vector<CTRPluginFramework::ARCode, std::allocator<CTRPluginFramework::ARCode> >::_M_check_len(unsigned int, char const*) const
0012e8ec 0000002c W void std::_Destroy_aux<false>::__destroy<CTRPluginFramework::ARCode*>(CTRPluginFramework::ARCode*, CTRPluginFramework::ARCode*)
0012e918 00000028 W std::vector<CTRPluginFramework::ARCode, std::allocator<CTRPluginFramework::ARCode> >::~vector()
0012e918 00000028 W std::vector<CTRPluginFramework::ARCode, std::allocator<CTRPluginFramework::ARCode> >::~vector()
0012e940 0000004c W CTRPluginFramework::ARCode::operator=(CTRPluginFramework::ARCode const&)
0012e98c 00000064 W CTRPluginFramework::ARCode* std::__uninitialized_copy<false>::__uninit_copy<CTRPluginFramework::ARCode const*, CTRPluginFramework::ARCode*>(CTRPluginFramework::ARCode const*, CTRPluginFramework::ARCode const*, CTRPluginFramework::ARCode*)
0012e9f0 000000bc W std::vector<CTRPluginFramework::ARCode, std::allocator<CTRPluginFramework::ARCode> >::_M_insert_rval(__gnu_cxx::__normal_iterator<CTRPluginFramework::ARCode const*, std::vector<CTRPluginFramework::ARCode, std::allocator<CTRPluginFramework::ARCode> > >, CTRPluginFramework::ARCode&&)
0012eaac 00000328 T CTRPluginFramework::ARCodeEditor::_ReloadCodeLines()
0012edd4 000004c0 T CTRPluginFramework::ARCodeEditor::CodeLine::Edit(unsigned long, unsigned long)
0012f294 00000468 T CTRPluginFramework::ARCodeEditor::_ProcessEvent(CTRPluginFramework::Event&)
0012f6fc 000004bc T CTRPluginFramework::ARCodeEditor::operator()(std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >&)
0012fbb8 000000f0 T CTRPluginFramework::ARCodeEditor::Edit(CTRPluginFramework::ARCodeContext&)
0012fca8 00000020 t std::vector<CTRPluginFramework::ActionReplay_ProcessString(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, bool)::PColor, std::allocator<CTRPluginFramework::ActionReplay_ProcessString(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, bool)::PColor> >::~vector()
0012fca8 00000020 t std::vector<CTRPluginFramework::ActionReplay_ProcessString(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, bool)::PColor, std::allocator<CTRPluginFramework::ActionReplay_ProcessString(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, bool)::PColor> >::~vector()
0012fcc8 0000001c t bool __gnu_cxx::__ops::_Iter_pred<CTRPluginFramework::Rtrim(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)::{lambda(char)#1}>::operator()<std::reverse_iterator<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >(std::reverse_iterator<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >) [clone .isra.63]
0012fce4 00000114 t CTRPluginFramework::Rtrim(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)
0012fdf8 00000078 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(char const*, std::allocator<char> const&) [clone .isra.85]
0012fe70 00000018 t bool __gnu_cxx::__ops::_Iter_pred<CTRPluginFramework::Ltrim(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)::{lambda(char)#1}>::operator()<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >(__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >) [clone .isra.59]
0012fe88 000000f4 t CTRPluginFramework::Ltrim(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)
0012ff7c 00000010 t CTRPluginFramework::Trim(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)
0012ff8c 000000d8 T CTRPluginFramework::ActionReplay_OpenCheatsFile(CTRPluginFramework::File&, bool)
00130064 00000054 T CTRPluginFramework::ActionReplay_CheckCodeTypeValidity(unsigned long)
001300b8 00000044 T CTRPluginFramework::ActionReplay_IsHexCode(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
001300fc 00000048 T CTRPluginFramework::ActionReplay_IsValidCode(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
00130144 000004d8 T CTRPluginFramework::ActionReplay_ProcessString(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, bool)
0013061c 00000044 W std::_Deque_base<CTRPluginFramework::MenuFolderImpl*, std::allocator<CTRPluginFramework::MenuFolderImpl*> >::~_Deque_base()
0013061c 00000044 W std::_Deque_base<CTRPluginFramework::MenuFolderImpl*, std::allocator<CTRPluginFramework::MenuFolderImpl*> >::~_Deque_base()
00130660 00000014 W std::deque<CTRPluginFramework::MenuFolderImpl*, std::allocator<CTRPluginFramework::MenuFolderImpl*> >::~deque()
00130660 00000014 W std::deque<CTRPluginFramework::MenuFolderImpl*, std::allocator<CTRPluginFramework::MenuFolderImpl*> >::~deque()
00130674 00000020 W std::deque<CTRPluginFramework::MenuFolderImpl*, std::allocator<CTRPluginFramework::MenuFolderImpl*> >::back()
00130694 0000018c W void std::vector<CTRPluginFramework::ARCode, std::allocator<CTRPluginFramework::ARCode> >::_M_realloc_insert<CTRPluginFramework::ARCode const&>(__gnu_cxx::__normal_iterator<CTRPluginFramework::ARCode*, std::vector<CTRPluginFramework::ARCode, std::allocator<CTRPluginFramework::ARCode> > >, CTRPluginFramework::ARCode const&)
00130820 00000168 W void std::deque<CTRPluginFramework::MenuFolderImpl*, std::allocator<CTRPluginFramework::MenuFolderImpl*> >::_M_push_back_aux<CTRPluginFramework::MenuFolderImpl* const&>(CTRPluginFramework::MenuFolderImpl* const&)
00130988 00000820 T CTRPluginFramework::ActionReplay_LoadCodes(CTRPluginFramework::MenuFolderImpl*)
001311a8 000000c4 t CTRPluginFramework::RemoveFormat(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
0013126c 00000078 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(char const*, std::allocator<char> const&) [clone .isra.25]
001312e4 00000344 T CTRPluginFramework::ActionReplay_WriteToFile(CTRPluginFramework::LineWriter&, CTRPluginFramework::MenuItem*)
00131628 00000054 t CTRPluginFramework::ActionReplay_ExecuteCode(CTRPluginFramework::MenuEntryImpl*)
0013167c 00000060 T CTRPluginFramework::MenuEntryActionReplay::~MenuEntryActionReplay()
0013167c 00000060 T CTRPluginFramework::MenuEntryActionReplay::~MenuEntryActionReplay()
001316dc 0000001c T CTRPluginFramework::MenuEntryActionReplay::~MenuEntryActionReplay()
001316f8 00000050 T CTRPluginFramework::MenuEntryActionReplay::MenuEntryActionReplay(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
001316f8 00000050 T CTRPluginFramework::MenuEntryActionReplay::MenuEntryActionReplay(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
00131748 0000009c T CTRPluginFramework::MenuEntryActionReplay::Update()
001317e4 0000002c W MemBlock::Create(unsigned char*, unsigned long)
00131810 00000034 W MemPool::DelBlock(MemBlock*)
00131844 0000005c T MemPool::CoalesceRight(MemBlock*)
001318a0 0000011c T MemPool::Allocate(MemChunk&, unsigned long, int)
001319bc 00000100 T MemPool::Deallocate(MemChunk const&)
00131abc 00000020 T MemPool::GetFreeSpace()
00131adc 00000124 T __system_allocateHeaps
00131c00 00000034 T arm11kSetKProcessId
00131c34 00000028 T arm11kGetCurrentKProcess
00131c5c 00000024 T arm11kMemcpy
00131c80 00000064 T arm11kSvcControlMemory
00131ce4 00000018 T getKernelObjectPtr
00131cfc 000000a0 T cfguInit
00131d9c 00000034 T cfguExit
00131dd0 00000044 T CFGU_GetConfigInfoBlk2
00131e14 00000014 T CFGU_GetSystemLanguage
00131e28 000000a8 T fontEnsureMapped
00131ed0 0000011c T fontGlyphIndexFromCodePoint
00131fec 00000074 T fontGetCharWidthInfo
00132060 00000050 T srvExit
001320b0 00000034 T srvRegisterClient
001320e4 00000064 T srvInit
00132148 00000068 T srvGetServiceHandleDirect
001321b0 00000004 T srvGetServiceHandle
001321b4 00000034 T srvPublishToSubscriber
001321e8 0000000c T __sync_init
001321f4 00000018 T __sync_fini
0013220c 00000018 T LightLock_Init
00132224 0000008c T LightLock_Lock
001322b0 00000034 T LightLock_TryLock
001322e4 00000050 T LightLock_Unlock
00132334 00000018 T RecursiveLock_Init
0013234c 00000030 T RecursiveLock_Lock
0013237c 00000044 T RecursiveLock_TryLock
001323c0 00000034 T RecursiveLock_Unlock
001323f4 00000030 T LightEvent_Init
00132424 00000060 T LightEvent_Clear
00132484 00000060 T LightEvent_Pulse
001324e4 000000b4 T LightEvent_Signal
00132598 000000a8 T LightEvent_Wait
00132640 00000168 T threadCreate
001327a8 0000001c T threadFree
001327c4 00000024 T threadJoin
001327e8 00000030 T threadGetCurrent
00132818 0000003c T threadExit
00132854 0000003c t _thread_begin
00132890 00000088 T acInit
00132918 00000034 T acExit
0013294c 000000a0 T amInit
001329ec 00000034 T amExit
00132a20 00000128 T aptSendCommand
00132b48 0000006c T APT_CheckNew3DS
00132bb4 00000048 T APT_GetSharedFont
00132bfc 00000028 t fsSession
00132c24 00000040 t fsSessionForArchive
00132c64 00000038 T fsExit
00132c9c 00000028 T FSUSER_Initialize
00132cc4 000000b0 T fsInit
00132d74 00000080 T FSUSER_OpenFile
00132df4 00000068 T FSUSER_DeleteFile
00132e5c 000000a4 T FSUSER_RenameFile
00132f00 00000070 T FSUSER_CreateDirectory
00132f70 0000006c T FSUSER_OpenDirectory
00132fdc 00000074 T FSUSER_OpenArchive
00133050 00000058 T FSFILE_Read
001330a8 00000060 T FSFILE_Write
00133108 00000038 T FSFILE_GetSize
00133140 00000028 T FSFILE_SetSize
00133168 0000003c T FSFILE_Close
001331a4 00000024 T FSFILE_Flush
001331c8 00000050 T FSDIR_Read
00133218 0000003c T FSDIR_Close
00133254 000000e8 t gspEventThreadMain
0013333c 00000098 T gspInitEventHandler
001333d4 00000040 T gspExitEventHandler
00133414 0000008c T gspExit
001334a0 0000005c T gspWaitForEvent
001334fc 00000044 T GSPGPU_FlushDataCache
00133540 00000044 T GSPGPU_InvalidateDataCache
00133584 00000064 T GSPGPU_RegisterInterruptRelayQueue
001335e8 000000dc T gspInit
001336c4 0000002c T GSPGPU_SaveVramSysArea
001336f0 0000002c T GSPGPU_RestoreVramSysArea
0013371c 000000bc T hidExit
001337d8 00000034 T hidCheckSectionUpdateTime
0013380c 0000016c T hidScanInput
00133978 00000010 T hidKeysHeld
00133988 00000010 T hidKeysDown
00133998 00000010 T hidKeysUp
001339a8 00000018 T hidTouchRead
001339c0 00000090 T HIDUSER_GetHandles
00133a50 00000174 T hidInit
00133bc4 00000034 T irrstCheckSectionUpdateTime
00133bf8 00000070 T irrstScanInput
00133c68 0000001c T irrstKeysHeld
00133c84 00000050 T IRRST_GetHandles
00133cd4 00000034 T IRRST_Initialize
00133d08 00000124 T irrstInit
00133e2c 0000002c T IRRST_Shutdown
00133e58 000000a8 T irrstExit
00133f00 0000002c t __ctru_get_reent
00133f2c 000000f0 T __system_initSyscalls
0013401c 0000005c T decode_utf16
00134078 00000138 T decode_utf8
001341b0 00000054 T encode_utf16
00134204 000000e0 T encode_utf8
001342e4 000000d4 T utf16_to_utf8
001343b8 000000ac T utf8_to_utf16
00134464 00000054 T rbtree_find
001344b8 00000010 T rbtree_init
001344c8 00000174 t do_insert
0013463c 00000008 T rbtree_insert
00134644 00000014 t is_black
00134658 000002c8 T rbtree_remove
00134920 00000094 T rbtree_rotate
001349b4 T loadCROHooked
001349d0 T svcControlMemory
001349f0 T svcQueryMemory
00134a20 T svcCreateThread
00134a40 T svcExitThread
00134a48 T svcSleepThread
00134a50 T svcSetThreadPriority
00134a58 T svcReleaseMutex
00134a60 T svcCreateEvent
00134a74 T svcSignalEvent
00134a7c T svcClearEvent
00134a84 T svcMapMemoryBlock
00134a8c T svcUnmapMemoryBlock
00134a94 T svcCreateAddressArbiter
00134aa8 T svcArbitrateAddress
00134ac0 T svcCloseHandle
00134ac8 T svcWaitSynchronization
00134ad0 T svcGetSystemTick
00134ad8 T svcGetSystemInfo
00134af0 T svcGetProcessInfo
00134b08 T svcConnectToPort
00134b1c T svcSendSyncRequest
00134b24 T svcOpenProcess
00134b38 T svcBreak
00134b40 T svcInvalidateProcessDataCache
00134b48 T svcFlushProcessDataCache
00134b50 T svcControlProcessMemory
00134b68 T svcBackdoor
00134b70 T svcKernelSetState
00134b78 T svcQueryProcessMemory
00134b9c 0000004c T Hook::Hook()
00134b9c 0000004c T Hook::Hook()
00134be8 000000c8 T Hook::Initialize(unsigned long, unsigned long, bool)
00134cb0 00000060 T Hook::Enable()
00134d10 00000060 T Hook::Disable()
00134d70 0000003c T CTRPluginFramework::MessageBox::MessageBox(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::DialogType)
00134d70 0000003c T CTRPluginFramework::MessageBox::MessageBox(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::DialogType)
00134dac 00000034 T CTRPluginFramework::MessageBox::MessageBox(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::DialogType)
00134dac 00000034 T CTRPluginFramework::MessageBox::MessageBox(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::DialogType)
00134de0 0000003c T CTRPluginFramework::MessageBox::~MessageBox()
00134de0 0000003c T CTRPluginFramework::MessageBox::~MessageBox()
00134e1c 00000008 T CTRPluginFramework::MessageBox::operator()() const
00134e24 00000014 T CTRPluginFramework::Touch::IsDown()
00134e38 00000028 T CTRPluginFramework::Touch::GetPosition()
00134e60 0000002c T CTRPluginFramework::LineReader::LineReader(CTRPluginFramework::File&)
00134e60 0000002c T CTRPluginFramework::LineReader::LineReader(CTRPluginFramework::File&)
00134e8c 00000018 T CTRPluginFramework::LineReader::~LineReader()
00134e8c 00000018 T CTRPluginFramework::LineReader::~LineReader()
00134ea4 00000114 T CTRPluginFramework::LineReader::operator()(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)
00134fb8 00000028 T CTRPluginFramework::LineWriter::LineWriter(CTRPluginFramework::File&)
00134fb8 00000028 T CTRPluginFramework::LineWriter::LineWriter(CTRPluginFramework::File&)
00134fe0 00000080 T CTRPluginFramework::LineWriter::endl[abi:cxx11]()
00135060 00000048 T CTRPluginFramework::LineWriter::Flush()
001350a8 0000001c T CTRPluginFramework::LineWriter::~LineWriter()
001350a8 0000001c T CTRPluginFramework::LineWriter::~LineWriter()
001350c4 00000070 T CTRPluginFramework::LineWriter::operator<<(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
00135134 00000018 T CTRPluginFramework::LineWriter::Close()
0013514c 0000003c T CTRPluginFramework::ResetColor[abi:cxx11]()
00135188 00000024 T CTRPluginFramework::operator<<(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, char const*)
001351ac 00000024 T CTRPluginFramework::operator<<(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
001351d0 0000009c T CTRPluginFramework::operator<<(CTRPluginFramework::Color const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
0013526c 00000004 T CTRPluginFramework::CheckBox::~CheckBox()
0013526c 00000004 T CTRPluginFramework::CheckBox::~CheckBox()
00135270 00000014 T CTRPluginFramework::CheckBox::~CheckBox()
00135284 000000e4 T CTRPluginFramework::CheckBox::Update(bool, CTRPluginFramework::Vector<int> const&)
00135368 00000060 T CTRPluginFramework::CheckBox::CheckBox(int, int)
00135368 00000060 T CTRPluginFramework::CheckBox::CheckBox(int, int)
001353c8 00000008 T CTRPluginFramework::CheckBox::IsChecked() const
001353d0 000000ac T CTRPluginFramework::ComboBox::Draw()
0013547c 000000ac T CTRPluginFramework::ComboBox::operator()()
00135528 0000004c W CTRPluginFramework::ComboBox::~ComboBox()
00135528 0000004c W CTRPluginFramework::ComboBox::~ComboBox()
00135574 0000001c W CTRPluginFramework::ComboBox::~ComboBox()
00135590 00000050 T CTRPluginFramework::ComboBox::ComboBox(int, int, int, int)
00135590 00000050 T CTRPluginFramework::ComboBox::ComboBox(int, int, int, int)
001355e0 00000038 T CTRPluginFramework::ComboBox::Clear()
00135618 00000058 T CTRPluginFramework::ComboBox::Add(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
00135670 00000090 T CTRPluginFramework::ComboBox::Update(bool, CTRPluginFramework::Vector<int> const&)
00135700 00000004 T CTRPluginFramework::FloatingButton::~FloatingButton()
00135700 00000004 T CTRPluginFramework::FloatingButton::~FloatingButton()
00135704 00000014 T CTRPluginFramework::FloatingButton::Draw()
00135718 00000014 T CTRPluginFramework::FloatingButton::operator()()
0013572c 00000014 T CTRPluginFramework::FloatingButton::~FloatingButton()
00135740 000001c0 T CTRPluginFramework::FloatingButton::Update(bool, CTRPluginFramework::Vector<int> const&)
00135900 00000044 T CTRPluginFramework::FloatingButton::FloatingButton(CTRPluginFramework::Rect<int> const&, int (*)(int, int))
00135900 00000044 T CTRPluginFramework::FloatingButton::FloatingButton(CTRPluginFramework::Rect<int> const&, int (*)(int, int))
00135944 000001d8 T CTRPluginFramework::MessageBoxImpl::MessageBoxImpl(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::DialogType)
00135944 000001d8 T CTRPluginFramework::MessageBoxImpl::MessageBoxImpl(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::DialogType)
00135b1c 00000170 T CTRPluginFramework::MessageBoxImpl::MessageBoxImpl(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::DialogType)
00135b1c 00000170 T CTRPluginFramework::MessageBoxImpl::MessageBoxImpl(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::DialogType)
00135c8c 00000078 T CTRPluginFramework::MessageBoxImpl::_ProcessEvent(CTRPluginFramework::Event&)
00135d04 000002bc T CTRPluginFramework::MessageBoxImpl::_Draw()
00135fc0 00000104 T CTRPluginFramework::MessageBoxImpl::operator()()
001360c4 00000020 W CTRPluginFramework::NumericTextBox::~NumericTextBox()
001360c4 00000020 W CTRPluginFramework::NumericTextBox::~NumericTextBox()
001360e4 0000001c W CTRPluginFramework::NumericTextBox::~NumericTextBox()
00136100 00000094 T CTRPluginFramework::NumericTextBox::Draw()
00136194 00000038 t CTRPluginFramework::NumericTextBox::_UpdateVal() [clone .part.16]
001361cc 00000068 T CTRPluginFramework::NumericTextBox::_UpdateVal()
00136234 000000f8 T CTRPluginFramework::NumericTextBox::operator()()
0013632c 00000010 T CTRPluginFramework::NumericTextBox::SetValue(unsigned long)
0013633c 00000010 T CTRPluginFramework::NumericTextBox::SetValue(float)
0013634c 00000008 T CTRPluginFramework::NumericTextBox::UseHexadecimal(bool)
00136354 0000000c T CTRPluginFramework::NumericTextBox::Clear()
00136360 00000068 T CTRPluginFramework::NumericTextBox::NumericTextBox(int, int, int, int)
00136360 00000068 T CTRPluginFramework::NumericTextBox::NumericTextBox(int, int, int, int)
001363c8 00000080 T CTRPluginFramework::NumericTextBox::Update(bool, CTRPluginFramework::Vector<int> const&)
00136448 00000008 W CTRPluginFramework::Drawable::operator()()
00136450 00000004 T CTRPluginFramework::TextBox::Update(bool, CTRPluginFramework::Vector<int> const&)
00136454 000002e0 T CTRPluginFramework::TextBox::Draw()
00136734 000000ec T CTRPluginFramework::TextBox::TextBox()
00136734 000000ec T CTRPluginFramework::TextBox::TextBox()
00136820 0000000c T CTRPluginFramework::TextBox::Open() const
0013682c 0000000c T CTRPluginFramework::TextBox::Close() const
00136838 00000008 T CTRPluginFramework::TextBox::IsOpen() const
00136840 0000024c T CTRPluginFramework::TextBox::ProcessEvent(CTRPluginFramework::Event&)
00136a8c 0000000c T CTRPluginFramework::TextBox::DrawConst() const
00136a98 00000098 T CTRPluginFramework::TextBox::_GetWordWidth(unsigned char*, float&)
00136b30 000000b4 T CTRPluginFramework::CutWordWidth(unsigned char*, float&, float)
00136be4 000000d8 W void std::vector<unsigned char*, std::allocator<unsigned char*> >::_M_realloc_insert<unsigned char* const&>(__gnu_cxx::__normal_iterator<unsigned char**, std::vector<unsigned char*, std::allocator<unsigned char*> > >, unsigned char* const&)
00136cbc 0000003c W std::vector<unsigned char*, std::allocator<unsigned char*> >::push_back(unsigned char* const&)
00136cf8 000001e8 T CTRPluginFramework::TextBox::_GetTextInfos()
00136ee0 00000198 T CTRPluginFramework::TextBox::TextBox(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::Rect<int> const&)
00136ee0 00000198 T CTRPluginFramework::TextBox::TextBox(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::Rect<int> const&)
00137078 000000e8 T CTRPluginFramework::TextBox::Update(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)
00137160 00000004 T CTRPluginFramework::TouchKey::~TouchKey()
00137160 00000004 T CTRPluginFramework::TouchKey::~TouchKey()
00137164 00000014 T CTRPluginFramework::TouchKey::~TouchKey()
00137178 000000a0 T CTRPluginFramework::TouchKey::Update(bool, CTRPluginFramework::Vector<int> const&)
00137218 0000005c T CTRPluginFramework::TouchKey::TouchKey(int, CTRPluginFramework::Rect<int>, bool)
00137218 0000005c T CTRPluginFramework::TouchKey::TouchKey(int, CTRPluginFramework::Rect<int>, bool)
00137274 000000a0 T CTRPluginFramework::TouchKey::TouchKey(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::Rect<int>, int, bool)
00137274 000000a0 T CTRPluginFramework::TouchKey::TouchKey(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::Rect<int>, int, bool)
00137314 0000005c T CTRPluginFramework::TouchKey::TouchKey(int, int (*)(int, int, bool), CTRPluginFramework::Rect<int>, bool)
00137314 0000005c T CTRPluginFramework::TouchKey::TouchKey(int, int (*)(int, int, bool), CTRPluginFramework::Rect<int>, bool)
00137370 00000008 T CTRPluginFramework::TouchKey::Enable(bool)
00137378 00000128 T CTRPluginFramework::TouchKey::DrawCharacter(CTRPluginFramework::Rect<int> const&, CTRPluginFramework::Color const&)
001374a0 00000088 T CTRPluginFramework::TouchKey::Draw()
00137528 00000098 T CTRPluginFramework::TouchKey::operator()(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)
001375c0 000000ac T CTRPluginFramework::TouchKeyString::TouchKeyString(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::Rect<int>, bool)
001375c0 000000ac T CTRPluginFramework::TouchKeyString::TouchKeyString(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::Rect<int>, bool)
0013766c 000000b0 T CTRPluginFramework::TouchKeyString::Draw()
0013771c 000000a0 T CTRPluginFramework::TouchKeyString::Update(bool, CTRPluginFramework::Vector<int> const&)
001377bc 00000018 T CTRPluginFramework::TouchKeyString::Scroll(float)
001377d4 00000030 T CTRPluginFramework::TouchKeyString::operator()()
00137804 00000014 T CTRPluginFramework::UIContainer::UIContainer()
00137804 00000014 T CTRPluginFramework::UIContainer::UIContainer()
00137818 00000024 T CTRPluginFramework::UIContainer::Draw()
0013783c 00000034 T CTRPluginFramework::UIContainer::Update(bool, CTRPluginFramework::Vector<int> const&)
00137870 00000024 T CTRPluginFramework::UIContainer::ExecuteAll()
00137894 000000d8 W void std::vector<CTRPluginFramework::Drawable*, std::allocator<CTRPluginFramework::Drawable*> >::_M_realloc_insert<CTRPluginFramework::Drawable* const&>(__gnu_cxx::__normal_iterator<CTRPluginFramework::Drawable**, std::vector<CTRPluginFramework::Drawable*, std::allocator<CTRPluginFramework::Drawable*> > >, CTRPluginFramework::Drawable* const&)
0013796c 00000044 T CTRPluginFramework::UIContainer::operator+=(CTRPluginFramework::Drawable*)
001379b0 000000e4 T CTRPluginFramework::Converter::Converter()
001379b0 000000e4 T CTRPluginFramework::Converter::Converter()
00137a94 00000010 T CTRPluginFramework::Converter::Instance()
00137aa4 00000108 T CTRPluginFramework::Converter::_Draw()
00137bac 00000014 W std::deque<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >::~deque()
00137bac 00000014 W std::deque<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >::~deque()
00137bc0 000001e0 T CTRPluginFramework::Converter::operator()()
00137da0 00000078 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(char const*, std::allocator<char> const&) [clone .isra.26]
00137e18 0000004c T CTRPluginFramework::GatewayRAMDumper::GatewayRAMDumper()
00137e18 0000004c T CTRPluginFramework::GatewayRAMDumper::GatewayRAMDumper()
00137e64 000000bc T CTRPluginFramework::GatewayRAMDumper::_WriteHeader()
00137f20 000000e8 T CTRPluginFramework::GatewayRAMDumper::_DrawProgress()
00138008 00000064 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > std::operator+<char, std::char_traits<char>, std::allocator<char> >(char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
0013806c 00000314 T CTRPluginFramework::GatewayRAMDumper::_SelectRegion()
00138380 000000f8 W __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > std::__remove_if<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, __gnu_cxx::__ops::_Iter_equals_val<char const> >(__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, __gnu_cxx::__ops::_Iter_equals_val<char const>)
00138478 00000248 T CTRPluginFramework::GatewayRAMDumper::_OpenFile()
001386c0 00000280 T CTRPluginFramework::GatewayRAMDumper::operator()()
00138940 00000004 W CTRPluginFramework::IconButton<CTRPluginFramework::GuideReader, void>::~IconButton()
00138940 00000004 W CTRPluginFramework::IconButton<CTRPluginFramework::GuideReader, void>::~IconButton()
00138944 0000001c W CTRPluginFramework::IconButton<CTRPluginFramework::GuideReader, void>::Draw()
00138960 00000014 W CTRPluginFramework::IconButton<CTRPluginFramework::GuideReader, void>::~IconButton()
00138974 00000064 W CTRPluginFramework::IconButton<CTRPluginFramework::GuideReader, void>::operator()()
001389d8 00000078 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(char const*, std::allocator<char> const&) [clone .isra.36]
00138a50 000000c0 T CTRPluginFramework::GuideReader::_LoadBMP()
00138b10 000002bc t CTRPluginFramework::CreateFolder(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)
00138dcc 00000228 T CTRPluginFramework::GuideReader::GuideReader()
00138dcc 00000228 T CTRPluginFramework::GuideReader::GuideReader()
00138ff4 00000414 t CTRPluginFramework::GuideReader::_ProcessEvent(CTRPluginFramework::Event&) [clone .part.41]
00139408 00000018 T CTRPluginFramework::GuideReader::_ProcessEvent(CTRPluginFramework::Event&)
00139420 00000080 W CTRPluginFramework::IconButton<CTRPluginFramework::GuideReader, void>::Update(bool, CTRPluginFramework::Vector<int> const&)
001394a0 00000154 T CTRPluginFramework::GuideReader::Draw()
001395f4 00000070 T CTRPluginFramework::GuideReader::operator()(std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >&, CTRPluginFramework::Time&)
00139664 00000004 W CTRPluginFramework::IconButton<CTRPluginFramework::HexEditor, void>::~IconButton()
00139664 00000004 W CTRPluginFramework::IconButton<CTRPluginFramework::HexEditor, void>::~IconButton()
00139668 0000001c W CTRPluginFramework::IconButton<CTRPluginFramework::HexEditor, void>::Draw()
00139684 00000014 W CTRPluginFramework::IconButton<CTRPluginFramework::HexEditor, void>::~IconButton()
00139698 00000064 W CTRPluginFramework::IconButton<CTRPluginFramework::HexEditor, void>::operator()()
001396fc 00000078 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(char const*, std::allocator<char> const&) [clone .isra.48]
00139774 0000001c T CTRPluginFramework::HexEditor::_RenderBottom()
00139790 0000002c T CTRPluginFramework::HexEditor::_GetCursorAddress() const
001397bc 00000080 T CTRPluginFramework::HexEditor::_CreateCheat()
0013983c 00000118 T CTRPluginFramework::HexEditor::Goto(unsigned long, bool)
00139954 00000030 T CTRPluginFramework::HexEditor::_MoveBackward()
00139984 00000044 T CTRPluginFramework::HexEditor::_MoveForward()
001399c8 00000044 T CTRPluginFramework::HexEditor::_ApplyChanges()
00139a0c 00000034 T CTRPluginFramework::HexEditor::_DiscardChanges()
00139a40 00000054 T CTRPluginFramework::HexEditor::_GotoPreviousRegion()
00139a94 00000054 T CTRPluginFramework::HexEditor::_GotoNextRegion()
00139ae8 00000280 T CTRPluginFramework::HexEditor::_ProcessEvent(CTRPluginFramework::Event&)
00139d68 00000038 T CTRPluginFramework::HexEditor::_GetChar(unsigned char*, int)
00139da0 000005e4 T CTRPluginFramework::HexEditor::_RenderTop()
0013a384 0000022c T CTRPluginFramework::HexEditor::HexEditor(unsigned long)
0013a384 0000022c T CTRPluginFramework::HexEditor::HexEditor(unsigned long)
0013a5b0 00000044 W std::vector<CTRPluginFramework::TouchKey, std::allocator<CTRPluginFramework::TouchKey> >::at(unsigned int)
0013a5f4 000001e8 T CTRPluginFramework::HexEditor::_PromptForAddress(int)
0013a7dc 00000058 T CTRPluginFramework::HexEditor::_SaveThisAddress()
0013a834 000000e8 T CTRPluginFramework::HexEditor::_JumpTo(int)
0013a91c 00000080 W CTRPluginFramework::IconButton<CTRPluginFramework::HexEditor, void>::Update(bool, CTRPluginFramework::Vector<int> const&)
0013a99c 00000044 T CTRPluginFramework::HexEditor::_Update()
0013a9e0 00000150 T CTRPluginFramework::HexEditor::_BrowseHistory()
0013ab30 000002b0 T CTRPluginFramework::HexEditor::operator()(std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >&)
0013ade0 00000078 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(char const*, std::allocator<char> const&) [clone .isra.36]
0013ae58 000000dc T CTRPluginFramework::Menu::Menu(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, int (*)(int, int))
0013ae58 000000dc T CTRPluginFramework::Menu::Menu(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, int (*)(int, int))
0013af34 00000118 T CTRPluginFramework::Menu::Menu(CTRPluginFramework::MenuFolderImpl*, int (*)(int, int))
0013af34 00000118 T CTRPluginFramework::Menu::Menu(CTRPluginFramework::MenuFolderImpl*, int (*)(int, int))
0013b04c 0000003c T CTRPluginFramework::Menu::Open(CTRPluginFramework::MenuFolderImpl*, int)
0013b088 00000030 T CTRPluginFramework::Menu::~Menu()
0013b088 00000030 T CTRPluginFramework::Menu::~Menu()
0013b0b8 0000000c T CTRPluginFramework::Menu::Append(CTRPluginFramework::MenuItem*) const
0013b0c4 00000008 T CTRPluginFramework::Menu::GetFolder() const
0013b0cc 00000008 T CTRPluginFramework::Menu::GetRootFolder() const
0013b0d4 00000028 T CTRPluginFramework::Menu::GetSelectedItem() const
0013b0fc 000003a4 T CTRPluginFramework::Menu::Draw() const
0013b4a0 00000084 T CTRPluginFramework::Menu::_ScrollUp(int)
0013b524 00000084 T CTRPluginFramework::Menu::_ScrollDown(int)
0013b5a8 00000230 T CTRPluginFramework::Menu::ProcessEvent(CTRPluginFramework::Event&, CTRPluginFramework::MenuItem**)
0013b7d8 00000170 T CTRPluginFramework::Menu::Update(CTRPluginFramework::Time const&)
0013b948 00000068 T CTRPluginFramework::Menu::ShowNote()
0013b9b0 00000008 T CTRPluginFramework::Menu::CloseNote()
0013b9b8 00000008 T CTRPluginFramework::Menu::IsNoteOpen()
0013b9c0 00000040 W std::vector<CTRPluginFramework::MenuItem*, std::allocator<CTRPluginFramework::MenuItem*> >::_M_erase(__gnu_cxx::__normal_iterator<CTRPluginFramework::MenuItem**, std::vector<CTRPluginFramework::MenuItem*, std::allocator<CTRPluginFramework::MenuItem*> > >)
0013ba00 00000044 T CTRPluginFramework::Menu::Pop()
0013ba44 000000bc T CTRPluginFramework::Menu::Insert(CTRPluginFramework::MenuItem*)
0013bb00 00000020 W CTRPluginFramework::MenuEntryTools::~MenuEntryTools()
0013bb00 00000020 W CTRPluginFramework::MenuEntryTools::~MenuEntryTools()
0013bb20 0000001c W CTRPluginFramework::MenuEntryTools::~MenuEntryTools()
0013bb3c 00000094 T CTRPluginFramework::MenuEntryTools::MenuEntryTools(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, void (*)(), int (*)(int, int), void*)
0013bb3c 00000094 T CTRPluginFramework::MenuEntryTools::MenuEntryTools(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, void (*)(), int (*)(int, int), void*)
0013bbd0 00000060 T CTRPluginFramework::MenuEntryTools::MenuEntryTools(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, void (*)(), bool, bool, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
0013bbd0 00000060 T CTRPluginFramework::MenuEntryTools::MenuEntryTools(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, void (*)(), bool, bool, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
0013bc30 00000060 T CTRPluginFramework::MenuEntryTools::MenuEntryTools(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, void (*)(CTRPluginFramework::MenuEntryTools*), bool, bool, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
0013bc30 00000060 T CTRPluginFramework::MenuEntryTools::MenuEntryTools(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, void (*)(CTRPluginFramework::MenuEntryTools*), bool, bool, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
0013bc90 00000004 T CTRPluginFramework::MenuEntryTools::TriggerState()
0013bc94 0000000c T CTRPluginFramework::PluginMenuHome::_actionReplayBtn_OnClick()
0013bca0 0000000c T CTRPluginFramework::PluginMenuHome::_gameGuideBtn_OnClick()
0013bcac 0000000c T CTRPluginFramework::PluginMenuHome::_searchBtn_OnClick()
0013bcb8 0000000c T CTRPluginFramework::PluginMenuHome::_toolsBtn_OnClick()
0013bcc4 00000004 W CTRPluginFramework::IconButton<CTRPluginFramework::PluginMenuHome, void>::~IconButton()
0013bcc4 00000004 W CTRPluginFramework::IconButton<CTRPluginFramework::PluginMenuHome, void>::~IconButton()
0013bcc8 00000004 W CTRPluginFramework::ToggleButton<CTRPluginFramework::PluginMenuHome, void>::~ToggleButton()
0013bcc8 00000004 W CTRPluginFramework::ToggleButton<CTRPluginFramework::PluginMenuHome, void>::~ToggleButton()
0013bccc 0000001c W CTRPluginFramework::ToggleButton<CTRPluginFramework::PluginMenuHome, void>::Draw()
0013bce8 0000001c W CTRPluginFramework::IconButton<CTRPluginFramework::PluginMenuHome, void>::Draw()
0013bd04 00000014 W CTRPluginFramework::IconButton<CTRPluginFramework::PluginMenuHome, void>::~IconButton()
0013bd18 00000014 W CTRPluginFramework::ToggleButton<CTRPluginFramework::PluginMenuHome, void>::~ToggleButton()
0013bd2c 000000e8 T CTRPluginFramework::PluginMenuHome::_showStarredBtn_OnClick()
0013be14 0000003c T CTRPluginFramework::PluginMenuHome::_keyboardBtn_OnClick()
0013be50 00000058 t CTRPluginFramework::SelectableEntryCount(CTRPluginFramework::MenuFolderImpl&)
0013bea8 000000b4 t CTRPluginFramework::ScrollUp(int&, CTRPluginFramework::MenuFolderImpl&, int)
0013bf5c 000000e0 t CTRPluginFramework::ScrollDown(int&, CTRPluginFramework::MenuFolderImpl&, int)
0013c03c 0000008c T CTRPluginFramework::PluginMenuHome::_controllerBtn_OnClick()
0013c0c8 0000002c T CTRPluginFramework::PluginMenuHome::_InfoBtn_OnClick()
0013c0f4 00000064 W CTRPluginFramework::ToggleButton<CTRPluginFramework::PluginMenuHome, void>::operator()()
0013c158 00000064 W CTRPluginFramework::IconButton<CTRPluginFramework::PluginMenuHome, void>::operator()()
0013c1bc 00000078 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(char const*, std::allocator<char> const&) [clone .isra.38]
0013c234 00000044 T CTRPluginFramework::decoder(char*, unsigned long const*, int)
0013c278 0000000c T CTRPluginFramework::PluginMenuHome::Append(CTRPluginFramework::MenuItem*) const
0013c284 0000032c T CTRPluginFramework::PluginMenuHome::_RenderTop()
0013c5b0 00000104 T CTRPluginFramework::PluginMenuHome::_RenderBottom()
0013c6b4 00000260 T CTRPluginFramework::PluginMenuHome::_Update(CTRPluginFramework::Time)
0013c914 00000104 T CTRPluginFramework::PluginMenuHome::_TriggerEntry()
0013ca18 000003dc T CTRPluginFramework::PluginMenuHome::_ProcessEvent(CTRPluginFramework::Event&)
0013cdf4 000000d0 T CTRPluginFramework::PluginMenuHome::UnStar(CTRPluginFramework::MenuItem*)
0013cec4 00000080 T CTRPluginFramework::PluginMenuHome::_StarItem()
0013cf44 0000006c T CTRPluginFramework::PluginMenuHome::Init()
0013cfb0 00000084 T CTRPluginFramework::PluginMenuHome::AddPluginVersion(unsigned long)
0013d034 0000005c T CTRPluginFramework::PluginMenuHome::Close(CTRPluginFramework::MenuFolderImpl*)
0013d090 00000158 W CTRPluginFramework::Button<CTRPluginFramework::PluginMenuHome, void>::Button(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::PluginMenuHome&, void (CTRPluginFramework::PluginMenuHome::*)(), CTRPluginFramework::Rect<int>, int (*)(int, int))
0013d090 00000158 W CTRPluginFramework::Button<CTRPluginFramework::PluginMenuHome, void>::Button(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::PluginMenuHome&, void (CTRPluginFramework::PluginMenuHome::*)(), CTRPluginFramework::Rect<int>, int (*)(int, int))
0013d1e8 00000038 W CTRPluginFramework::Button<CTRPluginFramework::PluginMenuHome, void>::RoundedRatio(unsigned long)
0013d220 0000071c T CTRPluginFramework::PluginMenuHome::PluginMenuHome(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)
0013d220 0000071c T CTRPluginFramework::PluginMenuHome::PluginMenuHome(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)
0013d93c 00000078 W CTRPluginFramework::Rect<int>::Contains(CTRPluginFramework::Vector<int> const&) const
0013d9b4 00000080 W CTRPluginFramework::IconButton<CTRPluginFramework::PluginMenuHome, void>::Update(bool, CTRPluginFramework::Vector<int> const&)
0013da34 00000080 W CTRPluginFramework::ToggleButton<CTRPluginFramework::PluginMenuHome, void>::Update(bool, CTRPluginFramework::Vector<int> const&)
0013dab4 0000010c T CTRPluginFramework::PluginMenuHome::operator()(std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >&, int&, CTRPluginFramework::Time&)
0013dbc0 00000008 T CTRPluginFramework::ActionReplay_IsValidAddress(unsigned long, bool)
0013dbc8 00000024 T CTRPluginFramework::Write32(unsigned long, unsigned long)
0013dbec 00000024 T CTRPluginFramework::Write16(unsigned long, unsigned short)
0013dc10 00000024 T CTRPluginFramework::Write8(unsigned long, unsigned char)
0013dc34 00000028 T CTRPluginFramework::Read32(unsigned long, unsigned long&)
0013dc5c 00000028 T CTRPluginFramework::Read16(unsigned long, unsigned short&)
0013dc84 00000028 T CTRPluginFramework::Read8(unsigned long, unsigned char&)
0013dcac 00000020 W std::vector<CTRPluginFramework::ARCode, std::allocator<CTRPluginFramework::ARCode> >::clear()
0013dccc 00001444 T CTRPluginFramework::ARHandler::_Execute(std::vector<CTRPluginFramework::ARCode, std::allocator<CTRPluginFramework::ARCode> > const&)
0013f110 00000064 T CTRPluginFramework::ARHandler::Execute(std::vector<CTRPluginFramework::ARCode, std::allocator<CTRPluginFramework::ARCode> > const&, unsigned long (&) [2])
0013f174 00000020 t _GLOBAL__sub_I__ZN18CTRPluginFramework9ARHandler6OffsetE
0013f194 00000024 t addrMapNodeComparator(rbtree_node const*, rbtree_node const*)
0013f1b8 00000004 t addrMapNodeDestructor(rbtree_node*)
0013f1bc 000000d8 T mappableAlloc
0013f294 00000050 T mappableFree
0013f2e4 00000008 T envGetHandle
0013f2ec 0000005c t getSysTime
0013f348 000000fc T __libctru_gtod
0013f444 00000014 W __appExit
0013f458 00000078 W __libctru_exit
0013f4d0 00000050 T rbtree_node_next
0013f520 00000004 T operator delete[](void*)
0013f524 00000004 T operator new[](unsigned int)
0013f528 0000005c T __cxa_guard_acquire
0013f584 0000000c T __cxa_guard_release
0013f590 00000060 t __gxx_exception_cleanup(_Unwind_Reason_Code, _Unwind_Control_Block*)
0013f5f0 00000070 T __cxa_init_primary_exception
0013f660 00000054 T __cxa_throw
0013f6b4 000000b0 T __cxa_rethrow
0013f764 00000020 T __gnu_cxx::recursive_init_error::~recursive_init_error()
0013f764 00000020 T __gnu_cxx::recursive_init_error::~recursive_init_error()
0013f784 0000002c T __gnu_cxx::recursive_init_error::~recursive_init_error()
0013f7b0 00000004 T std::exception::~exception()
0013f7b0 00000004 T std::exception::~exception()
0013f7b4 00000004 T std::bad_exception::~bad_exception()
0013f7b4 00000004 T std::bad_exception::~bad_exception()
0013f7b8 0000000c T transaction clone for std::exception::what() const
0013f7b8 0000000c T std::exception::what() const
0013f7c4 0000000c T transaction clone for std::bad_exception::what() const
0013f7c4 0000000c T std::bad_exception::what() const
0013f7d0 00000018 T std::bad_exception::~bad_exception()
0013f7e8 00000020 T __cxxabiv1::__si_class_type_info::~__si_class_type_info()
0013f7e8 00000020 T __cxxabiv1::__si_class_type_info::~__si_class_type_info()
0013f808 0000002c T __cxxabiv1::__si_class_type_info::~__si_class_type_info()
0013f834 0000006c T __cxxabiv1::__si_class_type_info::__do_find_public_src(int, void const*, __cxxabiv1::__class_type_info const*, void const*) const
0013f8a0 000000d4 T __cxxabiv1::__si_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const
0013f974 00000044 T __cxxabiv1::__si_class_type_info::__do_upcast(__cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__upcast_result&) const
0013f9b8 0000000c T __cxa_get_globals_fast
0013f9c4 0000000c T __cxa_get_globals
0013f9d0 00000004 T operator delete(void*, unsigned int)
0013f9d4 000000d0 T __cxa_begin_catch
0013faa4 000000d8 T __cxa_end_catch
0013fb7c 00000004 T std::type_info::~type_info()
0013fb7c 00000004 T std::type_info::~type_info()
0013fb80 00000008 T std::type_info::__is_pointer_p() const
0013fb80 00000008 T std::type_info::__is_function_p() const
0013fb88 0000004c T std::type_info::operator==(std::type_info const&) const
0013fbd4 00000008 T __cxa_pure_virtual
0013fbdc 00000168 t read_encoded_value_with_base(unsigned char, unsigned int, unsigned char const*, unsigned int*)
0013fd44 00000060 t base_of_encoded_value(unsigned char, _Unwind_Context*) [clone .part.3]
0013fda4 000000e0 t parse_lsda_header(_Unwind_Context*, unsigned char const*, lsda_header_info*)
0013fe84 0000074c T __gxx_personality_v0
001405d0 00000004 T operator delete(void*)
001405d4 0000005c T operator new(unsigned int)
00140630 00000010 T __aeabi_atexit
00140640 000000d0 t (anonymous namespace)::pool::free(void*) [clone .constprop.4]
00140710 000000b4 t (anonymous namespace)::pool::allocate(unsigned int) [clone .constprop.5]
001407c4 00000044 T __cxa_allocate_exception
00140808 00000030 T __cxa_free_exception
00140838 00000040 t _GLOBAL__sub_I__ZN9__gnu_cxx9__freeresEv
00140878 0000005c T __cxxabiv1::__class_type_info::__do_upcast(__cxxabiv1::__class_type_info const*, void**) const
001408d4 00000014 T __cxxabiv1::__class_type_info::__do_find_public_src(int, void const*, __cxxabiv1::__class_type_info const*, void const*) const
001408e8 00000020 T __cxxabiv1::__class_type_info::~__class_type_info()
001408e8 00000020 T __cxxabiv1::__class_type_info::~__class_type_info()
00140908 0000002c T __cxxabiv1::__class_type_info::~__class_type_info()
00140934 00000068 T __cxxabiv1::__class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const
0014099c 0000002c T __cxxabiv1::__class_type_info::__do_upcast(__cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__upcast_result&) const
001409c8 00000044 T __cxxabiv1::__class_type_info::__do_catch(std::type_info const*, void**, unsigned int) const
00140a0c 00000018 T std::__detail::_List_node_base::_M_hook(std::__detail::_List_node_base*)
00140a24 00000014 T std::__detail::_List_node_base::_M_unhook()
00140a38 0000002c T std::__throw_bad_alloc()
00140a64 00000040 T std::__throw_logic_error(char const*)
00140aa4 00000040 T std::__throw_invalid_argument(char const*)
00140ae4 00000040 T std::__throw_length_error(char const*)
00140b24 00000040 T std::__throw_out_of_range(char const*)
00140b64 0000007c T std::__throw_out_of_range_fmt(char const*, ...)
00140be0 00000038 T std::logic_error::logic_error(char const*)
00140be0 00000038 T std::logic_error::logic_error(char const*)
00140c18 00000020 T std::invalid_argument::invalid_argument(char const*)
00140c18 00000020 T std::invalid_argument::invalid_argument(char const*)
00140c38 00000020 T std::length_error::length_error(char const*)
00140c38 00000020 T std::length_error::length_error(char const*)
00140c58 00000020 T std::out_of_range::out_of_range(char const*)
00140c58 00000020 T std::out_of_range::out_of_range(char const*)
00140c78 00000084 W std::string::_Rep::_S_create(unsigned int, unsigned int, std::allocator<char> const&)
00140cfc 00000004 W std::string::_Rep::_M_destroy(std::allocator<char> const&)
00140d00 000000b0 W char* std::string::_S_construct<char const*>(char const*, char const*, std::allocator<char> const&, std::forward_iterator_tag)
00140db0 00000040 W std::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(char const*, std::allocator<char> const&)
00140db0 00000040 W std::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(char const*, std::allocator<char> const&)
00140df0 00000054 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_create(unsigned int&, unsigned int)
00140e44 00000014 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_dispose()
00140e58 00000024 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_S_copy_chars(char*, char*, char*)
00140e7c 00000024 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_S_copy_chars(char*, char const*, char const*)
00140ea0 000000b8 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_assign(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
00140f58 00000110 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_mutate(unsigned int, unsigned int, char const*, unsigned int)
00141068 00000074 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_erase(unsigned int, unsigned int)
001410dc 0000006c W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&&)
001410dc 0000006c W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&&)
00141148 00000024 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::~basic_string()
00141148 00000024 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::~basic_string()
0014116c 00000090 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::operator=(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&&)
001411fc 00000114 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::reserve(unsigned int)
00141310 0000006c W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::push_back(char)
0014137c 0000006c W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::erase(unsigned int, unsigned int)
001413e8 00000028 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::erase(__gnu_cxx::__normal_iterator<char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >)
00141410 00000044 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::erase(__gnu_cxx::__normal_iterator<char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, __gnu_cxx::__normal_iterator<char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >)
00141454 00000018 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::pop_back()
0014146c 00000104 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_replace_aux(unsigned int, unsigned int, unsigned int, char)
00141570 00000048 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::insert(unsigned int, unsigned int, char)
001415b8 00000288 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_replace(unsigned int, unsigned int, char const*, unsigned int)
00141840 00000038 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::operator=(char const*)
00141878 0000004c W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::insert(unsigned int, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
001418c4 00000060 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::insert(unsigned int, char const*)
00141924 00000094 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_append(char const*, unsigned int)
001419b8 00000010 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::append(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
001419c8 00000010 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::operator+=(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
001419d8 0000002c W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::append(char const*, unsigned int)
00141a04 00000048 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::append(char const*)
00141a4c 00000048 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::operator+=(char const*)
00141a94 000000a8 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::find(char const*, unsigned int, unsigned int) const
00141b3c 00000010 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::find(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned int) const
00141b4c 00000070 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::rfind(char const*, unsigned int, unsigned int) const
00141bbc 00000030 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::rfind(char const*, unsigned int) const
00141bec 0000004c W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::compare(char const*) const
00141c38 000000b0 W void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct<char*>(char*, char*, std::forward_iterator_tag)
00141ce8 00000030 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
00141ce8 00000030 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
00141d18 000000b0 W void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct<char const*>(char const*, char const*, std::forward_iterator_tag)
00141dc8 00000078 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::substr(unsigned int, unsigned int) const
00141e40 00000070 T __gnu_cxx::__throw_insufficient_space(char const*, char const*)
00141eb0 00000078 T __gnu_cxx::__concat_size_t(char*, unsigned int, unsigned int)
00141f28 00000100 T __gnu_cxx::__snprintf_lite(char*, unsigned int, char const*, std::__va_list)
00142028 00000014 T std::get_new_handler()
0014203c 00000034 T __cxxabiv1::__terminate(void (*)())
00142070 00000018 T std::terminate()
00142088 0000000c T __cxxabiv1::__unexpected(void (*)())
00142094 00000018 T std::unexpected()
001420ac 00000014 T std::get_terminate()
001420c0 00000014 T std::get_unexpected()
001420d4 0000000c T std::bad_alloc::what() const
001420e0 00000020 T std::bad_alloc::~bad_alloc()
001420e0 00000020 T std::bad_alloc::~bad_alloc()
00142100 0000002c T std::bad_alloc::~bad_alloc()
0014212c T __cxa_end_cleanup
0014213c 00000138 T __cxa_type_match
00142274 000000b4 T __cxa_begin_cleanup
00142328 000000b4 T __gnu_end_cleanup
001423dc 00000070 t __cxxabiv1::__is_gxx_exception_class(char*)
0014244c 0000002c T __cxa_call_terminate
00142478 0000013c T __cxa_call_unexpected
001425b4 00000008 T std::logic_error::what() const
001425bc 00000064 T std::logic_error::~logic_error()
001425bc 00000064 T std::logic_error::~logic_error()
00142620 0000001c T std::logic_error::~logic_error()
0014263c 00000020 T std::invalid_argument::~invalid_argument()
0014263c 00000020 T std::invalid_argument::~invalid_argument()
0014265c 00000028 T std::invalid_argument::~invalid_argument()
00142684 00000020 T std::length_error::~length_error()
00142684 00000020 T std::length_error::~length_error()
001426a4 00000028 T std::length_error::~length_error()
001426cc 00000020 T std::out_of_range::~out_of_range()
001426cc 00000020 T std::out_of_range::~out_of_range()
001426ec 00000028 T std::out_of_range::~out_of_range()
00142718 00000174 T ceil
0014288c 000000b8 T ceilf
00142948 00000174 T floor
00142abc 00000088 T roundf
00142b48 00000020 T log2
00142b68 0000015c T log
00142cc8 000002c4 T __ieee754_log
00142f8c 00000008 T matherr
00142f98 00000010 T nan
00142fa8 0000002c t __aeabi_f2lz
00142fa8 0000002c T __fixsfdi
00142fd8 00000050 t __aeabi_f2ulz
00142fd8 00000050 T __fixunssfdi
00143028 00000158 t __udivmoddi4
00143180 00000018 t selfrel_offset31
00143198 0000008c t search_EIT_table
00143224 00000040 t __gnu_unwind_get_pr_addr
00143264 00000118 t get_eit_entry
0014337c 00000088 t restore_non_core_regs
00143404 00000014 t _Unwind_decode_typeinfo_ptr.isra.0
00143418 00000004 t _Unwind_DebugHook
0014341c 00000068 t unwind_phase2
00143484 00000134 t unwind_phase2_forced
001435b8 000000a8 t __gnu_Unwind_RaiseException
00143660 00000024 t __gnu_Unwind_ForcedUnwind
00143684 00000074 t __gnu_Unwind_Resume
001436f8 00000020 t __gnu_Unwind_Resume_or_Rethrow
00143718 00000004 t _Unwind_Complete
0014371c 00000018 t _Unwind_DeleteException
00143734 00000068 t _Unwind_VRS_Get
0014379c 0000002c t _Unwind_GetGR
001437c8 00000068 t _Unwind_VRS_Set
00143830 0000002c t _Unwind_SetGR
0014385c 000000c0 t __gnu_Unwind_Backtrace
0014391c 0000044c t __gnu_unwind_pr_common
00143d68 00000008 T __aeabi_unwind_cpp_pr0
00143d70 00000008 W __aeabi_unwind_cpp_pr1
00143d78 00000008 W __aeabi_unwind_cpp_pr2
00143d80 00000418 t _Unwind_VRS_Pop
00144198 00000060 t next_unwind_byte
001441f8 0000002c t _Unwind_GetGR.constprop.0
00144224 00000004 t unwind_UCB_from_context
00144228 000003c8 t __gnu_unwind_execute
001445f0 00000048 t __gnu_unwind_frame
00144638 00000010 t _Unwind_GetRegionStart
00144648 0000001c t _Unwind_GetLanguageSpecificData
00144664 00000008 t _Unwind_GetDataRelBase
0014466c 00000008 t _Unwind_GetTextRelBase
00144674 00000010 T ctime
00144684 00000014 T __cxa_atexit
00144698 0000000c T __errno
001446a4 00000034 T exit
001446d8 00000040 T __libc_fini_array
00144718 0000007c T __libc_init_array
00144794 0000001c T isspace
001447b0 0000001c T isxdigit
001447cc 0000001c T localtime
001447e8 00000364 T localtime_r
00144b4c 00000024 T __locale_mb_cur_max
00144b70 00000008 T __locale_ctype_ptr_l
00144b78 00000024 T __locale_ctype_ptr
00144b9c 00000018 T malloc
00144bb4 00000018 T free
00144bcc 000007a8 T _malloc_r
00145374 000002fc T __utf8_mbtowc
00145670 00000100 T memchr
00145770 000000fc T memcmp
0014586c 0000010c T memcpy
00145978 0000013c T memmove
00145ab4 00000110 T memset
00145bc4 0000000c T __malloc_lock
00145bd0 0000000c T __malloc_unlock
00145bdc 00000064 T sprintf
00145c40 00000008 T __seofread
00145c48 000000f0 T strcpy
00145d38 00000158 t iso_year_adjust
00145e90 00001024 t __strftime
00146eb4 00000050 T strftime
00146f04 0000005c T strlen
00146f60 000000f8 T strncmp
00147058 000000d8 T strncpy
00147130 00000054 t sulp
00147188 00001464 T _strtod_l
001485f0 000000b8 T strtof
001486a8 000001bc t _strtol_l.isra.0
00148864 00000050 T _strtol_r
001488b8 00000260 t _strtoull_l.isra.0
00148b18 00000050 T _strtoull_r
00148b68 000001d0 t _strtoul_l.isra.0
00148d38 00000050 T _strtoul_r
00148d88 00000054 T strtoul
00148ddc 000074a0 t get_arg
00150280 00003e2c T _svfprintf_r
001540ac 00000038 T time
001540e4 00000218 T __tzcalc_limits
001542fc 0000000c T __tz_lock
00154308 0000000c T __tz_unlock
00154314 00000010 T _tzset_unlocked
00154324 0000049c T _tzset_unlocked_r
001547c0 000000a0 T _vsnprintf_r
00154860 00000038 T vsnprintf
00154898 000000a0 T _wcrtomb_r
00154938 00000020 T _wcsrtombs_r
00154958 000000e8 T __utf8_wctomb
00154a40 0000000c T abs
00154a4c 0000001c T asctime
00154a68 00000078 T asctime_r
00154ae0 000000f4 T __register_exitproc
00154bd4 00000170 T __call_exitprocs
00154d44 000001bc t quorem
00154f00 00001224 T _dtoa_r
00156124 000000f8 T _malloc_trim_r
0015621c 000002e4 T _free_r
00156500 00000104 t rshift
00156604 000007f8 T __gethex
00156dfc 00000060 T __match
00156e5c 00000254 T __hexnan
001570b0 000000c8 T _findenv_r
00157178 00000018 T _getenv_r
00157190 0000000c T __gettzinfo
0015719c 00000280 T gmtime_r
0015741c 0000000c T labs
00157428 00000008 T __localeconv_l
00157430 00000024 T _localeconv_r
00157454 00000088 T _Balloc
001574dc 0000001c T _Bfree
001574f8 000000d0 T __multadd
001575c8 000000e0 T __s2b
001576a8 00000058 T __hi0bits
00157700 0000009c T __lo0bits
0015779c 00000020 T __i2b
001577bc 000001d4 T __multiply
00157990 00000100 T __pow5mult
00157a90 000000e8 T __lshift
00157b78 0000005c T __mcmp
00157bd4 00000168 T __mdiff
00157d3c 00000078 T __ulp
00157db4 000000d0 T __b2d
00157e84 00000104 T __d2b
00157f88 00000084 T __ratio
0015800c 00000088 T __copybits
00158094 00000078 T __any_on
0015810c 0000000c T nanf
00158118 0000009c T frexp
001581b4 00000064 T siprintf
00158218 00000074 T siscanf
0015828c 000000c8 T sniprintf
00158354 000074a0 t get_arg
0015f7f4 00000188 T __ssprint_r
0015f97c 0000295c T _svfiprintf_r
001622d8 000000dc T _sungetc_r
001623b4 0000006c T __ssrefill_r
00162420 000000c8 T _sfread_r
001624e8 00001d84 T __ssvfiscanf_r
0016426c 000000a4 T __submore
00164310 00000170 T _wcsnrtombs_l
00164480 00000064 T _wcsnrtombs_r
001644e4 00000090 T _calloc_r
00164574 0000000c T __env_lock
00164580 0000000c T __env_unlock
0016458c 00000074 T iswspace
00164600 000001e0 t __jp2uc
001647e0 000000c4 T _jp2uc
001648a4 000000b4 T _mbrtowc_r
00164958 000004d0 T _realloc_r
00164e28 000000cc T __sccl
00164ef4 00000274 t _strtoll_l.isra.0
00165168 00000050 T _strtoll_r
001651b8 0000002c T _gettimeofday_r
001651e4 00000070 T _sbrk_r
00165254 00000024 T _exit
00165278 00000018 T __libc_lock_acquire
00165290 00000018 T __libc_lock_release
001652a8 00000018 T __libc_lock_acquire_recursive
001652c0 00000018 T __libc_lock_release_recursive
001652d8 00000028 T __getreent
00165300 T _fini
00165350 000001e8 r CTRPluginFramework::eliminationMode(CTRPluginFramework::MenuEntry*)::buffer1
00165538 0000000c r CTRPluginFramework::eliminationMode(CTRPluginFramework::MenuEntry*)::buffer2
00165544 00000014 r CTRPluginFramework::eliminationMode(CTRPluginFramework::MenuEntry*)::buffer3
00165558 0000001c r CTRPluginFramework::eliminationMode(CTRPluginFramework::MenuEntry*)::buffer4
00165580 00000030 r ._184
001655b8 00000058 r CTRPluginFramework::g_OSDPattern
00165610 00000a00 r font
00166010 00000038 r CTRPluginFramework::stable
00166048 00000038 r CTRPluginFramework::ktable
00166080 0000001c R vtable for CTRPluginFramework::MenuEntryImpl
0016609c 00000014 R vtable for CTRPluginFramework::MenuFolderImpl
001660b0 00000030 r ._184
00166100 00000038 R vtable for CTRPluginFramework::Search32
00166138 00000038 R vtable for CTRPluginFramework::Search
00166170 00000005 r CSWTCH.47
00166178 00000014 R vtable for CTRPluginFramework::ARCode
0016618c 0000002d r ._89
001661bc 00000080 r CTRPluginFramework::KeysToString(unsigned long)::keysText
0016623c 0000000c r CTRPluginFramework::CommentCodeLine(CTRPluginFramework::ARCode const&)::condstr
00166248 00000008 r CTRPluginFramework::CommentCodeLine(CTRPluginFramework::ARCode const&)::offsets
00166250 00000008 r CTRPluginFramework::CommentCodeLine(CTRPluginFramework::ARCode const&)::data
00166258 00000008 r CTRPluginFramework::CommentCodeLine(CTRPluginFramework::ARCode const&)::storage
00166260 0000001c R vtable for CTRPluginFramework::MenuEntryActionReplay
0016627c 00000004 R About15_array_length
00166280 00000384 r About15_array
00166604 00000004 R AddFavorite25_array_length
00166608 000009c4 r AddFavorite25_array
00166fcc 00000004 R AddFavoriteFilled25_array_length
00166fd0 000009c4 r AddFavoriteFilled25_array
00167994 00000004 R CapsLockOn15_array_length
00167998 00000384 r CapsLockOn15_array
00167d1c 00000004 R CapsLockOnFilled15_array_length
00167d20 00000384 r CapsLockOnFilled15_array
001680a4 00000004 R CheckedCheckbox_array_length
001680a8 00000384 r CheckedCheckbox_array
0016842c 00000004 R ClearSymbol15_array_length
00168430 00000384 r ClearSymbol15_array
001687b4 00000004 R ClearSymbolFilled15_array_length
001687b8 00000384 r ClearSymbolFilled15_array
00168b3c 00000004 R Clipboard25_array_length
00168b40 000009c4 r Clipboard25_array
00169504 00000004 R ClipboardFilled25_array_length
00169508 000009c4 r ClipboardFilled25_array
00169ecc 00000004 R CloseWindow20_array_length
00169ed0 00000640 r CloseWindow20_array
0016a510 00000004 R CloseWindowFilled20_array_length
0016a514 00000640 r CloseWindowFilled20_array
0016ab54 00000004 R Controller15_array_length
0016ab58 00000384 r Controller15_array
0016aedc 00000004 R Cut25_array_length
0016aee0 000009c4 r Cut25_array
0016b8a4 00000004 R CutFilled25_array_length
0016b8a8 000009c4 r CutFilled25_array
0016c26c 00000004 R Duplicate25_array_length
0016c270 000009c4 r Duplicate25_array
0016cc34 00000004 R DuplicateFilled25_array_length
0016cc38 000009c4 r DuplicateFilled25_array
0016d5fc 00000004 R Edit25_array_length
0016d600 000009c4 r Edit25_array
0016dfc4 00000004 R EditFilled25_array_length
0016dfc8 000009c4 r EditFilled25_array
0016e98c 00000004 R EnterKey15_array_length
0016e990 00000384 r EnterKey15_array
0016ed14 00000004 R EnterKeyFilled15_array_length
0016ed18 00000384 r EnterKeyFilled15_array
0016f09c 00000004 R File15_array_length
0016f0a0 00000384 r File15_array
0016f424 00000004 R FolderFilled_array_length
0016f428 00000384 r FolderFilled_array
0016f7ac 00000004 R GameController15_array_length
0016f7b0 00000384 r GameController15_array
0016fb34 00000004 R GameController25_array_length
0016fb38 000009c4 r GameController25_array
001704fc 00000004 R GameControllerFilled25_array_length
00170500 000009c4 r GameControllerFilled25_array
00170ec4 00000004 R Grid15_array_length
00170ec8 00000384 r Grid15_array
0017124c 00000004 R HandCursor15_array_length
00171250 00000384 r HandCursor15_array
001715d4 00000004 R Info25_array_length
001715d8 000009c4 r Info25_array
00171f9c 00000004 R InfoFilled25_array_length
00171fa0 000009c4 r InfoFilled25_array
00172964 00000004 R Keyboard25_array_length
00172968 000009c4 r Keyboard25_array
0017332c 00000004 R KeyboardFilled25_array_length
00173330 000009c4 r KeyboardFilled25_array
00173cf4 00000004 R Maintenance15_array_length
00173cf8 00000384 r Maintenance15_array
0017407c 00000004 R More15_array_length
00174080 00000384 r More15_array
00174404 00000004 R Plus25_array_length
00174408 000009c4 r Plus25_array
00174dcc 00000004 R PlusFilled25_array_length
00174dd0 000009c4 r PlusFilled25_array
00175794 00000004 R RAM15_array_length
00175798 00000384 r RAM15_array
00175b1c 00000004 R Restart15_array_length
00175b20 00000384 r Restart15_array
00175ea4 00000004 R Rocket40_array_length
00175ea8 00001900 r Rocket40_array
001777a8 00000004 R Save25_array_length
001777ac 000009c4 r Save25_array
00178170 00000004 R Search15_array_length
00178174 00000384 r Search15_array
001784f8 00000004 R Settings15_array_length
001784fc 00000384 r Settings15_array
00178880 00000004 R Shutdown15_array_length
00178884 00000384 r Shutdown15_array
00178c08 00000004 R Star15_array_length
00178c0c 00000384 r Star15_array
00178f90 00000004 R Trash25_array_length
00178f94 000009c4 r Trash25_array
00179958 00000004 R TrashFilled25_array_length
0017995c 000009c4 r TrashFilled25_array
0017a320 00000004 R UnCheckedCheckbox_array_length
0017a324 00000384 r UnCheckedCheckbox_array
0017a6a8 00000004 R UserManualFilled15_array_length
0017a6ac 00000384 r UserManualFilled15_array
0017aa30 0000001c R vtable for CTRPluginFramework::CheckBox
0017aa4c 0000001c R vtable for CTRPluginFramework::ComboBox
0017aa68 0000001c R vtable for CTRPluginFramework::FloatingButton
0017aa84 0000001c R vtable for CTRPluginFramework::NumericTextBox
0017aaa0 0000001c R vtable for CTRPluginFramework::TextBox
0017aabc 0000001c R vtable for CTRPluginFramework::TouchKey
0017aad8 00000020 r CTRPluginFramework::HexEditor::_RenderTop()::bytePos
0017aaf8 00000280 r CTRPluginFramework::_cursorPositions
0017ad78 00000008 r CTRPluginFramework::HexEditor::_PromptForAddress(int)::msg
0017ad80 00000048 r CTRPluginFramework::g_ctrpf
0017adc8 00000030 r CTRPluginFramework::g_byme
0017c84c 0000001c V vtable for CTRPluginFramework::IconButton<CTRPluginFramework::Window, void>
0017c868 0000001c V vtable for CTRPluginFramework::IconButton<CTRPluginFramework::CheckBox, void>
0017c9d0 00000014 V vtable for CTRPluginFramework::MenuItem
0017c9e4 0000001c V vtable for CTRPluginFramework::ToggleButton<CTRPluginFramework::PluginMenuActionReplay, void>
0017ca00 0000001c V vtable for CTRPluginFramework::IconButton<CTRPluginFramework::PluginMenuActionReplay, void>
0017ca70 0000001c V vtable for CTRPluginFramework::CheckedButton<CTRPluginFramework::PluginMenuHome, void>
0017ca8c 0000001c V vtable for CTRPluginFramework::Button<CTRPluginFramework::PluginMenuHome, void>
0017caa8 0000001c V vtable for CTRPluginFramework::Button<CTRPluginFramework::PluginMenuSearch, void>
0017cac4 0000001c V vtable for CTRPluginFramework::CheckedButton<CTRPluginFramework::PluginMenuSearch, void>
0017daec 0000001c V vtable for CTRPluginFramework::IconButton<CTRPluginFramework::GuideReader, void>
0017db10 0000001c V vtable for CTRPluginFramework::IconButton<CTRPluginFramework::HexEditor, void>
0017dc90 0000001c V vtable for CTRPluginFramework::MenuEntryTools
0017dcac 0000001c V vtable for CTRPluginFramework::IconButton<CTRPluginFramework::PluginMenuHome, void>
0017dcc8 0000001c V vtable for CTRPluginFramework::ToggleButton<CTRPluginFramework::PluginMenuHome, void>
0017dd14 0000000c R typeinfo for __gnu_cxx::recursive_init_error
0017dd20 00000023 R typeinfo name for __gnu_cxx::recursive_init_error
0017dd44 00000014 R vtable for __gnu_cxx::recursive_init_error
0017dd7c 00000008 R typeinfo for __cxxabiv1::__forced_unwind
0017dd84 00000008 R typeinfo for __cxxabiv1::__foreign_exception
0017dd8c 0000000c R typeinfo for std::bad_exception
0017dd98 00000008 R typeinfo for std::exception
0017dda0 00000020 R typeinfo name for __cxxabiv1::__forced_unwind
0017ddc0 00000024 R typeinfo name for __cxxabiv1::__foreign_exception
0017dde4 00000012 R typeinfo name for std::bad_exception
0017ddf8 0000000d R typeinfo name for std::exception
0017de08 00000014 R vtable for std::bad_exception
0017de1c 0000000c R typeinfo for __cxxabiv1::__si_class_type_info
0017de28 00000025 R typeinfo name for __cxxabiv1::__si_class_type_info
0017de50 0000002c R vtable for __cxxabiv1::__si_class_type_info
0017de7c 00000008 R typeinfo for std::type_info
0017de84 0000000d R typeinfo name for std::type_info
0017de94 0000000c R typeinfo for __cxxabiv1::__class_type_info
0017dea0 00000022 R typeinfo name for __cxxabiv1::__class_type_info
0017dec4 0000002c R vtable for __cxxabiv1::__class_type_info
0017e0d8 0000000c R typeinfo for std::bad_alloc
0017e0e4 0000000d R typeinfo name for std::bad_alloc
0017e0f4 00000014 R vtable for std::bad_alloc
0017e108 0000000c R typeinfo for std::logic_error
0017e114 0000000c R typeinfo for std::length_error
0017e120 0000000c R typeinfo for std::out_of_range
0017e12c 0000000c R typeinfo for std::invalid_argument
0017e138 00000010 R typeinfo name for std::logic_error
0017e148 00000011 R typeinfo name for std::length_error
0017e15c 00000011 R typeinfo name for std::out_of_range
0017e170 00000015 R typeinfo name for std::invalid_argument
0017e188 00000014 R vtable for std::logic_error
0017e19c 00000014 R vtable for std::length_error
0017e1b0 00000014 R vtable for std::out_of_range
0017e1c4 00000014 R vtable for std::invalid_argument
0017e1dc 00000004 R _global_impure_ptr
0017e224 00000060 R __month_lengths
0017e310 00000014 r fpi.7439
0017e324 00000014 r fpinan.7475
0017e338 00000028 r tinytens
0017e3a4 00000010 r blanks.8562
0017e3b4 00000010 r zeroes.8563
0017e3c4 000000fc R _C_time_locale
0017e68c 00000015 r day_name.6011
0017e6a4 00000024 r mon_name.6012
0017e6c8 00000101 R _ctype_
0017e7dc 00000100 R __hexdig
0017e8e0 00000028 R __mprec_bigtens
0017e908 000000c8 R __mprec_tens
0017e9d0 0000000c r p05.7353
0017e9dc 0000006c R __action_table
0017ea48 00000100 R __chclass
0017eb48 0000006c R __state_table
0017ebb4 00000010 r blanks.8541
0017ebc4 00000010 r zeroes.8542
0017ebd4 00000022 r basefix.8096
0017ec0c 000000bc r a1
0017ecc8 000000bc r a2
0017ed84 0000005b r a3
0017ede0 00000070 r a6
0017ee50 000000a2 r a7
0017eef4 00000040 r a8
0017ef34 0000172a r b02cf
00180660 00001a7c r d02f4
00182348 R __exidx_start
00182568 R __exidx_end
00182568 00000004 d CTRPluginFramework::stalking(CTRPluginFramework::MenuEntry*)::player
0018256c 00000001 D CTRPluginFramework::g_keepRunning
00182570 00000004 D CTRPluginFramework::Preferences::MenuHotkeys
00182574 00000001 D CTRPluginFramework::Preferences::_bmpCanBeLoaded
00182578 00000001 D CTRPluginFramework::PrivColor::_format
0018257c 00000004 D CTRPluginFramework::PrivColor::FromFramebuffer
00182580 00000004 D CTRPluginFramework::PrivColor::ToFramebuffer
00182584 00000001 d CTRPluginFramework::EventManager::PopEvent(CTRPluginFramework::Event&, bool)::refresh
00182585 00000001 D CTRPluginFramework::SystemImpl::_language
00182588 00000004 D g_KProcessPIDOffset
0018258c 00000004 D About15
00182590 00000004 D AddFavorite25
00182594 00000004 D AddFavoriteFilled25
00182598 00000004 D CapsLockOn15
0018259c 00000004 D CapsLockOnFilled15
001825a0 00000004 D CheckedCheckbox
001825a4 00000004 D ClearSymbol15
001825a8 00000004 D ClearSymbolFilled15
001825ac 00000004 D Clipboard25
001825b0 00000004 D ClipboardFilled25
001825b4 00000004 D CloseWindow20
001825b8 00000004 D CloseWindowFilled20
001825bc 00000004 D Controller15
001825c0 00000004 D Cut25
001825c4 00000004 D CutFilled25
001825c8 00000004 D Duplicate25
001825cc 00000004 D DuplicateFilled25
001825d0 00000004 D Edit25
001825d4 00000004 D EditFilled25
001825d8 00000004 D EnterKey15
001825dc 00000004 D EnterKeyFilled15
001825e0 00000004 D File15
001825e4 00000004 D FolderFilled
001825e8 00000004 D GameController15
001825ec 00000004 D GameController25
001825f0 00000004 D GameControllerFilled25
001825f4 00000004 D Grid15
001825f8 00000004 D HandCursor15
001825fc 00000004 D Info25
00182600 00000004 D InfoFilled25
00182604 00000004 D Keyboard25
00182608 00000004 D KeyboardFilled25
0018260c 00000004 D Maintenance15
00182610 00000004 D More15
00182614 00000004 D Plus25
00182618 00000004 D PlusFilled25
0018261c 00000004 D RAM15
00182620 00000004 D Restart15
00182624 00000004 D Rocket40
00182628 00000004 D Save25
0018262c 00000004 D Search15
00182630 00000004 D Settings15
00182634 00000004 D Shutdown15
00182638 00000004 D Star15
0018263c 00000004 D Trash25
00182640 00000004 D TrashFilled25
00182644 00000004 D UnCheckedCheckbox
00182648 00000004 D UserManualFilled15
0018264c 00000001 d CTRPluginFramework::PluginMenuHome::_RenderBottom()::framework
00182650 D __dso_handle
00182654 00000004 D __cxxabiv1::__unexpected_handler
00182658 00000004 D __cxxabiv1::__terminate_handler
0018265c 00000001 D __fdlib_version
00182660 00000004 D _impure_ptr
00182668 00000460 d impure_data
00182ac8 0000016c D __global_locale
00182c34 00000408 D __malloc_av_
0018303c 00000004 D __malloc_sbrk_base
00183040 00000004 D __malloc_trim_threshold
00183044 0000000c d __malloc_lock_object
00183050 00000004 d __tz_lock_object
00183054 00000008 D _tzname
0018305c 0000000c D __atexit_lock
00183068 00000040 d tzinfo
001830a8 00000004 D environ
001830ac 0000000c d __env_lock_object
001830b8 a _DYNAMIC
00183190 a _GLOBAL_OFFSET_TABLE_
001831a8 t __frame_dummy_init_array_entry
001831a8 T __init_array_start
001831a8 B __preinit_array_end
001831a8 B __preinit_array_start
001831a8 D __tdata_lma
001831a8 D __tdata_lma_end
001831a8 D __TMC_END__
001831f4 t __do_global_dtors_aux_fini_array_entry
001831f4 T __fini_array_start
001831f4 T __init_array_end
001831f8 T __fini_array_end
001831f8 r __rel_dyn_start
001997b0 B __c_bss_start
001997b0 r __rel_dyn_end
001997b0 00000004 B CTRPluginFramework::offset
001997b4 00000004 B CTRPluginFramework::data
001997b8 00000004 b CTRPluginFramework::saveSlotTeleporter(CTRPluginFramework::MenuEntry*)::x
001997bc 00000004 b CTRPluginFramework::saveSlotTeleporter(CTRPluginFramework::MenuEntry*)::y
001997c0 00000004 b CTRPluginFramework::saveSlotTeleporter(CTRPluginFramework::MenuEntry*)::z
001997c4 00000001 b CTRPluginFramework::driveAnywhere(CTRPluginFramework::MenuEntry*)::enabled
001997c8 00000004 b CTRPluginFramework::stalking(CTRPluginFramework::MenuEntry*)::active
001997cc 00000004 b CTRPluginFramework::stalking(CTRPluginFramework::MenuEntry*)::pointer
001997d0 00000001 b CTRPluginFramework::stalking(CTRPluginFramework::MenuEntry*)::held
001997d1 00000001 b CTRPluginFramework::SetItem(CTRPluginFramework::MenuEntry*)::shown_dialogue
001997d2 00000001 b CTRPluginFramework::SetItem(CTRPluginFramework::MenuEntry*)::item
001997d3 00000001 b CTRPluginFramework::SetItem(CTRPluginFramework::MenuEntry*)::execute
001997d4 00000001 b CTRPluginFramework::SetVR(CTRPluginFramework::MenuEntry*)::shown_dialogue
001997d8 00000004 b CTRPluginFramework::SetVR(CTRPluginFramework::MenuEntry*)::vr
001997dc 00000001 b CTRPluginFramework::SetVR(CTRPluginFramework::MenuEntry*)::execute
001997e0 00000004 B CTRPluginFramework::random
001997e4 00000001 b CTRPluginFramework::SetFlag(CTRPluginFramework::MenuEntry*)::error
001997e6 00000002 b CTRPluginFramework::SetFlag(CTRPluginFramework::MenuEntry*)::flag
001997e8 00000001 b CTRPluginFramework::SetFlag(CTRPluginFramework::MenuEntry*)::shown_dialogue
001997e9 00000001 b CTRPluginFramework::SetCoordinates(CTRPluginFramework::MenuEntry*)::shown_dialogue
001997ec 00000004 b CTRPluginFramework::SetCoordinates(CTRPluginFramework::MenuEntry*)::coordinates
001997f0 00000004 B CTRPluginFramework::g_itemPointer
001997f4 00000004 B CTRPluginFramework::g_oldRacePointer5D0
001997f8 00000004 B CTRPluginFramework::g_oldRacePointer5CC
001997fc 00000004 B CTRPluginFramework::g_FNsPointer
00199800 00000004 B CTRPluginFramework::g_raceCondition
00199804 00000004 B CTRPluginFramework::g_racePointer
00199808 00000004 B CTRPluginFramework::dataZ
0019980c 00000004 B CTRPluginFramework::dataY
00199810 00000004 B CTRPluginFramework::dataX
00199818 00000050 B CTRPluginFramework::QuickMenu::_instance
00199868 00000008 B CTRPluginFramework::_sdmcArchive
00199870 00000004 B CTRPluginFramework::g_continueGameEvent
00199874 00000004 B __ctru_heap_size
00199878 00000004 B g_gspEventThreadPriority
0019987c 00000004 B CTRPluginFramework::g_keepEvent
00199880 00000004 B g_mainThread
00199884 00000004 b onLoadCroLock
00199888 00000038 b g_loadCroHook
001998c0 00000004 B croReturn
001998c4 00000004 B CTRPluginFramework::g_keepThreadHandle
001998c8 00000004 B CTRPluginFramework::g_resumeEvent
001998d0 00004000 b CTRPluginFramework::keepThreadStack
0019d8d0 00010000 b CTRPluginFramework::threadStack
001ad8d0 00000004 B CTRPluginFramework::Color::Black
001ad8d4 00000004 B CTRPluginFramework::Color::Blank
001ad8d8 00000004 B CTRPluginFramework::Color::Blue
001ad8dc 00000004 B CTRPluginFramework::Color::BlackGrey
001ad8e0 00000004 B CTRPluginFramework::Color::Brown
001ad8e4 00000004 B CTRPluginFramework::Color::Cyan
001ad8e8 00000004 B CTRPluginFramework::Color::DarkGrey
001ad8ec 00000004 B CTRPluginFramework::Color::DeepSkyBlue
001ad8f0 00000004 B CTRPluginFramework::Color::DimGrey
001ad8f4 00000004 B CTRPluginFramework::Color::DodgerBlue
001ad8f8 00000004 B CTRPluginFramework::Color::Gainsboro
001ad8fc 00000004 B CTRPluginFramework::Color::ForestGreen
001ad900 00000004 B CTRPluginFramework::Color::Green
001ad904 00000004 B CTRPluginFramework::Color::Grey
001ad908 00000004 B CTRPluginFramework::Color::LimeGreen
001ad90c 00000004 B CTRPluginFramework::Color::Magenta
001ad910 00000004 B CTRPluginFramework::Color::Orange
001ad914 00000004 B CTRPluginFramework::Color::Red
001ad918 00000004 B CTRPluginFramework::Color::Silver
001ad91c 00000004 B CTRPluginFramework::Color::SkyBlue
001ad920 00000004 B CTRPluginFramework::Color::Turquoise
001ad924 00000004 B CTRPluginFramework::Color::Yellow
001ad928 00000004 b CTRPluginFramework::ConvertToFloat(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, bool)::temp
001ad930 00000008 b CTRPluginFramework::ConvertToDouble(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, bool)::temp
001ad938 00000008 b CTRPluginFramework::ConvertToU64(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, bool)::temp
001ad940 00000002 b CTRPluginFramework::ConvertToU16(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, bool)::temp
001ad944 00000004 b CTRPluginFramework::ConvertToU32(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, bool)::temp
001ad948 00000001 b CTRPluginFramework::ConvertToU8(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, bool)::temp
001ad94c 00000180 b CTRPluginFramework::g_keyName
001adacc 00000004 b CTRPluginFramework::g_runningInstance
001adad0 00000004 B CTRPluginFramework::Controller::_keysDown
001adad4 00000004 B CTRPluginFramework::Controller::_keysHeld
001adad8 00000004 B CTRPluginFramework::Controller::_keysReleased
001adadc 00000018 b CTRPluginFramework::_workingDirectory
001adaf4 00002002 b CTRPluginFramework::_Path::SdmcUtf16Path(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)::utf16Path
001afaf8 00000004 B CTRPluginFramework::System::OnAbort
001afb00 00000008 B CTRPluginFramework::Time::Zero
001afb08 000009c4 b CTRPluginFramework::g_rng
001b04d0 00000001 B CTRPluginFramework::Preferences::AutoLoadCheats
001b04d1 00000001 B CTRPluginFramework::Preferences::AutoLoadFavorites
001b04d2 00000001 B CTRPluginFramework::Preferences::AutoSaveCheats
001b04d3 00000001 B CTRPluginFramework::Preferences::AutoSaveFavorites
001b04d4 00000001 B CTRPluginFramework::Preferences::DrawTouchCursor
001b04d5 00000001 B CTRPluginFramework::Preferences::ShowBottomFps
001b04d6 00000001 B CTRPluginFramework::Preferences::ShowTopFps
001b04d7 00000001 B CTRPluginFramework::Preferences::UseFloatingBtn
001b04d8 00000001 B CTRPluginFramework::Preferences::_cheatsAlreadyLoaded
001b04d9 00000001 B CTRPluginFramework::Preferences::_favoritesAlreadyLoaded
001b04da 00000001 B CTRPluginFramework::Preferences::EcoMemoryMode
001b04dc 00000004 B CTRPluginFramework::Preferences::topBackgroundImage
001b04e0 00000004 B CTRPluginFramework::Preferences::bottomBackgroundImage
001b04e8 00000078 B CTRPluginFramework::Preferences::Settings
001b0560 00000001 B CTRPluginFramework::Preferences::DisplayFilesLoading
001b0561 00000001 B CTRPluginFramework::Preferences::DrawTouchCoord
001b0562 00000001 B CTRPluginFramework::Preferences::InjectBOnMenuClose
001b0564 00000004 b CTRPluginFramework::defaultSysFont
001b0568 00000004 B CTRPluginFramework::g_fontAllocated
001b056c 00000004 b CTRPluginFramework::tileData
001b0570 00000004 b CTRPluginFramework::glyph
001b0574 00000004 B CTRPluginFramework::g_glyphAllocated
001b0578 0000000c B CTRPluginFramework::OSDImpl::RecLock
001b0584 0000000c B CTRPluginFramework::OSDImpl::Notifications[abi:cxx11]
001b0590 00000018 B CTRPluginFramework::OSDImpl::TopScreen
001b05a8 00000018 B CTRPluginFramework::OSDImpl::BottomScreen
001b05c0 00000038 B CTRPluginFramework::OSDImpl::OSDHook
001b05f8 00000004 B CTRPluginFramework::OSDImpl::HookReturn
001b05fc 00000008 B CTRPluginFramework::OSDImpl::OnNewFrameEvent
001b0604 00000024 B CTRPluginFramework::OSDImpl::FloatingBtn
001b0628 0000000c B CTRPluginFramework::OSDImpl::Callbacks
001b0634 00000004 b CTRPluginFramework::g_second
001b0638 00000010 b CTRPluginFramework::g_fpsClock
001b0648 00000038 B CTRPluginFramework::OSDHook2
001b0680 00000004 B CTRPluginFramework::OSDImpl::FramesToPlay
001b0684 00000001 B CTRPluginFramework::OSDImpl::DrawSaveIcon
001b0685 00000001 B CTRPluginFramework::OSDImpl::MessColors
001b0688 00000001 B CTRPluginFramework::PrivColor::_useClamp
001b068c 00000010 B CTRPluginFramework::PrivColor::_clampArea
001b069c 00000001 B CTRPluginFramework::Renderer::_target
001b06a0 00000004 B CTRPluginFramework::Renderer::_screen
001b06a4 00000004 b guard variable for CTRPluginFramework::Renderer::EndFrame(bool)::background
001b06a8 00000004 b CTRPluginFramework::Renderer::EndFrame(bool)::background
001b06ac 00000004 B CTRPluginFramework::RendererPriv::g_customColor
001b06b0 00000028 B CTRPluginFramework::Window::BottomWindow
001b06d8 00000028 B CTRPluginFramework::Window::TopWindow
001b0700 00000010 b CTRPluginFramework::KeyboardImpl::_RenderTop()::background2
001b0710 00000010 b CTRPluginFramework::KeyboardImpl::_RenderTop()::background1
001b0720 00000004 b guard variable for CTRPluginFramework::KeyboardImpl::_RenderTop()::background1
001b0724 00000004 b guard variable for CTRPluginFramework::KeyboardImpl::_RenderTop()::background2
001b0728 00000004 b guard variable for CTRPluginFramework::KeyboardImpl::_RenderBottom()::background
001b072c 00000010 b CTRPluginFramework::KeyboardImpl::_RenderBottom()::background
001b073c 00000004 b guard variable for CTRPluginFramework::KeyboardImpl::_RenderBottom()::background2
001b0740 00000010 b CTRPluginFramework::KeyboardImpl::_RenderBottom()::background2
001b0750 00000004 b guard variable for CTRPluginFramework::KeyboardImpl::_RenderBottom()::clampArea
001b0754 00000010 b CTRPluginFramework::KeyboardImpl::_RenderBottom()::clampArea
001b0764 00000004 b guard variable for CTRPluginFramework::KeyboardImpl::_CheckKeys()::backspacetimer
001b0768 00000008 b CTRPluginFramework::KeyboardImpl::_CheckKeys()::backspacetimer
001b0770 00000004 b guard variable for CTRPluginFramework::KeyboardImpl::_CheckKeys()::FastModeWaitTime
001b0778 00000008 b CTRPluginFramework::KeyboardImpl::_CheckKeys()::FastModeWaitTime
001b0780 00000004 b guard variable for CTRPluginFramework::KeyboardImpl::_CheckKeys()::FastClearingFrame
001b0788 00000008 b CTRPluginFramework::KeyboardImpl::_CheckKeys()::FastClearingFrame
001b0790 00000004 b CTRPluginFramework::KeyboardImpl::_CheckKeys()::backspaceFastMode
001b0794 0000000c B CTRPluginFramework::KeyboardImpl::_QwertyKeys
001b07a0 0000000c B CTRPluginFramework::KeyboardImpl::_DecimalKeys
001b07ac 0000000c B CTRPluginFramework::KeyboardImpl::_HexaDecimalKeys
001b07b8 00000004 b guard variable for CTRPluginFramework::KeyboardImpl::_ProcessEvent(CTRPluginFramework::Event&)::inputClock
001b07c0 00000008 b CTRPluginFramework::KeyboardImpl::_ProcessEvent(CTRPluginFramework::Event&)::inputClock
001b07c8 00000004 b guard variable for CTRPluginFramework::KeyboardImpl::_ProcessEvent(CTRPluginFramework::Event&)::buttons
001b07cc 00000010 b CTRPluginFramework::KeyboardImpl::_ProcessEvent(CTRPluginFramework::Event&)::buttons
001b07dc 00000004 B CTRPluginFramework::MenuItem::_uidCounter
001b07e0 00000004 b CTRPluginFramework::__pmARinstance
001b07e4 00000004 b CTRPluginFramework::g_radioId
001b07e8 00000004 B CTRPluginFramework::PluginMenuExecuteLoop::_firstInstance
001b07ec 00000004 B CTRPluginFramework::PluginMenuExecuteLoop::_builtinLock
001b07f0 00000004 B CTRPluginFramework::PluginMenuExecuteLoop::_arLock
001b07f8 00000004 B CTRPluginFramework::PluginMenuImpl::_runningInstance
001b07fc 00000004 b CTRPluginFramework::PluginMenuImpl::Run()::count
001b0800 00000004 b guard variable for CTRPluginFramework::PluginMenuImpl::Run()::konamicode
001b0808 00000020 b CTRPluginFramework::PluginMenuImpl::Run()::konamicode
001b0828 00000010 b CTRPluginFramework::PluginMenuSearch::_ShowProgressWindow() const::background
001b0838 00000010 b CTRPluginFramework::PluginMenuSearch::_ShowProgressWindow() const::background2
001b0848 00000004 b guard variable for CTRPluginFramework::PluginMenuSearch::_ShowProgressWindow() const::background
001b084c 00000004 b guard variable for CTRPluginFramework::PluginMenuSearch::_ShowProgressWindow() const::background2
001b0850 00000004 b guard variable for CTRPluginFramework::PluginMenuSearch::_ShowProgressWindow() const::timer
001b0858 00000008 b CTRPluginFramework::PluginMenuSearch::_ShowProgressWindow() const::timer
001b0860 00000004 b CTRPluginFramework::PluginMenuSearch::_ShowProgressWindow() const::phase
001b0868 00000004 b CTRPluginFramework::g_mode
001b086c 00000004 b CTRPluginFramework::g_HookMode
001b0870 00000004 B CTRPluginFramework::g_index
001b0874 00000004 B CTRPluginFramework::g_OpenFileLock
001b0878 00000004 B CTRPluginFramework::g_filenames
001b087c 00000004 b CTRPluginFramework::g_buffer2
001b0880 00000030 b CTRPluginFramework::g_hookExportFile
001b08b0 00000038 b CTRPluginFramework::g_FsTryOpenFileHook
001b08e8 00000004 B CTRPluginFramework::g_FsTryOpenFileAddress
001b08ec 00000004 b CTRPluginFramework::g_buffer
001b08f0 00000004 b CTRPluginFramework::PluginMenuTools::_ProcessEvent(CTRPluginFramework::Event&)::mode
001b08f4 00000004 b guard variable for CTRPluginFramework::PluginMenuTools::_RenderBottom()::xpos
001b08f8 00000004 b CTRPluginFramework::PluginMenuTools::_RenderBottom()::xpos
001b0900 00000004 b guard variable for CTRPluginFramework::SearchMenu::ProcessEvent(std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >&, CTRPluginFramework::Time&)::_fastScroll
001b0908 00000008 b CTRPluginFramework::SearchMenu::ProcessEvent(std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >&, CTRPluginFramework::Time&)::_fastScroll
001b0910 00000004 b guard variable for CTRPluginFramework::SearchMenu::ProcessEvent(std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >&, CTRPluginFramework::Time&)::_startFastScroll
001b0918 00000008 b CTRPluginFramework::SearchMenu::ProcessEvent(std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >&, CTRPluginFramework::Time&)::_startFastScroll
001b0920 00000004 b guard variable for CTRPluginFramework::SubMenu::Draw()::background
001b0924 00000010 b CTRPluginFramework::SubMenu::Draw()::background
001b0934 00000004 B CTRPluginFramework::_pool
001b0938 00000001 b CTRPluginFramework::EventManager::ProcessEvents()::isTouching
001b093a 00000004 b CTRPluginFramework::EventManager::ProcessEvents()::firstTouch
001b0940 00000004 B CTRPluginFramework::Heap::__ctrpf_heap
001b0944 00000004 B CTRPluginFramework::Heap::__ctrpf_heap_size
001b0948 00000008 b CTRPluginFramework::Heap::g_heapPool
001b0950 0000000c b sAddrMap
001b0960 00000004 B CTRPluginFramework::ProcessImpl::_kProcess
001b0964 00000064 B CTRPluginFramework::ProcessImpl::_kCodeSet
001b09c8 00000004 B CTRPluginFramework::ProcessImpl::_processID
001b09cc 00000004 B CTRPluginFramework::ProcessImpl::_kProcessState
001b09d0 00000004 B CTRPluginFramework::ProcessImpl::mmuTableSize
001b09d4 00000004 B CTRPluginFramework::ProcessImpl::mmuTable
001b09d8 00000008 B CTRPluginFramework::ProcessImpl::_processName
001b09e0 00000008 B CTRPluginFramework::ProcessImpl::_titleID
001b09e8 00000004 B CTRPluginFramework::ProcessImpl::_processHandle
001b09ec 00000004 B CTRPluginFramework::ProcessImpl::_mainThreadHandle
001b09f0 0000000c B CTRPluginFramework::ProcessImpl::FrameLock
001b09fc 00000004 B CTRPluginFramework::ProcessImpl::FrameEvent
001b0a00 00000004 B CTRPluginFramework::ProcessImpl::_isPaused
001b0a04 00000001 B CTRPluginFramework::ProcessImpl::_isAcquiring
001b0a08 00000038 b CTRPluginFramework::_topBuf
001b0a40 00000004 B CTRPluginFramework::ScreenImpl::Top
001b0a44 00000038 b CTRPluginFramework::_botBuf
001b0a7c 00000004 B CTRPluginFramework::ScreenImpl::Bottom
001b0a80 00000001 B CTRPluginFramework::SystemImpl::_isInit
001b0a81 00000001 B CTRPluginFramework::SystemImpl::_isNew3DS
001b0a84 00000004 B CTRPluginFramework::SystemImpl::_IOBaseLCD
001b0a88 00000004 B CTRPluginFramework::SystemImpl::_IOBasePAD
001b0a8c 00000004 B CTRPluginFramework::SystemImpl::_IOBasePDC
001b0a90 00000004 B CTRPluginFramework::SystemImpl::CFWVersion
001b0a94 00000004 B CTRPluginFramework::SystemImpl::RosalinaHotkey
001b0a98 00000001 B CTRPluginFramework::SystemImpl::IsLoaderNTR
001b0a9c 0000000c B CTRPluginFramework::g_codeTypes
001b0aa8 00000001 b CTRPluginFramework::g_condAgainstData
001b0aa9 00000001 b CTRPluginFramework::g_newCondDataToggle
001b0aac 00000004 b CTRPluginFramework::__arCodeEditor
001b0ab0 00000004 b guard variable for CTRPluginFramework::ARCodeEditor::_ReloadCodeLines()::tempar
001b0ab4 0000000c b CTRPluginFramework::ARCodeEditor::_ReloadCodeLines()::tempar
001b0ac0 00000001 b CTRPluginFramework::ARCodeEditor::operator()(std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >&)::isInHexEditor
001b0ac4 00000004 b guard variable for CTRPluginFramework::ActionReplay_ProcessString(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, bool)::colors
001b0ac8 0000000c b CTRPluginFramework::ActionReplay_ProcessString(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, bool)::colors
001b0ad4 00000001 B CTRPluginFramework::g_heapError
001b0ad8 00000004 b cfguRefCount
001b0adc 00000004 b cfguHandle
001b0ae0 00000004 b sharedFontAddr
001b0ae4 00000004 b srvRefCount
001b0ae8 00000004 b srv2Handle
001b0aec 00000004 b arbiter
001b0af0 00000004 b acRefCount
001b0af4 00000004 b acHandle
001b0af8 00000004 b amRefCount
001b0afc 00000004 b amHandle
001b0b00 0000000c b aptFirstHook
001b0b0c 00000004 b aptLockHandle
001b0b10 00000004 b serviceName.7503
001b0b14 00000004 b aptMessageFunc
001b0b18 00000004 b aptMessageFuncData
001b0b1c 0000000c b aptEvents
001b0b28 00000001 b aptHomeButtonState
001b0b2c 00000004 b aptRefCount
001b0b30 00000008 b aptSleepEvent
001b0b38 00000004 b aptEventHandlerThread
001b0b3c 00000001 b flagInit.7855
001b0b3d 00000001 b flagValue.7856
001b0b40 00001000 b aptParameters
001b1b40 00000004 b fsuHandle
001b1b48 00000080 b fsExemptArchives
001b1bc8 00000004 b fsuRefCount
001b1bcc 00000001 B fs
001b1bd0 00000004 b gspEventData
001b1bd4 00000038 b gspEvents
001b1c0c 0000001c b gspEventCounts
001b1c28 00000001 b gspRunEvents
001b1c2c 00000004 b gspRefCount
001b1c30 00000004 b gfxSharedMemory
001b1c34 00000001 b gfxThreadID
001b1c35 00001000 b gspThreadEventStack
001b2c38 00000004 b hidRefCount
001b2c3c 00000004 b kOld
001b2c40 00000004 b kHeld
001b2c44 00000004 b cPos
001b2c48 00000004 b tPos
001b2c4c 00000006 b aVec
001b2c52 00000006 b gRate
001b2c58 00000004 b kDown
001b2c5c 00000004 b kUp
001b2c60 00000004 b irrstRefCount
001b2c64 00000004 b kHeld
001b2c68 00000004 b csPos
001b2c6c 00000004 B _tls_size
001b2c70 b saved_stack
001b2c78 00000004 b guard variable for CTRPluginFramework::LineWriter::endl[abi:cxx11]()::end
001b2c7c 00000018 b CTRPluginFramework::LineWriter::endl[abi:cxx11]()::end
001b2c94 00000004 b CTRPluginFramework::__converter
001b2c98 00000004 b guard variable for CTRPluginFramework::GuideReader::Draw()::background
001b2c9c 00000010 b CTRPluginFramework::GuideReader::Draw()::background
001b2cb0 00000004 b guard variable for CTRPluginFramework::HexEditor::_ProcessEvent(CTRPluginFramework::Event&)::timer
001b2cb8 00000008 b CTRPluginFramework::HexEditor::_ProcessEvent(CTRPluginFramework::Event&)::timer
001b2cc0 00000004 B CTRPluginFramework::__g_hexEditor
001b2cc4 00000004 b guard variable for CTRPluginFramework::HexEditor::_PromptForAddress(int)::background
001b2cc8 00000010 b CTRPluginFramework::HexEditor::_PromptForAddress(int)::background
001b2cd8 00000001 b CTRPluginFramework::HexEditor::operator()(std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >&)::keysAreDisabled
001b2ce0 00000004 b CTRPluginFramework::PluginMenuHome::_showStarredBtn_OnClick()::bak
001b2ce4 00000004 b guard variable for CTRPluginFramework::PluginMenuHome::_RenderBottom()::creditClock
001b2ce8 00000008 b CTRPluginFramework::PluginMenuHome::_RenderBottom()::creditClock
001b2cf0 00000004 b CTRPluginFramework::g_ctrpfString
001b2cf4 00000004 b CTRPluginFramework::g_bymeString
001b2cf8 00000004 b guard variable for CTRPluginFramework::PluginMenuHome::_ProcessEvent(CTRPluginFramework::Event&)::fastScroll
001b2d00 00000008 b CTRPluginFramework::PluginMenuHome::_ProcessEvent(CTRPluginFramework::Event&)::fastScroll
001b2d08 00000004 b guard variable for CTRPluginFramework::PluginMenuHome::_ProcessEvent(CTRPluginFramework::Event&)::inputClock
001b2d10 00000008 b CTRPluginFramework::PluginMenuHome::_ProcessEvent(CTRPluginFramework::Event&)::inputClock
001b2d18 00000004 b CTRPluginFramework::PluginMenuHome::_ProcessEvent(CTRPluginFramework::Event&)::last
001b2d1c 00000004 B CTRPluginFramework::ARHandler::ActiveData
001b2d20 00000001 B CTRPluginFramework::ARHandler::ExitCodeImmediately
001b2d24 00000008 B CTRPluginFramework::ARHandler::Offset
001b2d2c 00000004 B CTRPluginFramework::ARHandler::ActiveOffset
001b2d30 00000010 B CTRPluginFramework::ARHandler::Data
001b2d40 00000008 B CTRPluginFramework::ARHandler::Storage
001b2d48 00000001 b CTRPluginFramework::ToggleFloat
001b2d4c 00000008 b sMappablePool
001b2d54 0000000c b sAddrMap
001b2d60 b completed.7759
001b2d64 b object.7764
001b2d7c 0000000c b eh_globals
001b2d88 00000010 b (anonymous namespace)::emergency_pool
001b2d98 00000010 V std::string::_Rep::_S_empty_rep_storage
001b2da8 00000004 b (anonymous namespace)::__new_handler
001b2dac 00000028 B __malloc_current_mallinfo
001b2dd4 00000004 B __malloc_max_sbrked_mem
001b2dd8 00000004 B __malloc_max_total_mem
001b2ddc 00000004 B __malloc_top_pad
001b2de0 0000000b b __tzname_dst
001b2dec 0000000b b __tzname_std
001b2df8 00000004 b prev_tzenv
001b2dfc 00000004 B _daylight
001b2e00 00000004 B _timezone
001b2e04 00000004 b initial_env
001b2e08 00000004 b heap_start.7089
001b2e0c 00000004 B fake_heap_end
001b2e10 00000004 B fake_heap_start
001b2e14 00000038 B __syscalls
001b2e4c 00000004 B g_KProcessHandleDataOffset
001b2e50 00000080 B g_kernelParams
001b2ed0 00000004 B g_sharedFont
001b2ed4 00000004 B charPerSheet
001b2ed8 00000004 B gspEvent
001b2edc 00000004 B gspGpuHandle
001b2ee0 00000004 B gspSharedMemHandle
001b2ee4 00000004 B gspThreadEventHandle
001b2ee8 00000004 B hidMemHandle
001b2eec 00000004 B hidHandle
001b2ef0 00000014 B hidEvents
001b2f04 00000004 B hidSharedMem
001b2f08 00000004 B irrstMemHandle
001b2f0c 00000004 B irrstEvent
001b2f10 00000004 B irrstHandle
001b2f14 00000004 B irrstSharedMem
001b2f18 00000004 B __ctru_linear_heap
001b2f1c 00000004 B __tmp
001b2f20 00000004 B __ctru_linear_heap_size
001b2f24 00000004 B __system_retAddr
001b2f28 00000004 B __ctru_heap
001b2f2c B __c_bss_end
001b2f2c A __end__
001b2f2c B __tls_end
001b2f2c B __tls_start
