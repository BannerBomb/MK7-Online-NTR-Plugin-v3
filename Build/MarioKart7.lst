         w __deregister_frame_info
         w __gnu_Unwind_Find_exidx
         w __register_frame_info
         w _ITM_deregisterTMCloneTable
         w _ITM_registerTMCloneTable
00000000 a shift
00000000 a shift
00100000 T __start__
00100000 T _start
00100028 t relocNotFinished
00100044 t notRelativeEntry
00100088 t ClearMem
0010009c t ClrLoop
001000c4 T _init
001000e0 T dispatchArm11KernelCmd
001000f4 t arm11kMemcpy
00100104 t _memcpy
0010011c t loc_108230
00100124 t GetKprocessFromHandle
00100148 t loc_10825C
0010014c t GetCurrentKprocess
0010015c t test4
00100160 t SetCurrentKprocess
00100184 t SetKProcessID
001001ac t loc_1082AC
001001b4 t GetKProcessState
001001c0 t ReadCTXID
001001d0 t exit
001001d4 T executeKernelCmd
001001f0 T initSystem
001001f8 T initLib
0010021c T __ctru_exit
00100238 t .udivsi3_skip_div0_test
00100238 t __aeabi_uidiv
00100238 000001ec T __udivsi3
00100424 00000020 t __aeabi_uidivmod
00100444 t __aeabi_idiv
00100444 00000220 T __divsi3
0010044c t .divsi3_skip_div0_test
00100664 00000020 t __aeabi_idivmod
00100684 00000004 t __aeabi_idiv0
00100684 00000004 t __aeabi_ldiv0
00100688 0000019c T __aeabi_frsub
00100690 00000194 T __aeabi_fsub
00100690 00000194 T __subsf3
00100694 00000190 T __addsf3
00100694 00000190 T __aeabi_fadd
00100824 00000028 T __aeabi_ui2f
00100824 00000028 T __floatunsisf
0010082c 00000020 T __aeabi_i2f
0010082c 00000020 T __floatsisf
0010084c 0000008c t __aeabi_ul2f
0010084c 0000008c T __floatundisf
0010085c 0000007c t __aeabi_l2f
0010085c 0000007c T __floatdisf
001008d8 t __aeabi_ldivmod
001009ac 00000014 T __restore_core_regs
001009ac 00000014 t restore_core_regs
001009c0 t __gnu_Unwind_Restore_VFP
001009c8 t __gnu_Unwind_Save_VFP
001009d0 t __gnu_Unwind_Restore_VFP_D
001009d8 t __gnu_Unwind_Save_VFP_D
001009e0 t __gnu_Unwind_Restore_VFP_D_16_to_31
001009e8 t __gnu_Unwind_Save_VFP_D_16_to_31
001009f0 t __gnu_Unwind_Restore_WMMXD
00100a34 t __gnu_Unwind_Save_WMMXD
00100a78 t __gnu_Unwind_Restore_WMMXC
00100a8c t __gnu_Unwind_Save_WMMXC
00100aa0 00000024 T ___Unwind_RaiseException
00100aa0 00000024 t _Unwind_RaiseException
00100ac4 00000024 T ___Unwind_Resume
00100ac4 00000024 t _Unwind_Resume
00100ae8 00000024 T ___Unwind_Resume_or_Rethrow
00100ae8 00000024 t _Unwind_Resume_or_Rethrow
00100b0c 00000024 T ___Unwind_ForcedUnwind
00100b0c 00000024 T _Unwind_ForcedUnwind
00100b30 00000024 T ___Unwind_Backtrace
00100b30 00000024 T _Unwind_Backtrace
00100b68 00000390 T strcmp
00100ef0 t __aeabi_uldivmod
00100f2c t deregister_tm_clones
00100f58 t register_tm_clones
00100f90 t __do_global_dtors_aux
00100fd4 t frame_dummy
00101008 000000b0 t CTRPluginFramework::GetRacePointer() [clone .part.7]
001010b8 0000003c t CTRPluginFramework::GetFNsPointer() [clone .part.8]
001010f4 00000068 t CTRPluginFramework::GetOldPointer5CC() [clone .part.9]
0010115c 00000064 t CTRPluginFramework::GetOldPointer5D0() [clone .part.10]
001011c0 00000090 t CTRPluginFramework::GetItemPointer() [clone .part.11]
00101250 0000008c T CTRPluginFramework::IsInRace()
001012dc 000000ac T CTRPluginFramework::GetTotalPlayers()
00101388 00000074 T CTRPluginFramework::GetTime()
001013fc 00000114 t CTRPluginFramework::CountdownMode(CTRPluginFramework::MenuEntry*)::{lambda(CTRPluginFramework::Screen const&)#1}::_FUN(CTRPluginFramework::Screen const&)
00101510 000000b4 T CTRPluginFramework::SubToTime(unsigned short)
001015c4 00000070 T CTRPluginFramework::writeItem(unsigned long)
00101634 000000c4 T CTRPluginFramework::writeSpeed(unsigned long)
001016f8 00000048 T CTRPluginFramework::writeVR(unsigned long)
00101740 0000004c T CTRPluginFramework::writeLocation(unsigned long)
0010178c 00000064 T CTRPluginFramework::writeFlag(unsigned short)
001017f0 00000040 T CTRPluginFramework::invincible(CTRPluginFramework::MenuEntry*)
00101830 00000040 T CTRPluginFramework::alwaysStarPower(CTRPluginFramework::MenuEntry*)
00101870 0000003c T CTRPluginFramework::trickAnywhere(CTRPluginFramework::MenuEntry*)
001018ac 00000040 T CTRPluginFramework::alwaysBlackKart(CTRPluginFramework::MenuEntry*)
001018ec 0000003c T CTRPluginFramework::alwaysShocked(CTRPluginFramework::MenuEntry*)
00101928 00000004 T CTRPluginFramework::alwaysCrushed(CTRPluginFramework::MenuEntry*)
0010192c 00000028 T CTRPluginFramework::instantMT(CTRPluginFramework::MenuEntry*)
00101954 00000014 T CTRPluginFramework::hugeBunnyhop(CTRPluginFramework::MenuEntry*)
00101968 00000014 T CTRPluginFramework::fastReverse(CTRPluginFramework::MenuEntry*)
0010197c 00000068 T CTRPluginFramework::noCountdown(CTRPluginFramework::MenuEntry*)
001019e4 0000004c T CTRPluginFramework::moonjump(CTRPluginFramework::MenuEntry*)
00101a30 000000b4 T CTRPluginFramework::saveSlotTeleporter(CTRPluginFramework::MenuEntry*)
00101ae4 00000054 T CTRPluginFramework::maxTimer(CTRPluginFramework::MenuEntry*)
00101b38 00000074 T CTRPluginFramework::waterEverywhere(CTRPluginFramework::MenuEntry*)
00101bac 000000f4 T CTRPluginFramework::driveAnywhere(CTRPluginFramework::MenuEntry*)
00101ca0 000002dc T CTRPluginFramework::stalking(CTRPluginFramework::MenuEntry*)
00101f7c 000000dc T CTRPluginFramework::cpuBrawl(CTRPluginFramework::MenuEntry*)
00102058 000002c0 T CTRPluginFramework::sizeChanger(CTRPluginFramework::MenuEntry*)
00102318 00000198 T CTRPluginFramework::TouchCode(CTRPluginFramework::MenuEntry*)
001024b0 00000010 T CTRPluginFramework::fastBlueShell(CTRPluginFramework::MenuEntry*)
001024c0 00000010 T CTRPluginFramework::stoppedBlueShell(CTRPluginFramework::MenuEntry*)
001024d0 00000010 T CTRPluginFramework::fastGreenShell(CTRPluginFramework::MenuEntry*)
001024e0 00000010 T CTRPluginFramework::stoppedGreenShell(CTRPluginFramework::MenuEntry*)
001024f0 0000005c T CTRPluginFramework::dropMushrooms(CTRPluginFramework::MenuEntry*)
0010254c 0000004c T CTRPluginFramework::bulletControl(CTRPluginFramework::MenuEntry*)
00102598 00000084 T CTRPluginFramework::disableStarMusic(CTRPluginFramework::MenuEntry*)
0010261c 00000070 T CTRPluginFramework::bulletSpeed(CTRPluginFramework::MenuEntry*)
0010268c 00000144 T CTRPluginFramework::blueShellRide(CTRPluginFramework::MenuEntry*)
001027d0 00000118 T CTRPluginFramework::itemWheel(CTRPluginFramework::MenuEntry*)
001028e8 00000110 T CTRPluginFramework::SetItem(CTRPluginFramework::MenuEntry*)
001029f8 000000ac T CTRPluginFramework::instantAcceleration(CTRPluginFramework::MenuEntry*)
00102aa4 000000b4 T CTRPluginFramework::instantBackAcceleration(CTRPluginFramework::MenuEntry*)
00102b58 0000005c T CTRPluginFramework::instantStop(CTRPluginFramework::MenuEntry*)
00102bb4 0000000c T CTRPluginFramework::TwoHundredCC(CTRPluginFramework::MenuEntry*)
00102bc0 0000000c T CTRPluginFramework::FiveHundredCC(CTRPluginFramework::MenuEntry*)
00102bcc 00000118 T CTRPluginFramework::eliminationMode(CTRPluginFramework::MenuEntry*)
00102ce4 00000480 T CTRPluginFramework::CountdownMode(CTRPluginFramework::MenuEntry*)
00103164 00000064 T CTRPluginFramework::disableFirstPersonView(CTRPluginFramework::MenuEntry*)
001031c8 000000ec T CTRPluginFramework::vrExtender(CTRPluginFramework::MenuEntry*)
001032b4 0000010c T CTRPluginFramework::SetVR(CTRPluginFramework::MenuEntry*)
001033c0 00000088 T CTRPluginFramework::randomVR(CTRPluginFramework::MenuEntry*)
00103448 000000b4 T CTRPluginFramework::unlockEverything(CTRPluginFramework::MenuEntry*)
001034fc 00000048 T CTRPluginFramework::NoDC(CTRPluginFramework::MenuEntry*)
00103544 0000005c T CTRPluginFramework::fastGame(CTRPluginFramework::MenuEntry*)
001035a0 0000020c T CTRPluginFramework::SetFlag(CTRPluginFramework::MenuEntry*)
001037ac 000000d0 T CTRPluginFramework::SetCoordinates(CTRPluginFramework::MenuEntry*)
0010387c 000000a0 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(char const*, std::allocator<char> const&) [clone .isra.15]
0010391c 00000004 T CTRPluginFramework::PatchProcess(CTRPluginFramework::FwkSettings&)
00103920 00001814 T CTRPluginFramework::main()
00105134 00000030 T CTRPluginFramework::HoldKey::HoldKey(unsigned long, CTRPluginFramework::Time)
00105134 00000030 T CTRPluginFramework::HoldKey::HoldKey(unsigned long, CTRPluginFramework::Time)
00105164 000000a0 T CTRPluginFramework::QuickMenu::~QuickMenu()
00105164 000000a0 T CTRPluginFramework::QuickMenu::~QuickMenu()
00105204 000000b0 t void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct<char*>(char*, char*, std::forward_iterator_tag) [clone .isra.47]
00105204 000000b0 t void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct<char const*>(char const*, char const*, std::forward_iterator_tag) [clone .isra.66]
001052b4 000000cc T CTRPluginFramework::QuickMenu::QuickMenu(unsigned long)
001052b4 000000cc T CTRPluginFramework::QuickMenu::QuickMenu(unsigned long)
00105380 000002a8 W void std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::_M_realloc_insert<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&>(__gnu_cxx::__normal_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
00105628 00000034 t _GLOBAL__sub_I__ZN18CTRPluginFramework13QuickMenuItemC2ERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEENS0_8ItemTypeE
0010565c 00000424 T CTRPluginFramework::KeepThreadMain(void*)
00105a80 00000038 T onLoadCro
00105ab8 00000164 T CTRPluginFramework::Initialize()
00105c1c 00000098 T CTRPluginFramework::ThreadExit()
00105cb4 00000060 T abort
00105d14 00000024 T CTRPluginFramework::ThreadInit(void*)
00105d38 00000068 T LaunchMainThread
00105da0 0000000c t _GLOBAL__sub_I_g_mainThread
00105dac 00000018 T CTRPluginFramework::Color::Color(unsigned char, unsigned char, unsigned char, unsigned char)
00105dac 00000018 T CTRPluginFramework::Color::Color(unsigned char, unsigned char, unsigned char, unsigned char)
00105dc4 00000020 T CTRPluginFramework::Color::Color(unsigned long)
00105dc4 00000020 T CTRPluginFramework::Color::Color(unsigned long)
00105de4 00000008 T CTRPluginFramework::Color::ToU32() const
00105df0 00000120 T CTRPluginFramework::Color::Fade(double)
00105f10 00000040 T CTRPluginFramework::Color::operator<=(CTRPluginFramework::Color const&) const
00105f50 00000080 T CTRPluginFramework::Color::operator*(CTRPluginFramework::Color const&) const
00105fd0 000001d8 T CTRPluginFramework::Color::Blend(CTRPluginFramework::Color const&, CTRPluginFramework::Color::BlendMode) const
001061a8 000001cc t _GLOBAL__sub_I__ZN18CTRPluginFramework5Color5BlackE
00106374 00000068 T CTRPluginFramework::Screen::Draw(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned long, unsigned long, CTRPluginFramework::Color const&, CTRPluginFramework::Color const&) const
001063dc 00000080 T CTRPluginFramework::OSD::Notify(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, CTRPluginFramework::Color, CTRPluginFramework::Color)
0010645c 00000004 T CTRPluginFramework::OSD::TryLock()
00106460 00000004 T CTRPluginFramework::OSD::Unlock()
00106464 000000d8 W void std::vector<bool (*)(CTRPluginFramework::Screen const&), std::allocator<bool (*)(CTRPluginFramework::Screen const&)> >::_M_realloc_insert<bool (* const&)(CTRPluginFramework::Screen const&)>(__gnu_cxx::__normal_iterator<bool (**)(CTRPluginFramework::Screen const&), std::vector<bool (*)(CTRPluginFramework::Screen const&), std::allocator<bool (*)(CTRPluginFramework::Screen const&)> > >, bool (* const&)(CTRPluginFramework::Screen const&))
0010653c 0000007c T CTRPluginFramework::OSD::Run(bool (*)(CTRPluginFramework::Screen const&))
001065b8 000000c4 T CTRPluginFramework::ConvertToFloat(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, bool)
0010667c 000000a8 T CTRPluginFramework::stou32(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, unsigned long&)
00106724 00000050 T CTRPluginFramework::Keyboard::Keyboard(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
00106724 00000050 T CTRPluginFramework::Keyboard::Keyboard(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
00106774 00000068 T CTRPluginFramework::Keyboard::Keyboard(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&)
00106774 00000068 T CTRPluginFramework::Keyboard::Keyboard(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&)
001067dc 0000002c T CTRPluginFramework::Keyboard::~Keyboard()
001067dc 0000002c T CTRPluginFramework::Keyboard::~Keyboard()
00106808 00000008 T CTRPluginFramework::Keyboard::IsHexadecimal(bool)
00106810 00000008 T CTRPluginFramework::Keyboard::SetCompareCallback(bool (*)(void const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)) const
00106818 0000001c T CTRPluginFramework::Keyboard::Populate(std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&)
00106834 00000028 T CTRPluginFramework::Keyboard::Open() const
0010685c 00000078 T CTRPluginFramework::Keyboard::Open(float&) const
001068d4 000000b0 T CTRPluginFramework::Keyboard::Open(float&, float) const
00106984 00000054 T CTRPluginFramework::Keyboard::Open(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&) const
001069d8 00000068 T CTRPluginFramework::Keyboard::Open(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const
00106a40 0000009c W unsigned long __gnu_cxx::__stoa<unsigned long, unsigned long, char, int>(unsigned long (*)(char const*, char**, int), char const*, char const*, unsigned int*, int)
00106adc 0000008c T CTRPluginFramework::ConvertToU16(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, bool)
00106b68 000000a8 T CTRPluginFramework::Keyboard::Open(unsigned short&) const
00106c10 000000e8 T CTRPluginFramework::Keyboard::Open(unsigned short&, unsigned short) const
00106cf8 0000008c T CTRPluginFramework::ConvertToU32(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, bool)
00106d84 000000a8 T CTRPluginFramework::Keyboard::Open(unsigned long&) const
00106e2c 000000e8 T CTRPluginFramework::Keyboard::Open(unsigned long&, unsigned long) const
00106f14 0000008c T CTRPluginFramework::ConvertToU8(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, bool)
00106fa0 000000a8 T CTRPluginFramework::Keyboard::Open(unsigned char&) const
00107048 000000e8 T CTRPluginFramework::Keyboard::Open(unsigned char&, unsigned char) const
00107130 0000004c T CTRPluginFramework::MenuEntry::MenuEntry(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, void (*)(CTRPluginFramework::MenuEntry*), std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
00107130 0000004c T CTRPluginFramework::MenuEntry::MenuEntry(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, void (*)(CTRPluginFramework::MenuEntry*), std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
0010717c 00000030 T CTRPluginFramework::MenuEntry::~MenuEntry()
0010717c 00000030 T CTRPluginFramework::MenuEntry::~MenuEntry()
001071ac 00000008 T CTRPluginFramework::MenuEntry::RefreshNote() const
001071b4 00000028 t __tcf_0
001071dc 00000078 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(char const*, std::allocator<char> const&) [clone .isra.40]
00107254 00000008 T CTRPluginFramework::Hotkey::operator=(unsigned long)
0010725c 00000080 T CTRPluginFramework::Hotkey::AskForKeys()
001072dc 0000007c T CTRPluginFramework::KeysToString[abi:cxx11](unsigned long)
00107358 000000d8 T CTRPluginFramework::Hotkey::ToString[abi:cxx11](bool) const
00107430 0000001c T CTRPluginFramework::HotkeyManager::HotkeyManager(CTRPluginFramework::MenuEntry*)
00107430 0000001c T CTRPluginFramework::HotkeyManager::HotkeyManager(CTRPluginFramework::MenuEntry*)
0010744c 00000040 T CTRPluginFramework::HotkeyManager::~HotkeyManager()
0010744c 00000040 T CTRPluginFramework::HotkeyManager::~HotkeyManager()
0010748c 00000010 T CTRPluginFramework::HotkeyManager::operator[](unsigned long)
0010749c 000000c0 T CTRPluginFramework::HotkeyManager::ToString[abi:cxx11]()
0010755c 00000020 T CTRPluginFramework::HotkeyManager::Count()
0010757c 00000134 T CTRPluginFramework::HotkeyManager::AskForKeys()
001076b0 00000128 t _GLOBAL__sub_I__ZN18CTRPluginFramework6HotkeyC2Ev
001077d8 00000040 T CTRPluginFramework::MenuFolder::MenuFolder(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
001077d8 00000040 T CTRPluginFramework::MenuFolder::MenuFolder(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
00107818 00000028 T CTRPluginFramework::MenuFolder::~MenuFolder()
00107818 00000028 T CTRPluginFramework::MenuFolder::~MenuFolder()
00107840 00000010 T CTRPluginFramework::MenuFolder::Append(CTRPluginFramework::MenuEntry*) const
00107850 0000006c T CTRPluginFramework::PluginMenu::PluginMenu(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long, unsigned long, unsigned long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)
00107850 0000006c T CTRPluginFramework::PluginMenu::PluginMenu(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long, unsigned long, unsigned long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)
001078bc 00000014 T CTRPluginFramework::PluginMenu::Append(CTRPluginFramework::MenuFolder*) const
001078d0 00000038 T CTRPluginFramework::PluginMenu::Run() const
00107908 00000008 T CTRPluginFramework::PluginMenu::IsOpen()
00107910 00000010 T CTRPluginFramework::PluginMenu::GetRunningInstance()
00107920 0000000c T CTRPluginFramework::PluginMenu::SynchronizeWithFrame(bool)
0010792c 00000030 t CTRPluginFramework::GetCurrentTime()
0010795c 00000014 T CTRPluginFramework::Clock::Clock()
0010795c 00000014 T CTRPluginFramework::Clock::Clock()
00107970 00000038 T CTRPluginFramework::Clock::GetElapsedTime() const
001079a8 00000030 T CTRPluginFramework::Clock::HasTimePassed(CTRPluginFramework::Time) const
001079d8 00000044 T CTRPluginFramework::Clock::Restart()
00107a1c 00000014 T CTRPluginFramework::Controller::GetKeysDown()
00107a30 0000001c T CTRPluginFramework::Controller::IsKeyDown(CTRPluginFramework::Key)
00107a4c 0000001c T CTRPluginFramework::Controller::IsKeyPressed(CTRPluginFramework::Key)
00107a68 0000001c T CTRPluginFramework::Controller::IsKeyReleased(CTRPluginFramework::Key)
00107a84 0000001c T CTRPluginFramework::Controller::IsKeysDown(unsigned long)
00107aa0 0000002c T CTRPluginFramework::Controller::InjectKey(unsigned long)
00107acc 0000002c T CTRPluginFramework::Controller::Update()
00107af8 00000070 t CTRPluginFramework::Directory::_List() const::{lambda(FS_DirectoryEntry const&, FS_DirectoryEntry const&)#1}::operator()(FS_DirectoryEntry const&, FS_DirectoryEntry const&) const [clone .isra.11]
00107b68 00000128 t void std::__adjust_heap<__gnu_cxx::__normal_iterator<FS_DirectoryEntry*, std::vector<FS_DirectoryEntry, std::allocator<FS_DirectoryEntry> > >, int, FS_DirectoryEntry, __gnu_cxx::__ops::_Iter_comp_iter<CTRPluginFramework::Directory::_List() const::{lambda(FS_DirectoryEntry const&, FS_DirectoryEntry const&)#1}> >(__gnu_cxx::__normal_iterator<FS_DirectoryEntry*, std::vector<FS_DirectoryEntry, std::allocator<FS_DirectoryEntry> > >, int, __gnu_cxx::__normal_iterator<FS_DirectoryEntry*, std::vector<FS_DirectoryEntry, std::allocator<FS_DirectoryEntry> > >, FS_DirectoryEntry, __gnu_cxx::__ops::_Iter_comp_iter<CTRPluginFramework::Directory::_List() const::{lambda(FS_DirectoryEntry const&, FS_DirectoryEntry const&)#1}>) [clone .isra.42]
00107c90 00000084 t void std::__make_heap<__gnu_cxx::__normal_iterator<FS_DirectoryEntry*, std::vector<FS_DirectoryEntry, std::allocator<FS_DirectoryEntry> > >, __gnu_cxx::__ops::_Iter_comp_iter<CTRPluginFramework::Directory::_List() const::{lambda(FS_DirectoryEntry const&, FS_DirectoryEntry const&)#1}> >(__gnu_cxx::__normal_iterator<FS_DirectoryEntry*, std::vector<FS_DirectoryEntry, std::allocator<FS_DirectoryEntry> > >, __gnu_cxx::__ops::_Iter_comp_iter<CTRPluginFramework::Directory::_List() const::{lambda(FS_DirectoryEntry const&, FS_DirectoryEntry const&)#1}>, __gnu_cxx::__ops::_Iter_comp_iter<CTRPluginFramework::Directory::_List() const::{lambda(FS_DirectoryEntry const&, FS_DirectoryEntry const&)#1}>&) [clone .isra.43]
00107d14 0000007c t void std::__pop_heap<__gnu_cxx::__normal_iterator<FS_DirectoryEntry*, std::vector<FS_DirectoryEntry, std::allocator<FS_DirectoryEntry> > >, __gnu_cxx::__ops::_Iter_comp_iter<CTRPluginFramework::Directory::_List() const::{lambda(FS_DirectoryEntry const&, FS_DirectoryEntry const&)#1}> >(__gnu_cxx::__normal_iterator<FS_DirectoryEntry*, std::vector<FS_DirectoryEntry, std::allocator<FS_DirectoryEntry> > >, __gnu_cxx::__ops::_Iter_comp_iter<CTRPluginFramework::Directory::_List() const::{lambda(FS_DirectoryEntry const&, FS_DirectoryEntry const&)#1}>, __gnu_cxx::__ops::_Iter_comp_iter<CTRPluginFramework::Directory::_List() const::{lambda(FS_DirectoryEntry const&, FS_DirectoryEntry const&)#1}>, __gnu_cxx::__ops::_Iter_comp_iter<CTRPluginFramework::Directory::_List() const::{lambda(FS_DirectoryEntry const&, FS_DirectoryEntry const&)#1}>&) [clone .isra.44]
00107d90 00000078 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(char const*, std::allocator<char> const&) [clone .isra.53]
00107e08 00000064 t void std::__unguarded_linear_insert<__gnu_cxx::__normal_iterator<FS_DirectoryEntry*, std::vector<FS_DirectoryEntry, std::allocator<FS_DirectoryEntry> > >, __gnu_cxx::__ops::_Val_comp_iter<CTRPluginFramework::Directory::_List() const::{lambda(FS_DirectoryEntry const&, FS_DirectoryEntry const&)#1}> >(__gnu_cxx::__normal_iterator<FS_DirectoryEntry*, std::vector<FS_DirectoryEntry, std::allocator<FS_DirectoryEntry> > >, __gnu_cxx::__ops::_Val_comp_iter<CTRPluginFramework::Directory::_List() const::{lambda(FS_DirectoryEntry const&, FS_DirectoryEntry const&)#1}>) [clone .isra.69]
00107e6c 00000090 t void std::__insertion_sort<__gnu_cxx::__normal_iterator<FS_DirectoryEntry*, std::vector<FS_DirectoryEntry, std::allocator<FS_DirectoryEntry> > >, __gnu_cxx::__ops::_Iter_comp_iter<CTRPluginFramework::Directory::_List() const::{lambda(FS_DirectoryEntry const&, FS_DirectoryEntry const&)#1}> >(__gnu_cxx::__normal_iterator<FS_DirectoryEntry*, std::vector<FS_DirectoryEntry, std::allocator<FS_DirectoryEntry> > >, __gnu_cxx::__ops::_Iter_comp_iter<CTRPluginFramework::Directory::_List() const::{lambda(FS_DirectoryEntry const&, FS_DirectoryEntry const&)#1}>, __gnu_cxx::__ops::_Iter_comp_iter<CTRPluginFramework::Directory::_List() const::{lambda(FS_DirectoryEntry const&, FS_DirectoryEntry const&)#1}>) [clone .isra.81]
00107efc 00000114 T CTRPluginFramework::_Path::SdmcFixPath(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)
00108010 00000074 T CTRPluginFramework::_Path::SdmcUtf16Path(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)
00108084 0000008c T CTRPluginFramework::Directory::ChangeWorkingDirectory(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
00108110 00000078 T CTRPluginFramework::Directory::Create(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
00108188 00000078 T CTRPluginFramework::Directory::IsExists(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
00108200 00000034 T CTRPluginFramework::Directory::Close() const
00108234 00000100 T CTRPluginFramework::Directory::Open(CTRPluginFramework::Directory&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, bool)
00108334 00000014 T CTRPluginFramework::Directory::GetFullName[abi:cxx11]() const
00108348 00000008 T CTRPluginFramework::Directory::IsOpen() const
00108350 0000002c T CTRPluginFramework::Directory::Directory()
00108350 0000002c T CTRPluginFramework::Directory::Directory()
0010837c 00000034 T CTRPluginFramework::Directory::Directory(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, bool)
0010837c 00000034 T CTRPluginFramework::Directory::Directory(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, bool)
001083b0 0000002c T CTRPluginFramework::Directory::~Directory()
001083b0 0000002c T CTRPluginFramework::Directory::~Directory()
001083dc 00000100 W void std::vector<FS_DirectoryEntry, std::allocator<FS_DirectoryEntry> >::_M_realloc_insert<FS_DirectoryEntry const&>(__gnu_cxx::__normal_iterator<FS_DirectoryEntry*, std::vector<FS_DirectoryEntry, std::allocator<FS_DirectoryEntry> > >, FS_DirectoryEntry const&)
001084dc 00000044 W std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::push_back(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
00108520 0000004c W std::enable_if<std::__and_<std::__not_<std::__is_tuple_like<FS_DirectoryEntry> >, std::is_move_constructible<FS_DirectoryEntry>, std::is_move_assignable<FS_DirectoryEntry> >::value, void>::type std::swap<FS_DirectoryEntry>(FS_DirectoryEntry&, FS_DirectoryEntry&)
0010856c 00000184 t void std::__introsort_loop<__gnu_cxx::__normal_iterator<FS_DirectoryEntry*, std::vector<FS_DirectoryEntry, std::allocator<FS_DirectoryEntry> > >, int, __gnu_cxx::__ops::_Iter_comp_iter<CTRPluginFramework::Directory::_List() const::{lambda(FS_DirectoryEntry const&, FS_DirectoryEntry const&)#1}> >(__gnu_cxx::__normal_iterator<FS_DirectoryEntry*, std::vector<FS_DirectoryEntry, std::allocator<FS_DirectoryEntry> > >, __gnu_cxx::__ops::_Iter_comp_iter<CTRPluginFramework::Directory::_List() const::{lambda(FS_DirectoryEntry const&, FS_DirectoryEntry const&)#1}>, int, __gnu_cxx::__ops::_Iter_comp_iter<CTRPluginFramework::Directory::_List() const::{lambda(FS_DirectoryEntry const&, FS_DirectoryEntry const&)#1}>)
001086f0 0000010c T CTRPluginFramework::Directory::_List() const
001087fc 00000168 T CTRPluginFramework::Directory::ListFiles(std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const
00108964 00000160 T CTRPluginFramework::Directory::ListDirectories(std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const
00108ac4 00000038 t _GLOBAL__sub_I__ZN18CTRPluginFramework5_Path11SdmcFixPathERNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE
00108afc 000000e0 T CTRPluginFramework::File::Rename(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
00108bdc 00000060 T CTRPluginFramework::File::Remove(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
00108c3c 00000088 T CTRPluginFramework::File::Exists(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
00108cc4 0000005c T CTRPluginFramework::File::Close() const
00108d20 000000dc T CTRPluginFramework::File::Open(CTRPluginFramework::File&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, int)
00108dfc 000000b0 T CTRPluginFramework::File::Read(void*, unsigned long) const
00108eac 000000e8 T CTRPluginFramework::File::Write(void const*, unsigned long)
00108f94 0000002c T CTRPluginFramework::File::WriteLine(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)
00108fc0 000000b0 T CTRPluginFramework::File::Seek(long long, CTRPluginFramework::File::SeekPos) const
00109070 00000008 T CTRPluginFramework::File::Tell() const
00109078 00000010 T CTRPluginFramework::File::Rewind() const
00109088 00000008 T CTRPluginFramework::File::Flush() const
00109090 00000044 T CTRPluginFramework::File::GetSize() const
001090d4 00000008 T CTRPluginFramework::File::IsOpen() const
001090dc 00000014 T CTRPluginFramework::File::GetFullName[abi:cxx11]() const
001090f0 00000034 T CTRPluginFramework::File::File()
001090f0 00000034 T CTRPluginFramework::File::File()
00109124 00000040 T CTRPluginFramework::File::File(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned long)
00109124 00000040 T CTRPluginFramework::File::File(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned long)
00109164 00000100 T CTRPluginFramework::FwkSettings::SetThemeDefault()
00109264 00000010 T CTRPluginFramework::Process::GetHandle()
00109274 00000010 T CTRPluginFramework::Process::GetTitleID()
00109284 00000060 T CTRPluginFramework::Process::GetTitleID(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)
001092e4 00000038 T CTRPluginFramework::Process::GetName(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)
0010931c 00000024 T CTRPluginFramework::Process::GetTextSize()
00109340 0000005c T CTRPluginFramework::Process::ProtectMemory(unsigned long, unsigned long, int)
0010939c 00000074 T CTRPluginFramework::Process::ProtectRegion(unsigned long, int)
00109410 000000a8 T CTRPluginFramework::Process::CheckAddress(unsigned long, unsigned long)
001094b8 000000b8 T CTRPluginFramework::Process::CopyMemory(void*, void const*, unsigned long)
00109570 000000b0 T CTRPluginFramework::Process::CheckRegion(unsigned long, unsigned long&, unsigned long)
00109620 0000003c T CTRPluginFramework::Process::Write32(unsigned long, unsigned long)
0010965c 00000028 T CTRPluginFramework::Process::Write16(unsigned long, unsigned short)
00109684 00000020 T CTRPluginFramework::Process::Write8(unsigned long, unsigned char)
001096a4 00000028 T CTRPluginFramework::Process::WriteFloat(unsigned long, float)
001096cc 00000040 T CTRPluginFramework::Process::Read32(unsigned long, unsigned long&)
0010970c 0000002c T CTRPluginFramework::Process::Read16(unsigned long, unsigned short&)
00109738 00000024 T CTRPluginFramework::Process::Read8(unsigned long, unsigned char&)
0010975c 00000024 T CTRPluginFramework::Process::ReadFloat(unsigned long, float&)
00109780 00000048 T CTRPluginFramework::Sleep(CTRPluginFramework::Time)
001097c8 00000010 T CTRPluginFramework::System::IsNew3DS()
001097d8 00000010 T CTRPluginFramework::System::IsLoaderNTR()
001097e8 00000014 T CTRPluginFramework::Time::Time()
001097e8 00000014 T CTRPluginFramework::Time::Time()
001097fc 00000020 T CTRPluginFramework::Time::AsSeconds() const
0010981c 00000018 T CTRPluginFramework::Time::AsMilliseconds() const
00109834 00000008 T CTRPluginFramework::Time::AsMicroseconds() const
0010983c 00000028 T CTRPluginFramework::Seconds(float)
00109864 00000010 T CTRPluginFramework::Milliseconds(int)
00109874 00000008 T CTRPluginFramework::Microseconds(long long)
0010987c 00000014 T CTRPluginFramework::operator<(CTRPluginFramework::Time, CTRPluginFramework::Time)
00109890 00000014 T CTRPluginFramework::operator>(CTRPluginFramework::Time, CTRPluginFramework::Time)
001098a4 00000014 T CTRPluginFramework::operator>=(CTRPluginFramework::Time, CTRPluginFramework::Time)
001098b8 00000020 T CTRPluginFramework::operator-(CTRPluginFramework::Time, CTRPluginFramework::Time)
001098d8 0000004c T CTRPluginFramework::operator/(CTRPluginFramework::Time, float)
00109924 00000018 t _GLOBAL__sub_I__ZN18CTRPluginFramework4Time4ZeroE
0010993c 00000064 t void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct<char const*>(char const*, char const*, std::forward_iterator_tag) [clone .isra.17]
001099a0 00000074 T CTRPluginFramework::Utils::Format[abi:cxx11](char const*, ...)
00109a14 0000005c T CTRPluginFramework::Utils::ToHex[abi:cxx11](unsigned long)
00109a70 00000080 T CTRPluginFramework::Utils::ToString[abi:cxx11](float, int)
00109af0 000000b4 T CTRPluginFramework::Utils::GetSize(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
00109ba4 00000140 T CTRPluginFramework::Utils::RemoveLastChar(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)
00109ce4 00000038 W std::mersenne_twister_engine<unsigned int, 32u, 624u, 397u, 31u, 2567483615u, 11u, 4294967295u, 7u, 2636928640u, 15u, 4022730752u, 18u, 1812433253u>::seed(unsigned int)
00109d1c 0000001c T CTRPluginFramework::InitializeRandomEngine()
00109d38 0000010c W std::mersenne_twister_engine<unsigned int, 32u, 624u, 397u, 31u, 2567483615u, 11u, 4294967295u, 7u, 2636928640u, 15u, 4022730752u, 18u, 1812433253u>::operator()()
00109e44 00000068 T CTRPluginFramework::Utils::Random(unsigned long, unsigned long)
00109eac 0000001c t _GLOBAL__sub_I__ZN18CTRPluginFramework5Utils6FormatB5cxx11EPKcz
00109ec8 00000078 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(char const*, std::allocator<char> const&) [clone .isra.24]
00109f40 0000001c W CTRPluginFramework::File::~File()
00109f40 0000001c W CTRPluginFramework::File::~File()
00109f5c 000000a0 W CTRPluginFramework::BMPImage::BMPImage(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
00109f5c 000000a0 W CTRPluginFramework::BMPImage::BMPImage(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
00109ffc 00000060 W CTRPluginFramework::BMPImage::BMPImage(unsigned long, unsigned long)
00109ffc 00000060 W CTRPluginFramework::BMPImage::BMPImage(unsigned long, unsigned long)
0010a05c 00000010 W CTRPluginFramework::BMPImage::DataClear()
0010a06c 00000134 W CTRPluginFramework::BMPImage::Resample(CTRPluginFramework::BMPImage&, int, int)
0010a1a0 0000002c T CTRPluginFramework::GetRatio(int, int, int, int)
0010a1cc 00000138 T CTRPluginFramework::PostProcess(CTRPluginFramework::BMPImage*, int, int)
0010a304 00000298 T CTRPluginFramework::Preferences::OpenConfigFile(CTRPluginFramework::File&, CTRPluginFramework::Preferences::HeaderV1&)
0010a59c 000000d0 T CTRPluginFramework::Preferences::LoadSettings()
0010a66c 000000b8 T CTRPluginFramework::Preferences::LoadSavedEnabledCheats()
0010a724 000000b8 T CTRPluginFramework::Preferences::LoadSavedFavorites()
0010a7dc 0000005c T CTRPluginFramework::Preferences::LoadHotkeysFromFile()
0010a838 00000194 T CTRPluginFramework::Preferences::LoadBackgrounds()
0010a9cc 00000080 T CTRPluginFramework::Preferences::UnloadBackgrounds()
0010aa4c 000001ec T CTRPluginFramework::Preferences::WriteSettings()
0010ac38 00000004 T CTRPluginFramework::Preferences::Initialize()
0010ac3c 00000078 t _GLOBAL__sub_I__ZN18CTRPluginFramework11Preferences18topBackgroundImageE
0010acb4 00000008 t int CTRPluginFramework::BMPImage::ReadFromFile<unsigned int>(CTRPluginFramework::File&, unsigned int&) [clone .isra.9]
0010acbc 00000078 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(char const*, std::allocator<char> const&) [clone .isra.25]
0010ad34 0000000c W CTRPluginFramework::BMPImage::BitmapFileHeader::Clear()
0010ad40 0000000c W CTRPluginFramework::BMPImage::BitmapInformationHeader::Clear()
0010ad4c 00000100 W CTRPluginFramework::BMPImage::ReadBIH(CTRPluginFramework::File&, CTRPluginFramework::BMPImage::BitmapInformationHeader&)
0010ae4c 00000030 T CTRPluginFramework::BMPImage::~BMPImage()
0010ae4c 00000030 T CTRPluginFramework::BMPImage::~BMPImage()
0010ae7c 000000cc T CTRPluginFramework::BMPImage::FillWithImg(CTRPluginFramework::BMPImage const&)
0010af48 00000114 T CTRPluginFramework::BMPImage::Draw(int, int)
0010b05c 00000204 T CTRPluginFramework::BMPImage::Draw(CTRPluginFramework::Rect<int> const&, float)
0010b260 00000058 T CTRPluginFramework::BMPImage::CreateBitmap()
0010b2b8 000004d4 T CTRPluginFramework::BMPImage::LoadBitmap()
0010b78c 00000010 T CTRPluginFramework::Glyph::Width() const
0010b79c 00000060 T CTRPluginFramework::Font::Initialize()
0010b7fc 00000354 T CTRPluginFramework::GetOriginalGlyph(unsigned long)
0010bb50 00000308 T CTRPluginFramework::ShrinkGlyph(unsigned char*, unsigned char*)
0010be58 000000f4 T CTRPluginFramework::Font::CacheGlyph(unsigned long)
0010bf4c 00000068 T CTRPluginFramework::Font::GetGlyph(unsigned char*&)
0010bfb4 00000020 T CTRPluginFramework::Font::GetGlyph(char)
0010bfd4 0000002c W std::__cxx11::list<CTRPluginFramework::OSDImpl::OSDMessage*, std::allocator<CTRPluginFramework::OSDImpl::OSDMessage*> >::~list()
0010bfd4 0000002c W std::__cxx11::list<CTRPluginFramework::OSDImpl::OSDMessage*, std::allocator<CTRPluginFramework::OSDImpl::OSDMessage*> >::~list()
0010c000 00000020 W std::vector<bool (*)(CTRPluginFramework::Screen const&), std::allocator<bool (*)(CTRPluginFramework::Screen const&)> >::~vector()
0010c000 00000020 W std::vector<bool (*)(CTRPluginFramework::Screen const&), std::allocator<bool (*)(CTRPluginFramework::Screen const&)> >::~vector()
0010c020 000000b8 t CTRPluginFramework::memsearch(unsigned char*, void const*, unsigned long, unsigned long) [clone .constprop.32]
0010c0d8 00000054 t CTRPluginFramework::SearchStmfd(unsigned long, unsigned long, unsigned long, bool&) [clone .part.0] [clone .constprop.36]
0010c12c 0000009c T CTRPluginFramework::OSDImpl::OSDMessage::OSDMessage(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::Color const&, CTRPluginFramework::Color const&)
0010c12c 0000009c T CTRPluginFramework::OSDImpl::OSDMessage::OSDMessage(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::Color const&, CTRPluginFramework::Color const&)
0010c1c8 0000000c T CTRPluginFramework::OSDImpl::Lock()
0010c1d4 0000001c T CTRPluginFramework::OSDImpl::TryLock()
0010c1f0 0000000c T CTRPluginFramework::OSDImpl::Unlock()
0010c1fc 000000e4 T CTRPluginFramework::OSDImpl::Draw()
0010c2e0 000000d8 T CTRPluginFramework::OSDImpl::UpdateScreens()
0010c3b8 000001b8 T CTRPluginFramework::InstallOSD()
0010c570 00000028 T CTRPluginFramework::OSDImpl::_Initialize()
0010c598 000000e0 t _GLOBAL__sub_I__ZN18CTRPluginFramework7OSDImpl12DrawSaveIconE
0010c678 00000108 T CTRPluginFramework::OSDImpl::Update()
0010c780 00000618 T CTRPluginFramework::OSDImpl::CallbackGlobal(unsigned long, void*, void*, int, int)
0010cd98 00000068 T CTRPluginFramework::OSDImpl::MainCallback(unsigned long, int, void*, void*, int, int, int)
0010ce00 00000064 T CTRPluginFramework::OSDImpl::MainCallback2(unsigned long, unsigned long*, unsigned long, unsigned long)
0010ce64 0000002c T CTRPluginFramework::PrivColor::_ReadRGBA8(unsigned char*)
0010ce90 00000024 T CTRPluginFramework::PrivColor::_ReadBGR8(unsigned char*)
0010ceb4 00000038 T CTRPluginFramework::PrivColor::_ReadRGB565(unsigned char*)
0010ceec 00000038 T CTRPluginFramework::PrivColor::_ReadRGB5A1(unsigned char*)
0010cf24 00000030 T CTRPluginFramework::PrivColor::_ReadRGBA4(unsigned char*)
0010cf54 00000028 T CTRPluginFramework::PrivColor::_WriteRGBA8(unsigned char*, CTRPluginFramework::Color const&)
0010cf7c 00000020 T CTRPluginFramework::PrivColor::_WriteBGR8(unsigned char*, CTRPluginFramework::Color const&)
0010cf9c 0000003c T CTRPluginFramework::PrivColor::_WriteRGB565(unsigned char*, CTRPluginFramework::Color const&)
0010cfd8 00000048 T CTRPluginFramework::PrivColor::_WriteRGB5A1(unsigned char*, CTRPluginFramework::Color const&)
0010d020 00000044 T CTRPluginFramework::PrivColor::_WriteRGBA4(unsigned char*, CTRPluginFramework::Color const&)
0010d064 00000104 T CTRPluginFramework::PrivColor::SetFormat(GSPGPU_FramebufferFormats)
0010d168 0000003c T CTRPluginFramework::PrivColor::UseClamp(bool, CTRPluginFramework::Rect<int>)
0010d1a4 00000070 W CTRPluginFramework::Rect<int>::Contains(int, int) const
0010d214 00000084 T CTRPluginFramework::PrivColor::_WriteRGBA8Clamp(unsigned char*, CTRPluginFramework::Color const&)
0010d298 00000078 T CTRPluginFramework::PrivColor::_WriteBGR8Clamp(unsigned char*, CTRPluginFramework::Color const&)
0010d310 00000098 T CTRPluginFramework::PrivColor::_WriteRGB565Clamp(unsigned char*, CTRPluginFramework::Color const&)
0010d3a8 000000a4 T CTRPluginFramework::PrivColor::_WriteRGB5A1Clamp(unsigned char*, CTRPluginFramework::Color const&)
0010d44c 000000a0 T CTRPluginFramework::PrivColor::_WriteRGBA4Clamp(unsigned char*, CTRPluginFramework::Color const&)
0010d4ec 00000020 t _GLOBAL__sub_I__ZN18CTRPluginFramework9PrivColor15FromFramebufferE
0010d50c 0000003c T CTRPluginFramework::Renderer::SetTarget(CTRPluginFramework::Target)
0010d548 00000278 T CTRPluginFramework::Renderer::MenuSelector(int, int, int, int)
0010d7c0 00000120 T CTRPluginFramework::Renderer::EndFrame(bool)
0010d8e0 0000001c t _GLOBAL__sub_I__ZN18CTRPluginFramework8Renderer7_targetE
0010d8fc 00000044 t CTRPluginFramework::Line<int>* std::__uninitialized_move_if_noexcept_a<CTRPluginFramework::Line<int>*, CTRPluginFramework::Line<int>*, std::allocator<CTRPluginFramework::Line<int> > >(CTRPluginFramework::Line<int>*, CTRPluginFramework::Line<int>*, CTRPluginFramework::Line<int>*, std::allocator<CTRPluginFramework::Line<int> >&) [clone .isra.41]
0010d940 000000a8 T CTRPluginFramework::Renderer::DrawLine(int, int, int, CTRPluginFramework::Color const&, int)
0010d9e8 000000a8 T CTRPluginFramework::Renderer::DrawLine(CTRPluginFramework::Vector<int>&, CTRPluginFramework::Vector<int>&, CTRPluginFramework::Color const&)
0010da90 000000c0 T CTRPluginFramework::Renderer::DrawStippledLine(int, int, int, CTRPluginFramework::Color const&, int)
0010db50 00000094 T CTRPluginFramework::Renderer::DrawRect(int, int, int, int, CTRPluginFramework::Color const&, bool, int)
0010dbe4 000000a8 T CTRPluginFramework::Renderer::DrawRect(CTRPluginFramework::Rect<int> const&, CTRPluginFramework::Color const&, bool)
0010dc8c 00000054 T CTRPluginFramework::Renderer::DrawRect2(CTRPluginFramework::Rect<int> const&, CTRPluginFramework::Color const&, CTRPluginFramework::Color const&)
0010dce0 00000044 W std::_Deque_base<CTRPluginFramework::Vector<int>, std::allocator<CTRPluginFramework::Vector<int> > >::~_Deque_base()
0010dce0 00000044 W std::_Deque_base<CTRPluginFramework::Vector<int>, std::allocator<CTRPluginFramework::Vector<int> > >::~_Deque_base()
0010dd24 00000054 W std::deque<CTRPluginFramework::Vector<int>, std::allocator<CTRPluginFramework::Vector<int> > >::pop_front()
0010dd78 00000194 W void std::deque<CTRPluginFramework::Vector<int>, std::allocator<CTRPluginFramework::Vector<int> > >::emplace_back<CTRPluginFramework::Vector<int> >(CTRPluginFramework::Vector<int>&&)
0010df0c 000000b0 W void std::vector<CTRPluginFramework::Line<int>, std::allocator<CTRPluginFramework::Line<int> > >::_M_realloc_insert<CTRPluginFramework::Line<int> >(__gnu_cxx::__normal_iterator<CTRPluginFramework::Line<int>*, std::vector<CTRPluginFramework::Line<int>, std::allocator<CTRPluginFramework::Line<int> > > >, CTRPluginFramework::Line<int>&&)
0010dfbc 00000044 W void std::vector<CTRPluginFramework::Line<int>, std::allocator<CTRPluginFramework::Line<int> > >::emplace_back<CTRPluginFramework::Line<int> >(CTRPluginFramework::Line<int>&&)
0010e000 0000068c T CTRPluginFramework::Renderer::ComputeRoundedRectangle(std::vector<CTRPluginFramework::Line<int>, std::allocator<CTRPluginFramework::Line<int> > >&, CTRPluginFramework::Rect<int> const&, float, int)
0010e68c 0000003c T CTRPluginFramework::Renderer::DrawPixel(int, int, CTRPluginFramework::Color const&)
0010e6c8 00000140 T CTRPluginFramework::Renderer::DrawCharacter(int, int, int, CTRPluginFramework::Color const&)
0010e808 00000144 T CTRPluginFramework::Renderer::DrawCharacter(int, int, int, CTRPluginFramework::Color const&, CTRPluginFramework::Color const&)
0010e94c 000000c8 T CTRPluginFramework::Renderer::DrawString(char const*, int, int&, CTRPluginFramework::Color)
0010ea14 000001c4 T CTRPluginFramework::Renderer::DrawString(char const*, int, int&, CTRPluginFramework::Color, CTRPluginFramework::Color)
0010ebd8 00000030 T CTRPluginFramework::Renderer::LinuxFontSize(char const*)
0010ec08 00000130 T CTRPluginFramework::Renderer::FontCalcGlyphPos(fontGlyphPos_s*, charWidthInfo_s**, int, float, float)
0010ed38 000000d4 T CTRPluginFramework::Renderer::GetTextSize(char const*)
0010ee0c 0000014c T CTRPluginFramework::Renderer::GetTextInfos(char const*, int&, float&, float)
0010ef58 00000104 T CTRPluginFramework::Renderer::DrawGlyph(CTRPluginFramework::Glyph*, int, int, CTRPluginFramework::Color)
0010f05c 00000154 T CTRPluginFramework::Renderer::DrawGlyph(CTRPluginFramework::Glyph*, int, int, float&, CTRPluginFramework::Color)
0010f1b0 00000198 T CTRPluginFramework::Renderer::DrawSysStringReturn(unsigned char const*, int, int&, int, CTRPluginFramework::Color, int)
0010f348 000001ec T CTRPluginFramework::Renderer::DrawSysString(char const*, int, int&, int, CTRPluginFramework::Color, float, char const*)
0010f534 00000070 T CTRPluginFramework::Renderer::DrawSysCheckBox(char const*, int, int&, int, CTRPluginFramework::Color, bool, float)
0010f5a4 0000006c T CTRPluginFramework::Renderer::DrawSysFolder(char const*, int, int&, int, CTRPluginFramework::Color, float)
0010f610 00000024 t _GLOBAL__sub_I__ZN18CTRPluginFramework8Renderer16FontCalcGlyphPosEP14fontGlyphPos_sPP15charWidthInfo_siff
0010f634 00000028 T CTRPluginFramework::Window::~Window()
0010f634 00000028 T CTRPluginFramework::Window::~Window()
0010f65c 00000004 W CTRPluginFramework::IconButton<CTRPluginFramework::Window, void>::~IconButton()
0010f65c 00000004 W CTRPluginFramework::IconButton<CTRPluginFramework::Window, void>::~IconButton()
0010f660 0000001c W CTRPluginFramework::IconButton<CTRPluginFramework::Window, void>::Draw()
0010f67c 00000014 W CTRPluginFramework::IconButton<CTRPluginFramework::Window, void>::~IconButton()
0010f690 00000064 W CTRPluginFramework::IconButton<CTRPluginFramework::Window, void>::operator()()
0010f6f4 000000c8 T CTRPluginFramework::Window::Window(unsigned long, unsigned long, unsigned long, unsigned long, bool, CTRPluginFramework::BMPImage*)
0010f6f4 000000c8 T CTRPluginFramework::Window::Window(unsigned long, unsigned long, unsigned long, unsigned long, bool, CTRPluginFramework::BMPImage*)
0010f7bc 00000064 T CTRPluginFramework::Window::Draw() const
0010f820 000000d8 T CTRPluginFramework::Window::Draw(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const
0010f8f8 00000018 T CTRPluginFramework::Window::Update(bool, CTRPluginFramework::Vector<int> const&) const
0010f910 00000018 T CTRPluginFramework::Window::MustClose() const
0010f928 00000014 T CTRPluginFramework::Window::Close() const
0010f93c 00000004 T CTRPluginFramework::Window::GetRect() const
0010f940 0000002c T CTRPluginFramework::Window::Initialize()
0010f96c 00000080 W CTRPluginFramework::IconButton<CTRPluginFramework::Window, void>::Update(bool, CTRPluginFramework::Vector<int> const&)
0010f9ec 000000a8 t _GLOBAL__sub_I__ZN18CTRPluginFramework6Window12BottomWindowE
0010fa94 000001b0 W CTRPluginFramework::Icon::DrawImg(unsigned char*, int, int, int, int)
0010fc44 0000002c T CTRPluginFramework::Icon::DrawAbout(int, int)
0010fc70 0000003c T CTRPluginFramework::Icon::DrawCapsLockOn(int, int, bool)
0010fcac 0000003c T CTRPluginFramework::Icon::DrawCheckBox(int, int, bool)
0010fce8 0000003c T CTRPluginFramework::Icon::DrawClearSymbol(int, int, bool)
0010fd24 0000003c T CTRPluginFramework::Icon::DrawClipboard(int, int, bool)
0010fd60 0000003c T CTRPluginFramework::Icon::DrawClose(int, int, bool)
0010fd9c 0000002c T CTRPluginFramework::Icon::DrawController(int, int)
0010fdc8 0000003c T CTRPluginFramework::Icon::DrawCut(int, int, bool)
0010fe04 0000003c T CTRPluginFramework::Icon::DrawDuplicate(int, int, bool)
0010fe40 0000003c T CTRPluginFramework::Icon::DrawEdit(int, int, bool)
0010fe7c 0000003c T CTRPluginFramework::Icon::DrawEnterKey(int, int, bool)
0010feb8 0000002c T CTRPluginFramework::Icon::DrawFolder(int, int)
0010fee4 0000003c T CTRPluginFramework::Icon::DrawAddFavorite(int, int, bool)
0010ff20 0000002c T CTRPluginFramework::Icon::DrawFavorite(int, int)
0010ff4c 0000002c T CTRPluginFramework::Icon::DrawFile(int, int)
0010ff78 0000002c T CTRPluginFramework::Icon::DrawGameController(int, int)
0010ffa4 0000003c T CTRPluginFramework::Icon::DrawGameController(int, int, bool)
0010ffe0 0000002c T CTRPluginFramework::Icon::DrawGrid(int, int)
0011000c 0000003c T CTRPluginFramework::Icon::DrawInfo(int, int, bool)
00110048 0000002c T CTRPluginFramework::Icon::DrawGuide(int, int)
00110074 00000034 T CTRPluginFramework::Icon::DrawHandCursor(int, int)
001100a8 0000003c T CTRPluginFramework::Icon::DrawKeyboard(int, int, bool)
001100e4 0000002c T CTRPluginFramework::Icon::DrawMore(int, int)
00110110 0000003c T CTRPluginFramework::Icon::DrawPlus(int, int, bool)
0011014c 0000002c T CTRPluginFramework::Icon::DrawRAM(int, int)
00110178 0000002c T CTRPluginFramework::Icon::DrawRestart(int, int)
001101a4 0000002c T CTRPluginFramework::Icon::DrawRocket(int, int)
001101d0 0000002c T CTRPluginFramework::Icon::DrawSave(int, int)
001101fc 0000002c T CTRPluginFramework::Icon::DrawSearch(int, int)
00110228 0000002c T CTRPluginFramework::Icon::DrawSettings(int, int)
00110254 0000002c T CTRPluginFramework::Icon::DrawShutdown(int, int)
00110280 0000002c T CTRPluginFramework::Icon::DrawTools(int, int)
001102ac 0000003c T CTRPluginFramework::Icon::DrawTrash(int, int, bool)
001102e8 0000001c W CTRPluginFramework::IconButton<CTRPluginFramework::CheckBox, void>::Draw()
00110304 00000004 W CTRPluginFramework::IconButton<CTRPluginFramework::CheckBox, void>::~IconButton()
00110304 00000004 W CTRPluginFramework::IconButton<CTRPluginFramework::CheckBox, void>::~IconButton()
00110308 00000014 W CTRPluginFramework::IconButton<CTRPluginFramework::CheckBox, void>::~IconButton()
0011031c 00000064 W CTRPluginFramework::IconButton<CTRPluginFramework::CheckBox, void>::operator()()
00110380 00000084 t void __gnu_cxx::new_allocator<CTRPluginFramework::CheckBox>::construct<CTRPluginFramework::CheckBox, CTRPluginFramework::CheckBox>(CTRPluginFramework::CheckBox*, CTRPluginFramework::CheckBox&&) [clone .isra.16]
00110404 000000c8 t CTRPluginFramework::CheckBox* std::__uninitialized_move_if_noexcept_a<CTRPluginFramework::CheckBox*, CTRPluginFramework::CheckBox*, std::allocator<CTRPluginFramework::CheckBox> >(CTRPluginFramework::CheckBox*, CTRPluginFramework::CheckBox*, CTRPluginFramework::CheckBox*, std::allocator<CTRPluginFramework::CheckBox>&) [clone .isra.41]
001104cc 00000090 T CTRPluginFramework::HotkeysModifier::_DrawTop() const
0011055c 0000011c T CTRPluginFramework::HotkeysModifier::_DrawBottom()
00110678 00000070 T CTRPluginFramework::HotkeysModifier::_Update()
001106e8 000000a0 T CTRPluginFramework::HotkeysModifier::operator()()
00110788 0000002c W void std::_Destroy_aux<false>::__destroy<CTRPluginFramework::CheckBox*>(CTRPluginFramework::CheckBox*, CTRPluginFramework::CheckBox*)
001107b4 00000030 T CTRPluginFramework::HotkeysModifier::~HotkeysModifier()
001107b4 00000030 T CTRPluginFramework::HotkeysModifier::~HotkeysModifier()
001107e4 000000d4 W void std::vector<CTRPluginFramework::CheckBox, std::allocator<CTRPluginFramework::CheckBox> >::_M_realloc_insert<CTRPluginFramework::CheckBox>(__gnu_cxx::__normal_iterator<CTRPluginFramework::CheckBox*, std::vector<CTRPluginFramework::CheckBox, std::allocator<CTRPluginFramework::CheckBox> > >, CTRPluginFramework::CheckBox&&)
001108b8 0000003c W void std::vector<CTRPluginFramework::CheckBox, std::allocator<CTRPluginFramework::CheckBox> >::emplace_back<CTRPluginFramework::CheckBox>(CTRPluginFramework::CheckBox&&)
001108f4 0000011c T CTRPluginFramework::HotkeysModifier::HotkeysModifier(unsigned long&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
001108f4 0000011c T CTRPluginFramework::HotkeysModifier::HotkeysModifier(unsigned long&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
00110a10 00000080 W CTRPluginFramework::IconButton<CTRPluginFramework::CheckBox, void>::Update(bool, CTRPluginFramework::Vector<int> const&)
00110a90 00000078 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(char const*, std::allocator<char> const&) [clone .isra.47]
00110b08 000000a4 t CTRPluginFramework::TouchKey* std::__uninitialized_move_if_noexcept_a<CTRPluginFramework::TouchKey*, CTRPluginFramework::TouchKey*, std::allocator<CTRPluginFramework::TouchKey> >(CTRPluginFramework::TouchKey*, CTRPluginFramework::TouchKey*, CTRPluginFramework::TouchKey*, std::allocator<CTRPluginFramework::TouchKey>&) [clone .isra.69]
00110bac 00000144 T CTRPluginFramework::KeyboardImpl::KeyboardImpl(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
00110bac 00000144 T CTRPluginFramework::KeyboardImpl::KeyboardImpl(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
00110cf0 00000148 T CTRPluginFramework::KeyboardImpl::KeyboardImpl(CTRPluginFramework::Keyboard*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
00110cf0 00000148 T CTRPluginFramework::KeyboardImpl::KeyboardImpl(CTRPluginFramework::Keyboard*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
00110e38 00000064 T CTRPluginFramework::KeyboardImpl::~KeyboardImpl()
00110e38 00000064 T CTRPluginFramework::KeyboardImpl::~KeyboardImpl()
00110e9c 00000008 T CTRPluginFramework::KeyboardImpl::IsHexadecimal() const
00110ea4 00000008 T CTRPluginFramework::KeyboardImpl::SetMaxInput(int)
00110eac 00000008 T CTRPluginFramework::KeyboardImpl::GetInput[abi:cxx11]()
00110eb4 00000008 T CTRPluginFramework::KeyboardImpl::SetConvertCallback(void* (*)(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, bool))
00110ebc 00000008 T CTRPluginFramework::KeyboardImpl::SetCompareCallback(bool (*)(void const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&))
00110ec4 00000164 T CTRPluginFramework::KeyboardImpl::_RenderTop()
00111028 00000494 T CTRPluginFramework::KeyboardImpl::_RenderBottom()
001114bc 00000064 T CTRPluginFramework::UnitsToNextChar(char const*, int)
00111520 00000090 T CTRPluginFramework::UnitsToPreviousChar(char const*, int)
001115b0 00000080 T CTRPluginFramework::KeyboardImpl::_ScrollUp()
00111630 00000084 T CTRPluginFramework::KeyboardImpl::_ScrollDown()
001116b4 00000160 T CTRPluginFramework::KeyboardImpl::_UpdateScrollInfos()
00111814 00000280 T CTRPluginFramework::KeyboardImpl::_Update(float)
00111a94 0000057c T CTRPluginFramework::KeyboardImpl::_CheckKeys()
00112010 00000068 T CTRPluginFramework::KeyboardImpl::_CheckInput()
00112078 00000050 T CTRPluginFramework::KeyboardImpl::_CheckButtons(int&)
001120c8 00000070 T CTRPluginFramework::KeyboardImpl::operator()(int&)
00112138 00000008 T CTRPluginFramework::KeyboardImpl::CanChangeLayout(bool)
00112140 00000044 W std::_Deque_base<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >::~_Deque_base()
00112140 00000044 W std::_Deque_base<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >::~_Deque_base()
00112184 00000030 W std::vector<CTRPluginFramework::TouchKey, std::allocator<CTRPluginFramework::TouchKey> >::_M_range_check(unsigned int) const
001121b4 000000d8 W void std::vector<CTRPluginFramework::TouchKeyString*, std::allocator<CTRPluginFramework::TouchKeyString*> >::_M_realloc_insert<CTRPluginFramework::TouchKeyString*>(__gnu_cxx::__normal_iterator<CTRPluginFramework::TouchKeyString**, std::vector<CTRPluginFramework::TouchKeyString*, std::allocator<CTRPluginFramework::TouchKeyString*> > >, CTRPluginFramework::TouchKeyString*&&)
0011228c 000001cc T CTRPluginFramework::KeyboardImpl::Populate(std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&)
00112458 0000002c W void std::_Destroy_aux<false>::__destroy<CTRPluginFramework::TouchKey*>(CTRPluginFramework::TouchKey*, CTRPluginFramework::TouchKey*)
00112484 00000028 W std::vector<CTRPluginFramework::TouchKey, std::allocator<CTRPluginFramework::TouchKey> >::~vector()
00112484 00000028 W std::vector<CTRPluginFramework::TouchKey, std::allocator<CTRPluginFramework::TouchKey> >::~vector()
001124ac 0000011c W void std::vector<CTRPluginFramework::TouchKey, std::allocator<CTRPluginFramework::TouchKey> >::_M_realloc_insert<CTRPluginFramework::TouchKey>(__gnu_cxx::__normal_iterator<CTRPluginFramework::TouchKey*, std::vector<CTRPluginFramework::TouchKey, std::allocator<CTRPluginFramework::TouchKey> > >, CTRPluginFramework::TouchKey&&)
001125c8 00000090 W void std::vector<CTRPluginFramework::TouchKey, std::allocator<CTRPluginFramework::TouchKey> >::emplace_back<CTRPluginFramework::TouchKey>(CTRPluginFramework::TouchKey&&)
00112658 000008f4 T CTRPluginFramework::KeyboardImpl::_QwertyLowCase()
00112f4c 000008f4 T CTRPluginFramework::KeyboardImpl::_QwertyUpCase()
00113840 00001344 T CTRPluginFramework::KeyboardImpl::_QwertySymbols()
00114b84 00001740 T CTRPluginFramework::KeyboardImpl::_QwertyNintendo()
001162c4 00000044 T CTRPluginFramework::KeyboardImpl::_Qwerty()
00116308 00000254 T CTRPluginFramework::KeyboardImpl::_DigitKeyboard(std::vector<CTRPluginFramework::TouchKey, std::allocator<CTRPluginFramework::TouchKey> >&)
0011655c 00000050 T CTRPluginFramework::KeyboardImpl::_Decimal()
001165ac 00000068 T CTRPluginFramework::KeyboardImpl::_Hexadecimal()
00116614 00000048 T CTRPluginFramework::KeyboardImpl::SetLayout(CTRPluginFramework::Layout)
0011665c 00000324 T CTRPluginFramework::KeyboardImpl::_ProcessEvent(CTRPluginFramework::Event&)
00116980 00000250 T CTRPluginFramework::KeyboardImpl::Run()
00116bd0 00000078 t _GLOBAL__sub_I__ZN18CTRPluginFramework12KeyboardImpl12_DecimalKeysE
00116c48 00000008 W CTRPluginFramework::MenuItem::GetNote[abi:cxx11]()
00116c50 00000014 T CTRPluginFramework::MenuEntryImpl::Disable()
00116c64 00000028 W CTRPluginFramework::MenuItem::~MenuItem()
00116c64 00000028 W CTRPluginFramework::MenuItem::~MenuItem()
00116c8c 00000028 T CTRPluginFramework::MenuEntryImpl::~MenuEntryImpl()
00116c8c 00000028 T CTRPluginFramework::MenuEntryImpl::~MenuEntryImpl()
00116cb4 0000001c W CTRPluginFramework::MenuItem::~MenuItem()
00116cd0 0000001c T CTRPluginFramework::MenuEntryImpl::~MenuEntryImpl()
00116cec 00000118 T CTRPluginFramework::MenuEntryImpl::GetNote[abi:cxx11]()
00116e04 000000d8 T CTRPluginFramework::MenuEntryImpl::MenuEntryImpl(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::MenuEntry*)
00116e04 000000d8 T CTRPluginFramework::MenuEntryImpl::MenuEntryImpl(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::MenuEntry*)
00116edc 000000dc T CTRPluginFramework::MenuEntryImpl::MenuEntryImpl(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, void (*)(CTRPluginFramework::MenuEntry*), std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::MenuEntry*)
00116edc 000000dc T CTRPluginFramework::MenuEntryImpl::MenuEntryImpl(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, void (*)(CTRPluginFramework::MenuEntry*), std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::MenuEntry*)
00116fb8 00000008 T CTRPluginFramework::MenuEntryImpl::GetArg() const
00116fc0 0000000c T CTRPluginFramework::MenuEntryImpl::IsActivated() const
00116fcc 00000008 T CTRPluginFramework::MenuEntryImpl::AsMenuEntry() const
00116fd4 00000024 T CTRPluginFramework::MenuEntryImpl::_TriggerState()
00116ff8 00000030 T CTRPluginFramework::MenuEntryImpl::Enable()
00117028 0000001c T CTRPluginFramework::MenuEntryImpl::_MustBeRemoved() const
00117044 00000068 T CTRPluginFramework::MenuEntryImpl::_Execute()
001170ac 000000cc T CTRPluginFramework::MenuFolderImpl::~MenuFolderImpl()
001170ac 000000cc T CTRPluginFramework::MenuFolderImpl::~MenuFolderImpl()
00117178 0000001c T CTRPluginFramework::MenuFolderImpl::~MenuFolderImpl()
00117194 000000bc T CTRPluginFramework::MenuFolderImpl::MenuFolderImpl(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
00117194 000000bc T CTRPluginFramework::MenuFolderImpl::MenuFolderImpl(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
00117250 000000c0 T CTRPluginFramework::MenuFolderImpl::MenuFolderImpl(CTRPluginFramework::MenuFolder*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
00117250 000000c0 T CTRPluginFramework::MenuFolderImpl::MenuFolderImpl(CTRPluginFramework::MenuFolder*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
00117310 00000014 T CTRPluginFramework::MenuFolderImpl::ItemsCount() const
00117324 00000050 T CTRPluginFramework::MenuFolderImpl::GetItem(unsigned long)
00117374 00000018 T CTRPluginFramework::MenuFolderImpl::operator[](int)
0011738c 00000024 T CTRPluginFramework::MenuFolderImpl::HasParent()
001173b0 00000010 T CTRPluginFramework::MenuFolderImpl::_Open(CTRPluginFramework::MenuFolderImpl*, int, bool)
001173c0 00000024 T CTRPluginFramework::MenuFolderImpl::_Close(int&, bool)
001173e4 000000d8 W void std::vector<CTRPluginFramework::MenuItem*, std::allocator<CTRPluginFramework::MenuItem*> >::_M_realloc_insert<CTRPluginFramework::MenuItem* const&>(__gnu_cxx::__normal_iterator<CTRPluginFramework::MenuItem**, std::vector<CTRPluginFramework::MenuItem*, std::allocator<CTRPluginFramework::MenuItem*> > >, CTRPluginFramework::MenuItem* const&)
001174bc 00000060 T CTRPluginFramework::MenuFolderImpl::Append(CTRPluginFramework::MenuItem*, bool)
0011751c 00000010 T CTRPluginFramework::MenuItem::NoteChanged()
0011752c 00000010 T CTRPluginFramework::MenuItem::HasNoteChanged() const
0011753c 00000010 T CTRPluginFramework::MenuItem::HandledNoteChanges()
0011754c 00000004 W CTRPluginFramework::ToggleButton<CTRPluginFramework::PluginMenuActionReplay, void>::~ToggleButton()
0011754c 00000004 W CTRPluginFramework::ToggleButton<CTRPluginFramework::PluginMenuActionReplay, void>::~ToggleButton()
00117550 00000004 W CTRPluginFramework::IconButton<CTRPluginFramework::PluginMenuActionReplay, void>::~IconButton()
00117550 00000004 W CTRPluginFramework::IconButton<CTRPluginFramework::PluginMenuActionReplay, void>::~IconButton()
00117554 0000001c W CTRPluginFramework::ToggleButton<CTRPluginFramework::PluginMenuActionReplay, void>::Draw()
00117570 0000001c W CTRPluginFramework::IconButton<CTRPluginFramework::PluginMenuActionReplay, void>::Draw()
0011758c 00000014 W CTRPluginFramework::ToggleButton<CTRPluginFramework::PluginMenuActionReplay, void>::~ToggleButton()
001175a0 00000014 W CTRPluginFramework::IconButton<CTRPluginFramework::PluginMenuActionReplay, void>::~IconButton()
001175b4 00000028 T CTRPluginFramework::PluginMenuActionReplay::_PasteBtn_OnClick()
001175dc 00000064 W CTRPluginFramework::ToggleButton<CTRPluginFramework::PluginMenuActionReplay, void>::operator()()
00117640 00000064 W CTRPluginFramework::IconButton<CTRPluginFramework::PluginMenuActionReplay, void>::operator()()
001176a4 00000028 t CTRPluginFramework::ActionReplay_GetInput(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)::{lambda(void const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)#1}::_FUN(void const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)
001176cc 00000024 T CTRPluginFramework::PluginMenuActionReplay::_CutBtn_OnClick()
001176f0 00000078 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(char const*, std::allocator<char> const&) [clone .isra.55]
00117768 0000006c t CTRPluginFramework::ActionReplay_GetInput(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)
001177d4 000000d4 T CTRPluginFramework::PluginMenuActionReplay::_TrashBtn_OnClick()
001178a8 000000a0 t void std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::_M_range_initialize<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const*>(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const*, std::forward_iterator_tag) [clone .isra.65]
00117948 00000268 T CTRPluginFramework::PluginMenuActionReplay::PluginMenuActionReplay()
00117948 00000268 T CTRPluginFramework::PluginMenuActionReplay::PluginMenuActionReplay()
00117bb0 00000014 T CTRPluginFramework::PluginMenuActionReplay::Initialize()
00117bc4 00000058 T CTRPluginFramework::PluginMenuActionReplay::_DrawBottom()
00117c1c 00000054 T CTRPluginFramework::PluginMenuActionReplay::_ProcessEvent(std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >&)
00117c70 00000120 T CTRPluginFramework::PluginMenuActionReplay::SaveCodes()
00117d90 0000003c W std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::~vector()
00117d90 0000003c W std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::~vector()
00117dcc 00000174 T CTRPluginFramework::PluginMenuActionReplay::_NewBtn_OnClick()
00117f40 00000080 W CTRPluginFramework::ToggleButton<CTRPluginFramework::PluginMenuActionReplay, void>::Update(bool, CTRPluginFramework::Vector<int> const&)
00117fc0 00000080 W CTRPluginFramework::IconButton<CTRPluginFramework::PluginMenuActionReplay, void>::Update(bool, CTRPluginFramework::Vector<int> const&)
00118040 00000160 T CTRPluginFramework::PluginMenuActionReplay::_Update(CTRPluginFramework::Time const&)
001181a0 000000a8 T CTRPluginFramework::PluginMenuActionReplay::operator()(std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >&, CTRPluginFramework::Time const&)
00118248 00000184 W void std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::_M_realloc_insert<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >(__gnu_cxx::__normal_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&&)
001183cc 00000188 T CTRPluginFramework::PluginMenuActionReplay::_EditorBtn_OnClick()
00118554 0000000c W void std::_Destroy<CTRPluginFramework::ARCode>(CTRPluginFramework::ARCode*)
00118560 00000184 W void std::vector<CTRPluginFramework::ARCode, std::allocator<CTRPluginFramework::ARCode> >::_M_realloc_insert<CTRPluginFramework::ARCode>(__gnu_cxx::__normal_iterator<CTRPluginFramework::ARCode*, std::vector<CTRPluginFramework::ARCode, std::allocator<CTRPluginFramework::ARCode> > >, CTRPluginFramework::ARCode&&)
001186e4 00000044 W void std::vector<CTRPluginFramework::ARCode, std::allocator<CTRPluginFramework::ARCode> >::emplace_back<CTRPluginFramework::ARCode>(CTRPluginFramework::ARCode&&)
00118728 00000030 W unsigned long* std::__copy_move<false, true, std::random_access_iterator_tag>::__copy_m<unsigned long>(unsigned long const*, unsigned long const*, unsigned long*)
00118758 000000d4 W std::vector<unsigned long, std::allocator<unsigned long> >::operator=(std::vector<unsigned long, std::allocator<unsigned long> > const&)
0011882c 00000088 W CTRPluginFramework::ARCode* std::__copy_move<false, false, std::random_access_iterator_tag>::__copy_m<CTRPluginFramework::ARCode const*, CTRPluginFramework::ARCode*>(CTRPluginFramework::ARCode const*, CTRPluginFramework::ARCode const*, CTRPluginFramework::ARCode*)
001188b4 00000174 W std::vector<CTRPluginFramework::ARCode, std::allocator<CTRPluginFramework::ARCode> >::operator=(std::vector<CTRPluginFramework::ARCode, std::allocator<CTRPluginFramework::ARCode> > const&)
00118a28 00000070 T CTRPluginFramework::PluginMenuActionReplay::_DuplicateBtn_OnClick()
00118a98 00000030 W CTRPluginFramework::ARCode::~ARCode()
00118a98 00000030 W CTRPluginFramework::ARCode::~ARCode()
00118ac8 00000144 T CTRPluginFramework::PluginMenuActionReplay::NewARCode(unsigned char, unsigned long, unsigned long)
00118c0c 0000001c W CTRPluginFramework::ARCode::~ARCode()
00118c28 00000058 t CTRPluginFramework::PluginMenuExecuteLoop::Add(CTRPluginFramework::MenuEntryImpl*)::{lambda(CTRPluginFramework::MenuEntryImpl*)#1}::operator()(CTRPluginFramework::MenuEntryImpl*) const [clone .isra.4]
00118c80 0000002c T CTRPluginFramework::PluginMenuExecuteLoop::PluginMenuExecuteLoop()
00118c80 0000002c T CTRPluginFramework::PluginMenuExecuteLoop::PluginMenuExecuteLoop()
00118cac 0000000c T CTRPluginFramework::PluginMenuExecuteLoop::Lock()
00118cb8 0000000c T CTRPluginFramework::PluginMenuExecuteLoop::Unlock()
00118cc4 0000011c T CTRPluginFramework::PluginMenuExecuteLoop::RemoveAR(CTRPluginFramework::MenuEntryActionReplay*)
00118de0 0000003c T CTRPluginFramework::PluginMenuExecuteLoop::ExecuteAR()
00118e1c 0000000c T CTRPluginFramework::PluginMenuExecuteLoop::LockAR()
00118e28 0000000c T CTRPluginFramework::PluginMenuExecuteLoop::UnlockAR()
00118e34 00000020 T CTRPluginFramework::PluginMenuExecuteLoop::InitLocks()
00118e54 000000d8 W void std::vector<unsigned long, std::allocator<unsigned long> >::_M_realloc_insert<unsigned long const&>(__gnu_cxx::__normal_iterator<unsigned long*, std::vector<unsigned long, std::allocator<unsigned long> > >, unsigned long const&)
00118f2c 0000019c T CTRPluginFramework::PluginMenuExecuteLoop::WriteEnabledCheatsToFile(CTRPluginFramework::Preferences::HeaderV1&, CTRPluginFramework::File&)
001190c8 00000054 W std::vector<CTRPluginFramework::MenuEntryImpl*, std::allocator<CTRPluginFramework::MenuEntryImpl*> >::_M_erase(__gnu_cxx::__normal_iterator<CTRPluginFramework::MenuEntryImpl**, std::vector<CTRPluginFramework::MenuEntryImpl*, std::allocator<CTRPluginFramework::MenuEntryImpl*> > >, __gnu_cxx::__normal_iterator<CTRPluginFramework::MenuEntryImpl**, std::vector<CTRPluginFramework::MenuEntryImpl*, std::allocator<CTRPluginFramework::MenuEntryImpl*> > >)
0011911c 00000160 T CTRPluginFramework::PluginMenuExecuteLoop::operator()()
0011927c 00000018 T CTRPluginFramework::PluginMenuExecuteLoop::ExecuteBuiltin()
00119294 00000124 T CTRPluginFramework::PluginMenuExecuteLoop::Remove(CTRPluginFramework::MenuEntryImpl*)
001193b8 000000d8 W void std::vector<CTRPluginFramework::MenuEntryImpl*, std::allocator<CTRPluginFramework::MenuEntryImpl*> >::_M_realloc_insert<CTRPluginFramework::MenuEntryImpl* const&>(__gnu_cxx::__normal_iterator<CTRPluginFramework::MenuEntryImpl**, std::vector<CTRPluginFramework::MenuEntryImpl*, std::allocator<CTRPluginFramework::MenuEntryImpl*> > >, CTRPluginFramework::MenuEntryImpl* const&)
00119490 000001bc T CTRPluginFramework::PluginMenuExecuteLoop::Add(CTRPluginFramework::MenuEntryImpl*)
0011964c 000000d8 W void std::vector<CTRPluginFramework::MenuEntryActionReplay*, std::allocator<CTRPluginFramework::MenuEntryActionReplay*> >::_M_realloc_insert<CTRPluginFramework::MenuEntryActionReplay* const&>(__gnu_cxx::__normal_iterator<CTRPluginFramework::MenuEntryActionReplay**, std::vector<CTRPluginFramework::MenuEntryActionReplay*, std::allocator<CTRPluginFramework::MenuEntryActionReplay*> > >, CTRPluginFramework::MenuEntryActionReplay* const&)
00119724 00000084 T CTRPluginFramework::PluginMenuExecuteLoop::AddAR(CTRPluginFramework::MenuEntryActionReplay*)
001197a8 00000214 W CTRPluginFramework::Button<CTRPluginFramework::PluginMenuHome, void>::Draw()
001199bc 00000204 W CTRPluginFramework::CheckedButton<CTRPluginFramework::PluginMenuHome, void>::Draw()
00119bc0 00000204 W CTRPluginFramework::CheckedButton<CTRPluginFramework::PluginMenuSearch, void>::Draw()
00119dc4 00000214 W CTRPluginFramework::Button<CTRPluginFramework::PluginMenuSearch, void>::Draw()
00119fd8 00000058 W CTRPluginFramework::CheckedButton<CTRPluginFramework::PluginMenuSearch, void>::operator()()
0011a030 00000074 W CTRPluginFramework::Button<CTRPluginFramework::PluginMenuSearch, void>::operator()()
0011a0a4 00000074 W CTRPluginFramework::Button<CTRPluginFramework::PluginMenuHome, void>::operator()()
0011a118 00000058 W CTRPluginFramework::CheckedButton<CTRPluginFramework::PluginMenuHome, void>::operator()()
0011a170 00000088 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(char const*, std::allocator<char> const&) [clone .isra.115]
0011a1f8 0000000c t std::_Vector_base<CTRPluginFramework::Line<int>, std::allocator<CTRPluginFramework::Line<int> > >::_M_deallocate(CTRPluginFramework::Line<int>*, unsigned int) [clone .isra.118]
0011a204 00000028 W CTRPluginFramework::Button<CTRPluginFramework::PluginMenuSearch, void>::~Button()
0011a204 00000028 W CTRPluginFramework::Button<CTRPluginFramework::PluginMenuSearch, void>::~Button()
0011a22c 0000001c W CTRPluginFramework::Button<CTRPluginFramework::PluginMenuSearch, void>::~Button()
0011a248 00000094 t CTRPluginFramework::Preferences::HotkeysInfos* std::__uninitialized_move_if_noexcept_a<CTRPluginFramework::Preferences::HotkeysInfos*, CTRPluginFramework::Preferences::HotkeysInfos*, std::allocator<CTRPluginFramework::Preferences::HotkeysInfos> >(CTRPluginFramework::Preferences::HotkeysInfos*, CTRPluginFramework::Preferences::HotkeysInfos*, CTRPluginFramework::Preferences::HotkeysInfos*, std::allocator<CTRPluginFramework::Preferences::HotkeysInfos>&) [clone .isra.174]
0011a2dc 00000028 W CTRPluginFramework::CheckedButton<CTRPluginFramework::PluginMenuSearch, void>::~CheckedButton()
0011a2dc 00000028 W CTRPluginFramework::CheckedButton<CTRPluginFramework::PluginMenuSearch, void>::~CheckedButton()
0011a304 0000001c W CTRPluginFramework::CheckedButton<CTRPluginFramework::PluginMenuSearch, void>::~CheckedButton()
0011a320 00000028 W CTRPluginFramework::CheckedButton<CTRPluginFramework::PluginMenuHome, void>::~CheckedButton()
0011a320 00000028 W CTRPluginFramework::CheckedButton<CTRPluginFramework::PluginMenuHome, void>::~CheckedButton()
0011a348 0000001c W CTRPluginFramework::CheckedButton<CTRPluginFramework::PluginMenuHome, void>::~CheckedButton()
0011a364 00000028 W CTRPluginFramework::Button<CTRPluginFramework::PluginMenuHome, void>::~Button()
0011a364 00000028 W CTRPluginFramework::Button<CTRPluginFramework::PluginMenuHome, void>::~Button()
0011a38c 0000001c W CTRPluginFramework::Button<CTRPluginFramework::PluginMenuHome, void>::~Button()
0011a3a8 00000020 W CTRPluginFramework::KeySequenceImpl::~KeySequenceImpl()
0011a3a8 00000020 W CTRPluginFramework::KeySequenceImpl::~KeySequenceImpl()
0011a3c8 00000030 W CTRPluginFramework::TextBox::~TextBox()
0011a3c8 00000030 W CTRPluginFramework::TextBox::~TextBox()
0011a3f8 0000001c W CTRPluginFramework::TextBox::~TextBox()
0011a414 000000f0 T CTRPluginFramework::PluginMenuImpl::PluginMenuImpl(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)
0011a414 000000f0 T CTRPluginFramework::PluginMenuImpl::PluginMenuImpl(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)
0011a504 00000008 T CTRPluginFramework::PluginMenuImpl::Append(CTRPluginFramework::MenuItem*) const
0011a50c 00000094 W CTRPluginFramework::KeySequenceImpl::KeySequenceImpl(std::vector<CTRPluginFramework::Key, std::allocator<CTRPluginFramework::Key> >)
0011a50c 00000094 W CTRPluginFramework::KeySequenceImpl::KeySequenceImpl(std::vector<CTRPluginFramework::Key, std::allocator<CTRPluginFramework::Key> >)
0011a5a0 00000020 T CTRPluginFramework::PluginMenuImpl::Close(CTRPluginFramework::MenuFolderImpl*)
0011a5c0 0000018c T CTRPluginFramework::PluginMenuImpl::LoadHotkeysFromFile(CTRPluginFramework::Preferences::HeaderV1 const&, CTRPluginFramework::File&)
0011a74c 00000020 T CTRPluginFramework::PluginMenuImpl::GetRegionsList(std::vector<CTRPluginFramework::Region, std::allocator<CTRPluginFramework::Region> >&)
0011a76c 0000001c T CTRPluginFramework::PluginMenuImpl::ForceExit()
0011a788 0000001c T CTRPluginFramework::PluginMenuImpl::ForceOpen()
0011a7a4 00000008 T CTRPluginFramework::PluginMenuImpl::IsOpen() const
0011a7ac 00000008 T CTRPluginFramework::PluginMenuImpl::AddPluginVersion(unsigned long) const
0011a7b4 00000020 W std::_Vector_base<unsigned long, std::allocator<unsigned long> >::~_Vector_base()
0011a7b4 00000020 W std::_Vector_base<unsigned long, std::allocator<unsigned long> >::~_Vector_base()
0011a7d4 000000f4 W void std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >::_M_realloc_insert<CTRPluginFramework::Event const&>(__gnu_cxx::__normal_iterator<CTRPluginFramework::Event*, std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> > >, CTRPluginFramework::Event const&)
0011a8c8 0000075c T CTRPluginFramework::PluginMenuImpl::Run()
0011b024 00000058 W std::vector<unsigned long, std::allocator<unsigned long> >::_M_check_len(unsigned int, char const*) const
0011b07c 00000030 W unsigned long* std::__copy_move<true, true, std::random_access_iterator_tag>::__copy_m<unsigned long>(unsigned long const*, unsigned long const*, unsigned long*)
0011b0ac 000000c4 W std::vector<unsigned long, std::allocator<unsigned long> >::_M_default_append(unsigned int)
0011b170 00000034 W std::vector<unsigned long, std::allocator<unsigned long> >::resize(unsigned int)
0011b1a4 00000130 T CTRPluginFramework::PluginMenuImpl::LoadEnabledCheatsFromFile(CTRPluginFramework::Preferences::HeaderV1 const&, CTRPluginFramework::File&)
0011b2d4 0000013c T CTRPluginFramework::PluginMenuImpl::LoadFavoritesFromFile(CTRPluginFramework::Preferences::HeaderV1 const&, CTRPluginFramework::File&)
0011b410 000000c4 W std::vector<unsigned long, std::allocator<unsigned long> >::push_back(unsigned long const&)
0011b4d4 00000108 T CTRPluginFramework::PluginMenuImpl::WriteFavoritesToFile(CTRPluginFramework::Preferences::HeaderV1&, CTRPluginFramework::File&)
0011b5dc 00000068 W std::vector<unsigned long, std::allocator<unsigned long> >::vector(std::vector<unsigned long, std::allocator<unsigned long> > const&)
0011b5dc 00000068 W std::vector<unsigned long, std::allocator<unsigned long> >::vector(std::vector<unsigned long, std::allocator<unsigned long> > const&)
0011b644 000000fc W void std::vector<CTRPluginFramework::Preferences::HotkeysInfos, std::allocator<CTRPluginFramework::Preferences::HotkeysInfos> >::_M_realloc_insert<CTRPluginFramework::Preferences::HotkeysInfos const&>(__gnu_cxx::__normal_iterator<CTRPluginFramework::Preferences::HotkeysInfos*, std::vector<CTRPluginFramework::Preferences::HotkeysInfos, std::allocator<CTRPluginFramework::Preferences::HotkeysInfos> > >, CTRPluginFramework::Preferences::HotkeysInfos const&)
0011b740 00000140 T CTRPluginFramework::PluginMenuImpl::ExtractHotkeys(std::vector<CTRPluginFramework::Preferences::HotkeysInfos, std::allocator<CTRPluginFramework::Preferences::HotkeysInfos> >&, CTRPluginFramework::MenuFolderImpl*, unsigned long&)
0011b880 00000198 T CTRPluginFramework::PluginMenuImpl::WriteHotkeysToFile(CTRPluginFramework::Preferences::HeaderV1&, CTRPluginFramework::File&)
0011ba18 00000080 W CTRPluginFramework::Button<CTRPluginFramework::PluginMenuHome, void>::Update(bool, CTRPluginFramework::Vector<int> const&)
0011ba98 00000074 W CTRPluginFramework::CheckedButton<CTRPluginFramework::PluginMenuHome, void>::Update(bool, CTRPluginFramework::Vector<int> const&)
0011bb0c 00000074 W CTRPluginFramework::CheckedButton<CTRPluginFramework::PluginMenuSearch, void>::Update(bool, CTRPluginFramework::Vector<int> const&)
0011bb80 00000080 W CTRPluginFramework::Button<CTRPluginFramework::PluginMenuSearch, void>::Update(bool, CTRPluginFramework::Vector<int> const&)
0011bc00 00000078 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(char const*, std::allocator<char> const&) [clone .isra.57]
0011bc78 00000044 T CTRPluginFramework::PluginMenuSearch::_ProcessEvent(CTRPluginFramework::Event&)
0011bcbc 0000013c T CTRPluginFramework::PluginMenuSearch::_RenderBottom()
0011bdf8 00000068 T CTRPluginFramework::PluginMenuSearch::_Update(CTRPluginFramework::Time)
0011be60 0000016c T CTRPluginFramework::PluginMenuSearch::_PopulateSearchType(bool)
0011bfcc 00000050 T CTRPluginFramework::PluginMenuSearch::_cancelBtn_OnClick()
0011c01c 000000ac W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > __gnu_cxx::__to_xstring<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, char>(int (*)(char*, unsigned int, char const*, std::__va_list), unsigned int, char const*, ...)
0011c0c8 000004cc T CTRPluginFramework::PluginMenuSearch::_ShowProgressWindow() const
0011c594 00000070 T CTRPluginFramework::PluginMenuSearch::_RenderTop()
0011c604 000000f4 t CTRPluginFramework::ClearSearchFolder()
0011c6f8 00000158 W CTRPluginFramework::Button<CTRPluginFramework::PluginMenuSearch, void>::Button(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::PluginMenuSearch&, void (CTRPluginFramework::PluginMenuSearch::*)(), CTRPluginFramework::Rect<int>, int (*)(int, int))
0011c6f8 00000158 W CTRPluginFramework::Button<CTRPluginFramework::PluginMenuSearch, void>::Button(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::PluginMenuSearch&, void (CTRPluginFramework::PluginMenuSearch::*)(), CTRPluginFramework::Rect<int>, int (*)(int, int))
0011c850 0000005c W CTRPluginFramework::Button<CTRPluginFramework::PluginMenuSearch, void>::UseSysFont(bool)
0011c8ac 00000640 T CTRPluginFramework::PluginMenuSearch::PluginMenuSearch(CTRPluginFramework::HexEditor&)
0011c8ac 00000640 T CTRPluginFramework::PluginMenuSearch::PluginMenuSearch(CTRPluginFramework::HexEditor&)
0011ceec 00000034 W std::__cxx11::list<CTRPluginFramework::Search*, std::allocator<CTRPluginFramework::Search*> >::push_back(CTRPluginFramework::Search* const&)
0011cf20 00000220 T CTRPluginFramework::PluginMenuSearch::RestoreSearchState()
0011d140 00000028 W std::__cxx11::list<CTRPluginFramework::Search*, std::allocator<CTRPluginFramework::Search*> >::pop_back()
0011d168 00000068 T CTRPluginFramework::PluginMenuSearch::_undoBtn_OnClick()
0011d1d0 00000030 W CTRPluginFramework::Region* std::__copy_move<false, true, std::random_access_iterator_tag>::__copy_m<CTRPluginFramework::Region>(CTRPluginFramework::Region const*, CTRPluginFramework::Region const*, CTRPluginFramework::Region*)
0011d200 000000d4 W std::vector<CTRPluginFramework::Region, std::allocator<CTRPluginFramework::Region> >::operator=(std::vector<CTRPluginFramework::Region, std::allocator<CTRPluginFramework::Region> > const&)
0011d2d4 000000ac W void std::vector<CTRPluginFramework::Region, std::allocator<CTRPluginFramework::Region> >::_M_realloc_insert<CTRPluginFramework::Region const&>(__gnu_cxx::__normal_iterator<CTRPluginFramework::Region*, std::vector<CTRPluginFramework::Region, std::allocator<CTRPluginFramework::Region> > >, CTRPluginFramework::Region const&)
0011d380 00000040 W std::vector<CTRPluginFramework::Region, std::allocator<CTRPluginFramework::Region> >::push_back(CTRPluginFramework::Region const&)
0011d3c0 0000026c T CTRPluginFramework::PluginMenuSearch::_ListRegion()
0011d62c 00000388 T CTRPluginFramework::PluginMenuSearch::operator()(std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >&, CTRPluginFramework::Time&)
0011d9b4 000000dc T CTRPluginFramework::PluginMenuSearch::_resetBtn_OnClick()
0011da90 00000038 T CTRPluginFramework::PluginMenuSearch::GetRegionsList(std::vector<CTRPluginFramework::Region, std::allocator<CTRPluginFramework::Region> >&)
0011dac8 0000027c T CTRPluginFramework::PluginMenuSearch::_searchBtn_OnClick()
0011dd44 00000014 t CTRPluginFramework::PluginMenuTools::InitMenu()::{lambda()#1}::_FUN()
0011dd58 00000014 t CTRPluginFramework::PluginMenuTools::InitMenu()::{lambda()#2}::_FUN()
0011dd6c 00000014 t CTRPluginFramework::PluginMenuTools::InitMenu()::{lambda()#3}::_FUN()
0011dd80 00000114 t CTRPluginFramework::FsTryOpenFileCallback(unsigned long, unsigned short*, unsigned long)
0011de94 00000004 t CTRPluginFramework::PluginMenuTools::InitMenu()::{lambda()#13}::_FUN()
0011de98 00000004 t CTRPluginFramework::PluginMenuTools::InitMenu()::{lambda()#14}::_FUN()
0011de9c 00000018 t CTRPluginFramework::PluginMenuTools::InitMenu()::{lambda()#4}::_FUN()
0011deb4 00000018 t CTRPluginFramework::PluginMenuTools::InitMenu()::{lambda()#5}::_FUN()
0011decc 00000018 t CTRPluginFramework::PluginMenuTools::InitMenu()::{lambda()#6}::_FUN()
0011dee4 00000018 t CTRPluginFramework::PluginMenuTools::InitMenu()::{lambda()#7}::_FUN()
0011defc 00000018 t CTRPluginFramework::PluginMenuTools::InitMenu()::{lambda()#8}::_FUN()
0011df14 00000018 t CTRPluginFramework::PluginMenuTools::InitMenu()::{lambda()#9}::_FUN()
0011df2c 00000018 t CTRPluginFramework::PluginMenuTools::InitMenu()::{lambda()#10}::_FUN()
0011df44 00000018 t CTRPluginFramework::PluginMenuTools::InitMenu()::{lambda()#11}::_FUN()
0011df5c 00000018 t CTRPluginFramework::PluginMenuTools::InitMenu()::{lambda()#12}::_FUN()
0011df74 00000078 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(char const*, std::allocator<char> const&) [clone .isra.49]
0011dfec 00000064 t CTRPluginFramework::MenuHotkeyModifier()
0011e050 00000120 t CTRPluginFramework::ConfirmBeforeProceed(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
0011e170 0000005c t CTRPluginFramework::Reboot()
0011e1cc 00000064 t CTRPluginFramework::Shutdown()
0011e230 000000f8 t CTRPluginFramework::FindFunction(unsigned long&) [clone .constprop.62]
0011e328 00000140 t CTRPluginFramework::_DisplayLoadedFiles(CTRPluginFramework::MenuEntryTools*)
0011e468 000001c8 t CTRPluginFramework::_WriteLoadedFiles(CTRPluginFramework::MenuEntryTools*)
0011e630 000001f4 T CTRPluginFramework::PluginMenuTools::UpdateSettings()
0011e824 000007fc T CTRPluginFramework::PluginMenuTools::InitMenu()
0011f020 00000154 T CTRPluginFramework::PluginMenuTools::PluginMenuTools(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, CTRPluginFramework::HexEditor&)
0011f020 00000154 T CTRPluginFramework::PluginMenuTools::PluginMenuTools(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, CTRPluginFramework::HexEditor&)
0011f174 0000010c T CTRPluginFramework::PluginMenuTools::_ProcessEvent(CTRPluginFramework::Event&)
0011f280 000000a4 T CTRPluginFramework::PluginMenuTools::_RenderBottom()
0011f324 00000040 T CTRPluginFramework::PluginMenuTools::_Update(CTRPluginFramework::Time)
0011f364 0000003c t _GLOBAL__sub_I__ZN18CTRPluginFramework15PluginMenuToolsC2ERNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERNS_9HexEditorE
0011f3a0 0000003c T CTRPluginFramework::PluginMenuTools::_RenderTop()
0011f3dc 00000108 T CTRPluginFramework::PluginMenuTools::operator()(std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >&, CTRPluginFramework::Time&)
0011f4e4 00000088 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(char const*, std::allocator<char> const&) [clone .isra.35]
0011f56c 000000a0 t void std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::_M_range_initialize<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const*>(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const*, std::forward_iterator_tag) [clone .isra.48]
0011f60c 0000007c T CTRPluginFramework::SearchMenu::_OpenExportFile()
0011f688 000000b4 T CTRPluginFramework::SearchMenu::_NewCheat()
0011f73c 0000018c T CTRPluginFramework::SearchMenu::_Edit()
0011f8c8 00000048 T CTRPluginFramework::SearchMenu::_JumpInEditor()
0011f910 0000014c T CTRPluginFramework::SearchMenu::_Export()
0011fa5c 0000015c T CTRPluginFramework::SearchMenu::_ExportAll()
0011fbb8 000001ac T CTRPluginFramework::SearchMenu::_ShowGame()
0011fd64 00000030 W std::__cxx11::to_string(unsigned long)
0011fd94 00000084 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > std::operator+<char, std::char_traits<char>, std::allocator<char> >(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&&)
0011fe18 00000584 T CTRPluginFramework::SearchMenu::Draw()
0012039c 000000b4 T CTRPluginFramework::SearchMenu::SearchMenu(CTRPluginFramework::Search*&, CTRPluginFramework::HexEditor&, bool&, bool&)
0012039c 000000b4 T CTRPluginFramework::SearchMenu::SearchMenu(CTRPluginFramework::Search*&, CTRPluginFramework::HexEditor&, bool&, bool&)
00120450 00000030 W std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::clear()
00120480 00000230 T CTRPluginFramework::SearchMenu::Update()
001206b0 0000050c T CTRPluginFramework::SearchMenu::ProcessEvent(std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >&, CTRPluginFramework::Time&)
00120bbc 00000064 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >* std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const*, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >(__gnu_cxx::__normal_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const*, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >, __gnu_cxx::__normal_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const*, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >&) [clone .isra.29]
00120c20 00000094 T CTRPluginFramework::SubMenu::SubMenu(std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&)
00120c20 00000094 T CTRPluginFramework::SubMenu::SubMenu(std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&)
00120cb4 0000001c T CTRPluginFramework::SubMenu::operator()()
00120cd0 00000214 T CTRPluginFramework::SubMenu::Draw()
00120ee4 000000bc T CTRPluginFramework::SubMenu::ProcessEvent(CTRPluginFramework::Event const&)
00120fa0 00000008 T CTRPluginFramework::SubMenu::IsOpen()
00120fa8 0000001c T CTRPluginFramework::SubMenu::OptionsCount()
00120fc4 00000198 W std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::operator=(std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&)
0012115c 00000048 T CTRPluginFramework::SubMenu::ChangeOptions(std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&)
001211a4 000000c4 T CTRPluginFramework::Search32::FirstSearchUnknown()
00121268 000000c0 T CTRPluginFramework::Search32::FirstSearchSpecified()
00121328 0000003c t CTRPluginFramework::Results32WithOld* std::__uninitialized_default_n_a<CTRPluginFramework::Results32WithOld*, unsigned int, IAllocator<CTRPluginFramework::Results32WithOld> >(CTRPluginFramework::Results32WithOld*, unsigned int, IAllocator<CTRPluginFramework::Results32WithOld>&) [clone .isra.79]
00121364 00000078 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(char const*, std::allocator<char> const&) [clone .isra.92]
001213dc 000002a0 T CTRPluginFramework::Search32::SecondSearchUnknown()
0012167c 000002bc T CTRPluginFramework::Search32::SecondSearchSpecified()
00121938 00000040 W CTRPluginFramework::Search::~Search()
00121938 00000040 W CTRPluginFramework::Search::~Search()
00121978 00000044 T CTRPluginFramework::Search32::~Search32()
00121978 00000044 T CTRPluginFramework::Search32::~Search32()
001219bc 0000001c T CTRPluginFramework::Search32::~Search32()
001219d8 0000001c W CTRPluginFramework::Search::~Search()
001219f4 00000228 T CTRPluginFramework::Search32::Search32(CTRPluginFramework::SearchParameters&)
001219f4 00000228 T CTRPluginFramework::Search32::Search32(CTRPluginFramework::SearchParameters&)
00121c1c 00000020 T CTRPluginFramework::Search32::Search32(CTRPluginFramework::Search*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
00121c1c 00000020 T CTRPluginFramework::Search32::Search32(CTRPluginFramework::Search*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
00121c3c 0000005c W std::vector<CTRPluginFramework::Results32WithOld, IAllocator<CTRPluginFramework::Results32WithOld> >::vector(unsigned int, IAllocator<CTRPluginFramework::Results32WithOld> const&)
00121c3c 0000005c W std::vector<CTRPluginFramework::Results32WithOld, IAllocator<CTRPluginFramework::Results32WithOld> >::vector(unsigned int, IAllocator<CTRPluginFramework::Results32WithOld> const&)
00121c98 00000138 W std::vector<CTRPluginFramework::Results32WithOld, IAllocator<CTRPluginFramework::Results32WithOld> >::_M_default_append(unsigned int)
00121dd0 00000048 W std::vector<CTRPluginFramework::Results32WithOld, IAllocator<CTRPluginFramework::Results32WithOld> >::resize(unsigned int)
00121e18 00000144 T CTRPluginFramework::Search32::SubsidiarySearchSpecified()
00121f5c 00000144 T CTRPluginFramework::Search32::SubsidiarySearchUnknown()
001220a0 00000044 W void std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::emplace_back<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&&)
001220e4 0000002c W CTRPluginFramework::Results32* std::__uninitialized_default_n_1<true>::__uninit_default_n<CTRPluginFramework::Results32*, unsigned int>(CTRPluginFramework::Results32*, unsigned int)
00122110 000000ec W std::vector<CTRPluginFramework::Results32, std::allocator<CTRPluginFramework::Results32> >::_M_default_append(unsigned int)
001221fc 00000034 W std::vector<CTRPluginFramework::Results32, std::allocator<CTRPluginFramework::Results32> >::resize(unsigned int)
00122230 00000034 W CTRPluginFramework::Results32WithOld* std::__uninitialized_default_n_1<true>::__uninit_default_n<CTRPluginFramework::Results32WithOld*, unsigned int>(CTRPluginFramework::Results32WithOld*, unsigned int)
00122264 0000010c W std::vector<CTRPluginFramework::Results32WithOld, std::allocator<CTRPluginFramework::Results32WithOld> >::_M_default_append(unsigned int)
00122370 00000048 W std::vector<CTRPluginFramework::Results32WithOld, std::allocator<CTRPluginFramework::Results32WithOld> >::resize(unsigned int)
001223b8 00000318 T CTRPluginFramework::Search32::ReadResults(unsigned long, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >&, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >&, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >&)
001226d0 00000260 T CTRPluginFramework::Search32::FirstSearchSpecifiedU8(unsigned long, CTRPluginFramework::SearchFlags, CTRPluginFramework::Results32*)
00122930 00000278 T CTRPluginFramework::Search32::FirstSearchSpecifiedU16(unsigned long, CTRPluginFramework::SearchFlags, CTRPluginFramework::Results32*)
00122ba8 00000260 T CTRPluginFramework::Search32::FirstSearchSpecifiedU32(unsigned long, CTRPluginFramework::SearchFlags, CTRPluginFramework::Results32*)
00122e08 00000034 T CTRPluginFramework::AlmostEqualRelative(float, float, float)
00122e3c 00000324 T CTRPluginFramework::Search32::FirstSearchSpecifiedFloat(unsigned long, CTRPluginFramework::SearchFlags, CTRPluginFramework::Results32*)
00123160 0000082c T CTRPluginFramework::Search32::SecondSearchSpecifiedU8(std::vector<CTRPluginFramework::Results32, IAllocator<CTRPluginFramework::Results32> >&, CTRPluginFramework::SearchFlags, CTRPluginFramework::Results32WithOld*)
0012398c 000008cc T CTRPluginFramework::Search32::SecondSearchSpecifiedU16(std::vector<CTRPluginFramework::Results32, IAllocator<CTRPluginFramework::Results32> >&, CTRPluginFramework::SearchFlags, CTRPluginFramework::Results32WithOld*)
00124258 000008ac T CTRPluginFramework::Search32::SecondSearchSpecifiedU32(std::vector<CTRPluginFramework::Results32, IAllocator<CTRPluginFramework::Results32> >&, CTRPluginFramework::SearchFlags, CTRPluginFramework::Results32WithOld*)
00124b04 00000db0 T CTRPluginFramework::Search32::SecondSearchSpecifiedFloat(std::vector<CTRPluginFramework::Results32, IAllocator<CTRPluginFramework::Results32> >&, CTRPluginFramework::SearchFlags, CTRPluginFramework::Results32WithOld*)
001258b4 00000bb4 T CTRPluginFramework::Search32::SecondSearchUnknownU8(std::vector<unsigned long, IAllocator<unsigned long> >&, CTRPluginFramework::SearchFlags, CTRPluginFramework::Results32WithOld*)
00126468 000006f4 T CTRPluginFramework::Search32::SecondSearchUnknownU16(std::vector<unsigned long, IAllocator<unsigned long> >&, CTRPluginFramework::SearchFlags, CTRPluginFramework::Results32WithOld*)
00126b5c 000003e0 T CTRPluginFramework::Search32::SecondSearchUnknownU32(std::vector<unsigned long, IAllocator<unsigned long> >&, CTRPluginFramework::SearchFlags, CTRPluginFramework::Results32WithOld*)
00126f3c 0000079c T CTRPluginFramework::Search32::SecondSearchUnknownFloat(std::vector<unsigned long, IAllocator<unsigned long> >&, CTRPluginFramework::SearchFlags, CTRPluginFramework::Results32WithOld*)
001276d8 00000444 T CTRPluginFramework::Search32::SubsidiarySearchSpecifiedU8(std::vector<CTRPluginFramework::Results32WithOld, IAllocator<CTRPluginFramework::Results32WithOld> >&, CTRPluginFramework::SearchFlags, CTRPluginFramework::Results32WithOld*)
00127b1c 00000448 T CTRPluginFramework::Search32::SubsidiarySearchSpecifiedU16(std::vector<CTRPluginFramework::Results32WithOld, IAllocator<CTRPluginFramework::Results32WithOld> >&, CTRPluginFramework::SearchFlags, CTRPluginFramework::Results32WithOld*)
00127f64 00000444 T CTRPluginFramework::Search32::SubsidiarySearchSpecifiedU32(std::vector<CTRPluginFramework::Results32WithOld, IAllocator<CTRPluginFramework::Results32WithOld> >&, CTRPluginFramework::SearchFlags, CTRPluginFramework::Results32WithOld*)
001283a8 00000630 T CTRPluginFramework::Search32::SubsidiarySearchSpecifiedFloat(std::vector<CTRPluginFramework::Results32WithOld, IAllocator<CTRPluginFramework::Results32WithOld> >&, CTRPluginFramework::SearchFlags, CTRPluginFramework::Results32WithOld*)
001289d8 000008bc T CTRPluginFramework::Search32::SubsidiarySearchUnknownU8(std::vector<CTRPluginFramework::Results32WithOld, IAllocator<CTRPluginFramework::Results32WithOld> >&, CTRPluginFramework::SearchFlags, CTRPluginFramework::Results32WithOld*)
00129294 000008c0 T CTRPluginFramework::Search32::SubsidiarySearchUnknownU16(std::vector<CTRPluginFramework::Results32WithOld, IAllocator<CTRPluginFramework::Results32WithOld> >&, CTRPluginFramework::SearchFlags, CTRPluginFramework::Results32WithOld*)
00129b54 000008bc T CTRPluginFramework::Search32::SubsidiarySearchUnknownU32(std::vector<CTRPluginFramework::Results32WithOld, IAllocator<CTRPluginFramework::Results32WithOld> >&, CTRPluginFramework::SearchFlags, CTRPluginFramework::Results32WithOld*)
0012a410 00000c50 T CTRPluginFramework::Search32::SubsidiarySearchUnknownFloat(std::vector<CTRPluginFramework::Results32WithOld, IAllocator<CTRPluginFramework::Results32WithOld> >&, CTRPluginFramework::SearchFlags, CTRPluginFramework::Results32WithOld*)
0012b060 00000044 T CTRPluginFramework::Search::UpdateProgress()
0012b0a4 00000194 T CTRPluginFramework::Search::CheckNextRegion()
0012b238 00000078 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(char const*, std::allocator<char> const&) [clone .isra.27]
0012b2b0 00000008 T CTRPluginFramework::Search::GetHeader() const
0012b2b8 00000058 T CTRPluginFramework::Search::GetTotalResults(CTRPluginFramework::Header const&) const
0012b310 0000000c T CTRPluginFramework::Search::GetType() const
0012b31c 00000018 T CTRPluginFramework::Search::IsFirstUnknownSearch() const
0012b334 00000070 T CTRPluginFramework::Search::WriteHeader()
0012b3a4 00000058 T CTRPluginFramework::Search::WriteResults()
0012b3fc 0000004c T CTRPluginFramework::Search::GetRegionIndex(unsigned long)
0012b448 00000220 T CTRPluginFramework::Search::ExtractPreviousHits(void*, unsigned long, unsigned long, unsigned long&, bool)
0012b668 00000240 T CTRPluginFramework::Search::Search(CTRPluginFramework::Search*)
0012b668 00000240 T CTRPluginFramework::Search::Search(CTRPluginFramework::Search*)
0012b8a8 000000d8 W void std::vector<CTRPluginFramework::Search::RegionIndex, std::allocator<CTRPluginFramework::Search::RegionIndex> >::_M_realloc_insert<CTRPluginFramework::Search::RegionIndex const&>(__gnu_cxx::__normal_iterator<CTRPluginFramework::Search::RegionIndex*, std::vector<CTRPluginFramework::Search::RegionIndex, std::allocator<CTRPluginFramework::Search::RegionIndex> > >, CTRPluginFramework::Search::RegionIndex const&)
0012b980 0000008c T CTRPluginFramework::Search::CreateIndexTable()
0012ba0c 000001a8 T CTRPluginFramework::Search::Search(CTRPluginFramework::Search*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
0012ba0c 000001a8 T CTRPluginFramework::Search::Search(CTRPluginFramework::Search*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
0012bbb4 00000080 T CTRPluginFramework::Search::Cancel()
0012bc34 00000118 T CTRPluginFramework::Search::ExecuteSearch()
0012bd4c 00000090 T CTRPluginFramework::EventManager::EventManager()
0012bd4c 00000090 T CTRPluginFramework::EventManager::EventManager()
0012bddc 00000168 W void std::deque<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >::_M_push_back_aux<CTRPluginFramework::Event const&>(CTRPluginFramework::Event const&)
0012bf44 00000044 W std::deque<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >::push_back(CTRPluginFramework::Event const&)
0012bf88 0000028c T CTRPluginFramework::EventManager::ProcessEvents()
0012c214 00000104 T CTRPluginFramework::EventManager::PopEvent(CTRPluginFramework::Event&, bool)
0012c318 00000008 T CTRPluginFramework::EventManager::PollEvent(CTRPluginFramework::Event&)
0012c320 00000024 t addrMapNodeComparator(rbtree_node const*, rbtree_node const*)
0012c344 00000004 t addrMapNodeDestructor(rbtree_node*)
0012c348 00000110 T CTRPluginFramework::Heap::MemAlign(unsigned int, unsigned int)
0012c458 00000008 T CTRPluginFramework::Heap::Alloc(unsigned int)
0012c460 00000050 T CTRPluginFramework::Heap::Free(void*)
0012c4b0 0000000c T CTRPluginFramework::Heap::SpaceFree()
0012c4bc 00000128 T CTRPluginFramework::ProcessImpl::Initialize()
0012c5e4 0000004c T CTRPluginFramework::ProcessImpl::UpdateThreadHandle()
0012c630 00000018 T CTRPluginFramework::ProcessImpl::IsPaused()
0012c648 00000018 T IsPaused
0012c660 00000188 T CTRPluginFramework::ProcessImpl::Pause(bool)
0012c7e8 00000158 T CTRPluginFramework::ProcessImpl::Play(bool)
0012c940 00000060 T CTRPluginFramework::FromPhysicalToVirtual(unsigned long)
0012c9a0 00000018 T CTRPluginFramework::GetBPP(GSPGPU_FramebufferFormats)
0012c9b8 00000030 T CTRPluginFramework::ScreenImpl::ScreenImpl(unsigned long, unsigned long, bool)
0012c9b8 00000030 T CTRPluginFramework::ScreenImpl::ScreenImpl(unsigned long, unsigned long, bool)
0012c9e8 00000060 T CTRPluginFramework::ScreenImpl::Initialize()
0012ca48 000000a8 T CTRPluginFramework::ScreenImpl::Fade(float, bool)
0012caf0 00000068 T CTRPluginFramework::ScreenImpl::Acquire(unsigned long, unsigned long, unsigned long, unsigned long)
0012cb58 000000b4 T CTRPluginFramework::ScreenImpl::Copy()
0012cc0c 000000b8 T CTRPluginFramework::ScreenImpl::Acquire()
0012ccc4 00000008 T CTRPluginFramework::ScreenImpl::IsTopScreen()
0012cccc 0000005c T CTRPluginFramework::ScreenImpl::Is3DEnabled()
0012cd28 00000118 T CTRPluginFramework::ScreenImpl::Flush()
0012ce40 00000118 T CTRPluginFramework::ScreenImpl::Invalidate()
0012cf58 00000058 T CTRPluginFramework::ScreenImpl::Flash(CTRPluginFramework::Color&)
0012cfb0 00000078 T CTRPluginFramework::ScreenImpl::Clean()
0012d028 00000074 T CTRPluginFramework::ScreenImpl::SwapBuffer(bool, bool)
0012d09c 00000008 T CTRPluginFramework::ScreenImpl::GetFormat()
0012d0a4 00000008 T CTRPluginFramework::ScreenImpl::GetStride()
0012d0ac 00000008 T CTRPluginFramework::ScreenImpl::GetBytesPerPixel()
0012d0b4 0000001c T CTRPluginFramework::ScreenImpl::GetFramebufferInfos(int&, int&, GSPGPU_FramebufferFormats&)
0012d0d0 0000001c T CTRPluginFramework::ScreenImpl::GetLeftFramebuffer(bool)
0012d0ec 00000054 T CTRPluginFramework::ScreenImpl::GetLeftFramebuffer(int, int)
0012d140 00000030 T CTRPluginFramework::ScreenImpl::GetRightFramebuffer(bool)
0012d170 00000058 T CTRPluginFramework::ScreenImpl::GetRightFramebuffer(int, int)
0012d1c8 00000074 T CTRPluginFramework::ScreenImpl::GetPosFromAddress(unsigned long, int&, int&)
0012d23c 000000f0 T CTRPluginFramework::SystemImpl::Initialize()
0012d32c 00000010 T CTRPluginFramework::SystemImpl::GetIOBaseLCD()
0012d33c 00000010 T CTRPluginFramework::SystemImpl::GetIOBasePDC()
0012d34c 00000028 T CTRPluginFramework::ARCode::ToString[abi:cxx11]() const
0012d374 00000020 W std::vector<unsigned char, std::allocator<unsigned char> >::~vector()
0012d374 00000020 W std::vector<unsigned char, std::allocator<unsigned char> >::~vector()
0012d394 00000088 T CTRPluginFramework::ActionReplayPriv::Str2U32(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, bool&)
0012d41c 00000138 T CTRPluginFramework::ARCode::ARCode(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, bool&)
0012d41c 00000138 T CTRPluginFramework::ARCode::ARCode(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, bool&)
0012d554 00000104 T CTRPluginFramework::ARCode::Update(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
0012d658 0000006c T CTRPluginFramework::ARCode::Update()
0012d6c4 000000c4 T CTRPluginFramework::ARCode::ARCode(CTRPluginFramework::ARCode const&)
0012d6c4 000000c4 T CTRPluginFramework::ARCode::ARCode(CTRPluginFramework::ARCode const&)
0012d788 00000040 T CTRPluginFramework::ARCode::ARCode(unsigned char, unsigned long, unsigned long)
0012d788 00000040 T CTRPluginFramework::ARCode::ARCode(unsigned char, unsigned long, unsigned long)
0012d7c8 00000040 T CTRPluginFramework::ARCodeContext::Update()
0012d808 00000048 T CTRPluginFramework::ARCodeContext::Clear()
0012d850 00000074 t _GLOBAL__sub_I__ZN18CTRPluginFramework11g_codeTypesE
0012d8c4 00000060 t CTRPluginFramework::GetCond32Str(unsigned long, unsigned long, char const*)
0012d924 000000cc t CTRPluginFramework::GetCond16Str(unsigned long, unsigned long, char const*)
0012d9f0 0000000c t void __gnu_cxx::new_allocator<CTRPluginFramework::ARCode>::construct<CTRPluginFramework::ARCode, CTRPluginFramework::ARCode const&>(CTRPluginFramework::ARCode*, CTRPluginFramework::ARCode const&) [clone .isra.29]
0012d9f0 0000000c t void __gnu_cxx::new_allocator<CTRPluginFramework::ARCode>::construct<CTRPluginFramework::ARCode, CTRPluginFramework::ARCode>(CTRPluginFramework::ARCode*, CTRPluginFramework::ARCode&&) [clone .isra.51]
0012d9fc 00000088 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(char const*, std::allocator<char> const&) [clone .isra.85]
0012da84 0000005c t CTRPluginFramework::ColorToString(CTRPluginFramework::Color const&)
0012dae0 00000770 t CTRPluginFramework::ColorCodeLine(CTRPluginFramework::ARCode const&)
0012e250 00000080 T CTRPluginFramework::ARCodeEditor::CodeLine::CodeLine(CTRPluginFramework::ARCode&)
0012e250 00000080 T CTRPluginFramework::ARCodeEditor::CodeLine::CodeLine(CTRPluginFramework::ARCode&)
0012e2d0 00000050 T CTRPluginFramework::ARCodeEditor::CodeLine::CodeLine(CTRPluginFramework::ARCodeEditor::CodeLine&&)
0012e2d0 00000050 T CTRPluginFramework::ARCodeEditor::CodeLine::CodeLine(CTRPluginFramework::ARCodeEditor::CodeLine const&)
0012e2d0 00000050 T CTRPluginFramework::ARCodeEditor::CodeLine::CodeLine(CTRPluginFramework::ARCodeEditor::CodeLine&&)
0012e2d0 00000050 T CTRPluginFramework::ARCodeEditor::CodeLine::CodeLine(CTRPluginFramework::ARCodeEditor::CodeLine const&)
0012e320 00000b10 T CTRPluginFramework::ARCodeEditor::CodeLine::Update()
0012ee30 000001a0 T CTRPluginFramework::ARCodeEditor::ARCodeEditor()
0012ee30 000001a0 T CTRPluginFramework::ARCodeEditor::ARCodeEditor()
0012efd0 000002e4 T CTRPluginFramework::ARCodeEditor::_RenderTop()
0012f2b4 0000001c T CTRPluginFramework::ARCodeEditor::_RenderBottom()
0012f2d0 00000088 T CTRPluginFramework::ARCodeEditor::_Update()
0012f358 00000038 W std::vector<CTRPluginFramework::ARCodeEditor::CodeLine, std::allocator<CTRPluginFramework::ARCodeEditor::CodeLine> >::clear()
0012f390 00000184 W void std::vector<CTRPluginFramework::ARCodeEditor::CodeLine, std::allocator<CTRPluginFramework::ARCodeEditor::CodeLine> >::_M_realloc_insert<CTRPluginFramework::ARCodeEditor::CodeLine>(__gnu_cxx::__normal_iterator<CTRPluginFramework::ARCodeEditor::CodeLine*, std::vector<CTRPluginFramework::ARCodeEditor::CodeLine, std::allocator<CTRPluginFramework::ARCodeEditor::CodeLine> > >, CTRPluginFramework::ARCodeEditor::CodeLine&&)
0012f514 00000044 W void std::vector<CTRPluginFramework::ARCodeEditor::CodeLine, std::allocator<CTRPluginFramework::ARCodeEditor::CodeLine> >::emplace_back<CTRPluginFramework::ARCodeEditor::CodeLine>(CTRPluginFramework::ARCodeEditor::CodeLine&&)
0012f558 00000064 W std::vector<CTRPluginFramework::ARCode, std::allocator<CTRPluginFramework::ARCode> >::_M_check_len(unsigned int, char const*) const
0012f5bc 0000002c W void std::_Destroy_aux<false>::__destroy<CTRPluginFramework::ARCode*>(CTRPluginFramework::ARCode*, CTRPluginFramework::ARCode*)
0012f5e8 00000028 W std::vector<CTRPluginFramework::ARCode, std::allocator<CTRPluginFramework::ARCode> >::~vector()
0012f5e8 00000028 W std::vector<CTRPluginFramework::ARCode, std::allocator<CTRPluginFramework::ARCode> >::~vector()
0012f610 0000004c W CTRPluginFramework::ARCode::operator=(CTRPluginFramework::ARCode const&)
0012f65c 00000064 W CTRPluginFramework::ARCode* std::__uninitialized_copy<false>::__uninit_copy<CTRPluginFramework::ARCode const*, CTRPluginFramework::ARCode*>(CTRPluginFramework::ARCode const*, CTRPluginFramework::ARCode const*, CTRPluginFramework::ARCode*)
0012f6c0 000000bc W std::vector<CTRPluginFramework::ARCode, std::allocator<CTRPluginFramework::ARCode> >::_M_insert_rval(__gnu_cxx::__normal_iterator<CTRPluginFramework::ARCode const*, std::vector<CTRPluginFramework::ARCode, std::allocator<CTRPluginFramework::ARCode> > >, CTRPluginFramework::ARCode&&)
0012f77c 00000328 T CTRPluginFramework::ARCodeEditor::_ReloadCodeLines()
0012faa4 000004c0 T CTRPluginFramework::ARCodeEditor::CodeLine::Edit(unsigned long, unsigned long)
0012ff64 00000468 T CTRPluginFramework::ARCodeEditor::_ProcessEvent(CTRPluginFramework::Event&)
001303cc 000004bc T CTRPluginFramework::ARCodeEditor::operator()(std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >&)
00130888 000000f0 T CTRPluginFramework::ARCodeEditor::Edit(CTRPluginFramework::ARCodeContext&)
00130978 00000020 t std::vector<CTRPluginFramework::ActionReplay_ProcessString(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, bool)::PColor, std::allocator<CTRPluginFramework::ActionReplay_ProcessString(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, bool)::PColor> >::~vector()
00130978 00000020 t std::vector<CTRPluginFramework::ActionReplay_ProcessString(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, bool)::PColor, std::allocator<CTRPluginFramework::ActionReplay_ProcessString(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, bool)::PColor> >::~vector()
00130998 0000001c t bool __gnu_cxx::__ops::_Iter_pred<CTRPluginFramework::Rtrim(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)::{lambda(char)#1}>::operator()<std::reverse_iterator<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >(std::reverse_iterator<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >) [clone .isra.63]
001309b4 00000114 t CTRPluginFramework::Rtrim(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)
00130ac8 00000078 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(char const*, std::allocator<char> const&) [clone .isra.85]
00130b40 00000018 t bool __gnu_cxx::__ops::_Iter_pred<CTRPluginFramework::Ltrim(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)::{lambda(char)#1}>::operator()<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >(__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >) [clone .isra.59]
00130b58 000000f4 t CTRPluginFramework::Ltrim(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)
00130c4c 00000010 t CTRPluginFramework::Trim(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)
00130c5c 000000d8 T CTRPluginFramework::ActionReplay_OpenCheatsFile(CTRPluginFramework::File&, bool)
00130d34 00000054 T CTRPluginFramework::ActionReplay_CheckCodeTypeValidity(unsigned long)
00130d88 00000044 T CTRPluginFramework::ActionReplay_IsHexCode(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
00130dcc 00000048 T CTRPluginFramework::ActionReplay_IsValidCode(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
00130e14 000004d8 T CTRPluginFramework::ActionReplay_ProcessString(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, bool)
001312ec 00000044 W std::_Deque_base<CTRPluginFramework::MenuFolderImpl*, std::allocator<CTRPluginFramework::MenuFolderImpl*> >::~_Deque_base()
001312ec 00000044 W std::_Deque_base<CTRPluginFramework::MenuFolderImpl*, std::allocator<CTRPluginFramework::MenuFolderImpl*> >::~_Deque_base()
00131330 00000014 W std::deque<CTRPluginFramework::MenuFolderImpl*, std::allocator<CTRPluginFramework::MenuFolderImpl*> >::~deque()
00131330 00000014 W std::deque<CTRPluginFramework::MenuFolderImpl*, std::allocator<CTRPluginFramework::MenuFolderImpl*> >::~deque()
00131344 00000020 W std::deque<CTRPluginFramework::MenuFolderImpl*, std::allocator<CTRPluginFramework::MenuFolderImpl*> >::back()
00131364 0000018c W void std::vector<CTRPluginFramework::ARCode, std::allocator<CTRPluginFramework::ARCode> >::_M_realloc_insert<CTRPluginFramework::ARCode const&>(__gnu_cxx::__normal_iterator<CTRPluginFramework::ARCode*, std::vector<CTRPluginFramework::ARCode, std::allocator<CTRPluginFramework::ARCode> > >, CTRPluginFramework::ARCode const&)
001314f0 00000168 W void std::deque<CTRPluginFramework::MenuFolderImpl*, std::allocator<CTRPluginFramework::MenuFolderImpl*> >::_M_push_back_aux<CTRPluginFramework::MenuFolderImpl* const&>(CTRPluginFramework::MenuFolderImpl* const&)
00131658 00000820 T CTRPluginFramework::ActionReplay_LoadCodes(CTRPluginFramework::MenuFolderImpl*)
00131e78 000000c4 t CTRPluginFramework::RemoveFormat(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
00131f3c 00000078 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(char const*, std::allocator<char> const&) [clone .isra.25]
00131fb4 00000344 T CTRPluginFramework::ActionReplay_WriteToFile(CTRPluginFramework::LineWriter&, CTRPluginFramework::MenuItem*)
001322f8 00000054 t CTRPluginFramework::ActionReplay_ExecuteCode(CTRPluginFramework::MenuEntryImpl*)
0013234c 00000060 T CTRPluginFramework::MenuEntryActionReplay::~MenuEntryActionReplay()
0013234c 00000060 T CTRPluginFramework::MenuEntryActionReplay::~MenuEntryActionReplay()
001323ac 0000001c T CTRPluginFramework::MenuEntryActionReplay::~MenuEntryActionReplay()
001323c8 00000050 T CTRPluginFramework::MenuEntryActionReplay::MenuEntryActionReplay(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
001323c8 00000050 T CTRPluginFramework::MenuEntryActionReplay::MenuEntryActionReplay(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
00132418 0000009c T CTRPluginFramework::MenuEntryActionReplay::Update()
001324b4 0000002c W MemBlock::Create(unsigned char*, unsigned long)
001324e0 00000034 W MemPool::DelBlock(MemBlock*)
00132514 0000005c T MemPool::CoalesceRight(MemBlock*)
00132570 0000011c T MemPool::Allocate(MemChunk&, unsigned long, int)
0013268c 00000100 T MemPool::Deallocate(MemChunk const&)
0013278c 00000020 T MemPool::GetFreeSpace()
001327ac 00000124 T __system_allocateHeaps
001328d0 00000034 T arm11kSetKProcessId
00132904 00000028 T arm11kGetCurrentKProcess
0013292c 00000024 T arm11kMemcpy
00132950 00000064 T arm11kSvcControlMemory
001329b4 00000018 T getKernelObjectPtr
001329cc 000000a0 T cfguInit
00132a6c 00000034 T cfguExit
00132aa0 00000044 T CFGU_GetConfigInfoBlk2
00132ae4 00000014 T CFGU_GetSystemLanguage
00132af8 000000a8 T fontEnsureMapped
00132ba0 0000011c T fontGlyphIndexFromCodePoint
00132cbc 00000074 T fontGetCharWidthInfo
00132d30 00000050 T srvExit
00132d80 00000034 T srvRegisterClient
00132db4 00000064 T srvInit
00132e18 00000068 T srvGetServiceHandleDirect
00132e80 00000004 T srvGetServiceHandle
00132e84 00000034 T srvPublishToSubscriber
00132eb8 0000000c T __sync_init
00132ec4 00000018 T __sync_fini
00132edc 00000018 T LightLock_Init
00132ef4 0000008c T LightLock_Lock
00132f80 00000034 T LightLock_TryLock
00132fb4 00000050 T LightLock_Unlock
00133004 00000018 T RecursiveLock_Init
0013301c 00000030 T RecursiveLock_Lock
0013304c 00000044 T RecursiveLock_TryLock
00133090 00000034 T RecursiveLock_Unlock
001330c4 00000030 T LightEvent_Init
001330f4 00000060 T LightEvent_Clear
00133154 00000060 T LightEvent_Pulse
001331b4 000000b4 T LightEvent_Signal
00133268 000000a8 T LightEvent_Wait
00133310 00000168 T threadCreate
00133478 0000001c T threadFree
00133494 00000024 T threadJoin
001334b8 00000030 T threadGetCurrent
001334e8 0000003c T threadExit
00133524 0000003c t _thread_begin
00133560 00000088 T acInit
001335e8 00000034 T acExit
0013361c 000000a0 T amInit
001336bc 00000034 T amExit
001336f0 00000128 T aptSendCommand
00133818 0000006c T APT_CheckNew3DS
00133884 00000048 T APT_GetSharedFont
001338cc 00000028 t fsSession
001338f4 00000040 t fsSessionForArchive
00133934 00000038 T fsExit
0013396c 00000028 T FSUSER_Initialize
00133994 000000b0 T fsInit
00133a44 00000080 T FSUSER_OpenFile
00133ac4 00000068 T FSUSER_DeleteFile
00133b2c 000000a4 T FSUSER_RenameFile
00133bd0 00000070 T FSUSER_CreateDirectory
00133c40 0000006c T FSUSER_OpenDirectory
00133cac 00000074 T FSUSER_OpenArchive
00133d20 00000058 T FSFILE_Read
00133d78 00000060 T FSFILE_Write
00133dd8 00000038 T FSFILE_GetSize
00133e10 00000028 T FSFILE_SetSize
00133e38 0000003c T FSFILE_Close
00133e74 00000024 T FSFILE_Flush
00133e98 00000050 T FSDIR_Read
00133ee8 0000003c T FSDIR_Close
00133f24 000000e8 t gspEventThreadMain
0013400c 00000098 T gspInitEventHandler
001340a4 00000040 T gspExitEventHandler
001340e4 0000008c T gspExit
00134170 0000005c T gspWaitForEvent
001341cc 00000044 T GSPGPU_FlushDataCache
00134210 00000044 T GSPGPU_InvalidateDataCache
00134254 00000064 T GSPGPU_RegisterInterruptRelayQueue
001342b8 000000dc T gspInit
00134394 0000002c T GSPGPU_SaveVramSysArea
001343c0 0000002c T GSPGPU_RestoreVramSysArea
001343ec 000000bc T hidExit
001344a8 00000034 T hidCheckSectionUpdateTime
001344dc 0000016c T hidScanInput
00134648 00000010 T hidKeysHeld
00134658 00000010 T hidKeysDown
00134668 00000010 T hidKeysUp
00134678 00000018 T hidTouchRead
00134690 00000090 T HIDUSER_GetHandles
00134720 00000174 T hidInit
00134894 00000034 T irrstCheckSectionUpdateTime
001348c8 00000070 T irrstScanInput
00134938 0000001c T irrstKeysHeld
00134954 00000050 T IRRST_GetHandles
001349a4 00000034 T IRRST_Initialize
001349d8 00000124 T irrstInit
00134afc 0000002c T IRRST_Shutdown
00134b28 000000a8 T irrstExit
00134bd0 0000002c t __ctru_get_reent
00134bfc 000000f0 T __system_initSyscalls
00134cec 0000005c T decode_utf16
00134d48 00000138 T decode_utf8
00134e80 00000054 T encode_utf16
00134ed4 000000e0 T encode_utf8
00134fb4 000000d4 T utf16_to_utf8
00135088 000000ac T utf8_to_utf16
00135134 00000054 T rbtree_find
00135188 00000010 T rbtree_init
00135198 00000174 t do_insert
0013530c 00000008 T rbtree_insert
00135314 00000014 t is_black
00135328 000002c8 T rbtree_remove
001355f0 00000094 T rbtree_rotate
00135684 T loadCROHooked
001356a0 T svcControlMemory
001356c0 T svcQueryMemory
001356f0 T svcCreateThread
00135710 T svcExitThread
00135718 T svcSleepThread
00135720 T svcSetThreadPriority
00135728 T svcReleaseMutex
00135730 T svcCreateEvent
00135744 T svcSignalEvent
0013574c T svcClearEvent
00135754 T svcMapMemoryBlock
0013575c T svcUnmapMemoryBlock
00135764 T svcCreateAddressArbiter
00135778 T svcArbitrateAddress
00135790 T svcCloseHandle
00135798 T svcWaitSynchronization
001357a0 T svcGetSystemTick
001357a8 T svcGetSystemInfo
001357c0 T svcGetProcessInfo
001357d8 T svcConnectToPort
001357ec T svcSendSyncRequest
001357f4 T svcOpenProcess
00135808 T svcBreak
00135810 T svcInvalidateProcessDataCache
00135818 T svcFlushProcessDataCache
00135820 T svcControlProcessMemory
00135838 T svcBackdoor
00135840 T svcKernelSetState
00135848 T svcQueryProcessMemory
0013586c 0000004c T Hook::Hook()
0013586c 0000004c T Hook::Hook()
001358b8 000000c8 T Hook::Initialize(unsigned long, unsigned long, bool)
00135980 00000060 T Hook::Enable()
001359e0 00000060 T Hook::Disable()
00135a40 0000003c T CTRPluginFramework::MessageBox::MessageBox(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::DialogType)
00135a40 0000003c T CTRPluginFramework::MessageBox::MessageBox(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::DialogType)
00135a7c 00000034 T CTRPluginFramework::MessageBox::MessageBox(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::DialogType)
00135a7c 00000034 T CTRPluginFramework::MessageBox::MessageBox(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::DialogType)
00135ab0 0000003c T CTRPluginFramework::MessageBox::~MessageBox()
00135ab0 0000003c T CTRPluginFramework::MessageBox::~MessageBox()
00135aec 00000008 T CTRPluginFramework::MessageBox::operator()() const
00135af4 00000014 T CTRPluginFramework::Touch::IsDown()
00135b08 00000028 T CTRPluginFramework::Touch::GetPosition()
00135b30 0000002c T CTRPluginFramework::LineReader::LineReader(CTRPluginFramework::File&)
00135b30 0000002c T CTRPluginFramework::LineReader::LineReader(CTRPluginFramework::File&)
00135b5c 00000018 T CTRPluginFramework::LineReader::~LineReader()
00135b5c 00000018 T CTRPluginFramework::LineReader::~LineReader()
00135b74 00000114 T CTRPluginFramework::LineReader::operator()(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)
00135c88 00000028 T CTRPluginFramework::LineWriter::LineWriter(CTRPluginFramework::File&)
00135c88 00000028 T CTRPluginFramework::LineWriter::LineWriter(CTRPluginFramework::File&)
00135cb0 00000080 T CTRPluginFramework::LineWriter::endl[abi:cxx11]()
00135d30 00000048 T CTRPluginFramework::LineWriter::Flush()
00135d78 0000001c T CTRPluginFramework::LineWriter::~LineWriter()
00135d78 0000001c T CTRPluginFramework::LineWriter::~LineWriter()
00135d94 00000070 T CTRPluginFramework::LineWriter::operator<<(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
00135e04 00000018 T CTRPluginFramework::LineWriter::Close()
00135e1c 0000003c T CTRPluginFramework::ResetColor[abi:cxx11]()
00135e58 00000024 T CTRPluginFramework::operator<<(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, char const*)
00135e7c 00000024 T CTRPluginFramework::operator<<(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
00135ea0 0000009c T CTRPluginFramework::operator<<(CTRPluginFramework::Color const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
00135f3c 00000004 T CTRPluginFramework::CheckBox::~CheckBox()
00135f3c 00000004 T CTRPluginFramework::CheckBox::~CheckBox()
00135f40 00000014 T CTRPluginFramework::CheckBox::~CheckBox()
00135f54 000000e4 T CTRPluginFramework::CheckBox::Update(bool, CTRPluginFramework::Vector<int> const&)
00136038 00000060 T CTRPluginFramework::CheckBox::CheckBox(int, int)
00136038 00000060 T CTRPluginFramework::CheckBox::CheckBox(int, int)
00136098 00000008 T CTRPluginFramework::CheckBox::IsChecked() const
001360a0 000000ac T CTRPluginFramework::ComboBox::Draw()
0013614c 000000ac T CTRPluginFramework::ComboBox::operator()()
001361f8 0000004c W CTRPluginFramework::ComboBox::~ComboBox()
001361f8 0000004c W CTRPluginFramework::ComboBox::~ComboBox()
00136244 0000001c W CTRPluginFramework::ComboBox::~ComboBox()
00136260 00000050 T CTRPluginFramework::ComboBox::ComboBox(int, int, int, int)
00136260 00000050 T CTRPluginFramework::ComboBox::ComboBox(int, int, int, int)
001362b0 00000038 T CTRPluginFramework::ComboBox::Clear()
001362e8 00000058 T CTRPluginFramework::ComboBox::Add(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
00136340 00000090 T CTRPluginFramework::ComboBox::Update(bool, CTRPluginFramework::Vector<int> const&)
001363d0 00000004 T CTRPluginFramework::FloatingButton::~FloatingButton()
001363d0 00000004 T CTRPluginFramework::FloatingButton::~FloatingButton()
001363d4 00000014 T CTRPluginFramework::FloatingButton::Draw()
001363e8 00000014 T CTRPluginFramework::FloatingButton::operator()()
001363fc 00000014 T CTRPluginFramework::FloatingButton::~FloatingButton()
00136410 000001c0 T CTRPluginFramework::FloatingButton::Update(bool, CTRPluginFramework::Vector<int> const&)
001365d0 00000044 T CTRPluginFramework::FloatingButton::FloatingButton(CTRPluginFramework::Rect<int> const&, int (*)(int, int))
001365d0 00000044 T CTRPluginFramework::FloatingButton::FloatingButton(CTRPluginFramework::Rect<int> const&, int (*)(int, int))
00136614 000001d8 T CTRPluginFramework::MessageBoxImpl::MessageBoxImpl(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::DialogType)
00136614 000001d8 T CTRPluginFramework::MessageBoxImpl::MessageBoxImpl(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::DialogType)
001367ec 00000170 T CTRPluginFramework::MessageBoxImpl::MessageBoxImpl(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::DialogType)
001367ec 00000170 T CTRPluginFramework::MessageBoxImpl::MessageBoxImpl(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::DialogType)
0013695c 00000078 T CTRPluginFramework::MessageBoxImpl::_ProcessEvent(CTRPluginFramework::Event&)
001369d4 000002bc T CTRPluginFramework::MessageBoxImpl::_Draw()
00136c90 00000104 T CTRPluginFramework::MessageBoxImpl::operator()()
00136d94 00000020 W CTRPluginFramework::NumericTextBox::~NumericTextBox()
00136d94 00000020 W CTRPluginFramework::NumericTextBox::~NumericTextBox()
00136db4 0000001c W CTRPluginFramework::NumericTextBox::~NumericTextBox()
00136dd0 00000094 T CTRPluginFramework::NumericTextBox::Draw()
00136e64 00000038 t CTRPluginFramework::NumericTextBox::_UpdateVal() [clone .part.16]
00136e9c 00000068 T CTRPluginFramework::NumericTextBox::_UpdateVal()
00136f04 000000f8 T CTRPluginFramework::NumericTextBox::operator()()
00136ffc 00000010 T CTRPluginFramework::NumericTextBox::SetValue(unsigned long)
0013700c 00000010 T CTRPluginFramework::NumericTextBox::SetValue(float)
0013701c 00000008 T CTRPluginFramework::NumericTextBox::UseHexadecimal(bool)
00137024 0000000c T CTRPluginFramework::NumericTextBox::Clear()
00137030 00000068 T CTRPluginFramework::NumericTextBox::NumericTextBox(int, int, int, int)
00137030 00000068 T CTRPluginFramework::NumericTextBox::NumericTextBox(int, int, int, int)
00137098 00000080 T CTRPluginFramework::NumericTextBox::Update(bool, CTRPluginFramework::Vector<int> const&)
00137118 00000008 W CTRPluginFramework::Drawable::operator()()
00137120 00000004 T CTRPluginFramework::TextBox::Update(bool, CTRPluginFramework::Vector<int> const&)
00137124 000002e0 T CTRPluginFramework::TextBox::Draw()
00137404 000000ec T CTRPluginFramework::TextBox::TextBox()
00137404 000000ec T CTRPluginFramework::TextBox::TextBox()
001374f0 0000000c T CTRPluginFramework::TextBox::Open() const
001374fc 0000000c T CTRPluginFramework::TextBox::Close() const
00137508 00000008 T CTRPluginFramework::TextBox::IsOpen() const
00137510 0000024c T CTRPluginFramework::TextBox::ProcessEvent(CTRPluginFramework::Event&)
0013775c 0000000c T CTRPluginFramework::TextBox::DrawConst() const
00137768 00000098 T CTRPluginFramework::TextBox::_GetWordWidth(unsigned char*, float&)
00137800 000000b4 T CTRPluginFramework::CutWordWidth(unsigned char*, float&, float)
001378b4 000000d8 W void std::vector<unsigned char*, std::allocator<unsigned char*> >::_M_realloc_insert<unsigned char* const&>(__gnu_cxx::__normal_iterator<unsigned char**, std::vector<unsigned char*, std::allocator<unsigned char*> > >, unsigned char* const&)
0013798c 0000003c W std::vector<unsigned char*, std::allocator<unsigned char*> >::push_back(unsigned char* const&)
001379c8 000001e8 T CTRPluginFramework::TextBox::_GetTextInfos()
00137bb0 00000198 T CTRPluginFramework::TextBox::TextBox(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::Rect<int> const&)
00137bb0 00000198 T CTRPluginFramework::TextBox::TextBox(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::Rect<int> const&)
00137d48 000000e8 T CTRPluginFramework::TextBox::Update(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)
00137e30 00000004 T CTRPluginFramework::TouchKey::~TouchKey()
00137e30 00000004 T CTRPluginFramework::TouchKey::~TouchKey()
00137e34 00000014 T CTRPluginFramework::TouchKey::~TouchKey()
00137e48 000000a0 T CTRPluginFramework::TouchKey::Update(bool, CTRPluginFramework::Vector<int> const&)
00137ee8 0000005c T CTRPluginFramework::TouchKey::TouchKey(int, CTRPluginFramework::Rect<int>, bool)
00137ee8 0000005c T CTRPluginFramework::TouchKey::TouchKey(int, CTRPluginFramework::Rect<int>, bool)
00137f44 000000a0 T CTRPluginFramework::TouchKey::TouchKey(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::Rect<int>, int, bool)
00137f44 000000a0 T CTRPluginFramework::TouchKey::TouchKey(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::Rect<int>, int, bool)
00137fe4 0000005c T CTRPluginFramework::TouchKey::TouchKey(int, int (*)(int, int, bool), CTRPluginFramework::Rect<int>, bool)
00137fe4 0000005c T CTRPluginFramework::TouchKey::TouchKey(int, int (*)(int, int, bool), CTRPluginFramework::Rect<int>, bool)
00138040 00000008 T CTRPluginFramework::TouchKey::Enable(bool)
00138048 00000128 T CTRPluginFramework::TouchKey::DrawCharacter(CTRPluginFramework::Rect<int> const&, CTRPluginFramework::Color const&)
00138170 00000088 T CTRPluginFramework::TouchKey::Draw()
001381f8 00000098 T CTRPluginFramework::TouchKey::operator()(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)
00138290 000000ac T CTRPluginFramework::TouchKeyString::TouchKeyString(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::Rect<int>, bool)
00138290 000000ac T CTRPluginFramework::TouchKeyString::TouchKeyString(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::Rect<int>, bool)
0013833c 000000b0 T CTRPluginFramework::TouchKeyString::Draw()
001383ec 000000a0 T CTRPluginFramework::TouchKeyString::Update(bool, CTRPluginFramework::Vector<int> const&)
0013848c 00000018 T CTRPluginFramework::TouchKeyString::Scroll(float)
001384a4 00000030 T CTRPluginFramework::TouchKeyString::operator()()
001384d4 00000014 T CTRPluginFramework::UIContainer::UIContainer()
001384d4 00000014 T CTRPluginFramework::UIContainer::UIContainer()
001384e8 00000024 T CTRPluginFramework::UIContainer::Draw()
0013850c 00000034 T CTRPluginFramework::UIContainer::Update(bool, CTRPluginFramework::Vector<int> const&)
00138540 00000024 T CTRPluginFramework::UIContainer::ExecuteAll()
00138564 000000d8 W void std::vector<CTRPluginFramework::Drawable*, std::allocator<CTRPluginFramework::Drawable*> >::_M_realloc_insert<CTRPluginFramework::Drawable* const&>(__gnu_cxx::__normal_iterator<CTRPluginFramework::Drawable**, std::vector<CTRPluginFramework::Drawable*, std::allocator<CTRPluginFramework::Drawable*> > >, CTRPluginFramework::Drawable* const&)
0013863c 00000044 T CTRPluginFramework::UIContainer::operator+=(CTRPluginFramework::Drawable*)
00138680 000000e4 T CTRPluginFramework::Converter::Converter()
00138680 000000e4 T CTRPluginFramework::Converter::Converter()
00138764 00000010 T CTRPluginFramework::Converter::Instance()
00138774 00000108 T CTRPluginFramework::Converter::_Draw()
0013887c 00000014 W std::deque<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >::~deque()
0013887c 00000014 W std::deque<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >::~deque()
00138890 000001e0 T CTRPluginFramework::Converter::operator()()
00138a70 00000078 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(char const*, std::allocator<char> const&) [clone .isra.26]
00138ae8 0000004c T CTRPluginFramework::GatewayRAMDumper::GatewayRAMDumper()
00138ae8 0000004c T CTRPluginFramework::GatewayRAMDumper::GatewayRAMDumper()
00138b34 000000bc T CTRPluginFramework::GatewayRAMDumper::_WriteHeader()
00138bf0 000000e8 T CTRPluginFramework::GatewayRAMDumper::_DrawProgress()
00138cd8 00000064 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > std::operator+<char, std::char_traits<char>, std::allocator<char> >(char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
00138d3c 00000314 T CTRPluginFramework::GatewayRAMDumper::_SelectRegion()
00139050 000000f8 W __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > std::__remove_if<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, __gnu_cxx::__ops::_Iter_equals_val<char const> >(__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, __gnu_cxx::__ops::_Iter_equals_val<char const>)
00139148 00000248 T CTRPluginFramework::GatewayRAMDumper::_OpenFile()
00139390 00000280 T CTRPluginFramework::GatewayRAMDumper::operator()()
00139610 00000004 W CTRPluginFramework::IconButton<CTRPluginFramework::GuideReader, void>::~IconButton()
00139610 00000004 W CTRPluginFramework::IconButton<CTRPluginFramework::GuideReader, void>::~IconButton()
00139614 0000001c W CTRPluginFramework::IconButton<CTRPluginFramework::GuideReader, void>::Draw()
00139630 00000014 W CTRPluginFramework::IconButton<CTRPluginFramework::GuideReader, void>::~IconButton()
00139644 00000064 W CTRPluginFramework::IconButton<CTRPluginFramework::GuideReader, void>::operator()()
001396a8 00000078 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(char const*, std::allocator<char> const&) [clone .isra.36]
00139720 000000c0 T CTRPluginFramework::GuideReader::_LoadBMP()
001397e0 000002bc t CTRPluginFramework::CreateFolder(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)
00139a9c 00000228 T CTRPluginFramework::GuideReader::GuideReader()
00139a9c 00000228 T CTRPluginFramework::GuideReader::GuideReader()
00139cc4 00000414 t CTRPluginFramework::GuideReader::_ProcessEvent(CTRPluginFramework::Event&) [clone .part.41]
0013a0d8 00000018 T CTRPluginFramework::GuideReader::_ProcessEvent(CTRPluginFramework::Event&)
0013a0f0 00000080 W CTRPluginFramework::IconButton<CTRPluginFramework::GuideReader, void>::Update(bool, CTRPluginFramework::Vector<int> const&)
0013a170 00000154 T CTRPluginFramework::GuideReader::Draw()
0013a2c4 00000070 T CTRPluginFramework::GuideReader::operator()(std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >&, CTRPluginFramework::Time&)
0013a334 00000004 W CTRPluginFramework::IconButton<CTRPluginFramework::HexEditor, void>::~IconButton()
0013a334 00000004 W CTRPluginFramework::IconButton<CTRPluginFramework::HexEditor, void>::~IconButton()
0013a338 0000001c W CTRPluginFramework::IconButton<CTRPluginFramework::HexEditor, void>::Draw()
0013a354 00000014 W CTRPluginFramework::IconButton<CTRPluginFramework::HexEditor, void>::~IconButton()
0013a368 00000064 W CTRPluginFramework::IconButton<CTRPluginFramework::HexEditor, void>::operator()()
0013a3cc 00000078 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(char const*, std::allocator<char> const&) [clone .isra.48]
0013a444 0000001c T CTRPluginFramework::HexEditor::_RenderBottom()
0013a460 0000002c T CTRPluginFramework::HexEditor::_GetCursorAddress() const
0013a48c 00000080 T CTRPluginFramework::HexEditor::_CreateCheat()
0013a50c 00000118 T CTRPluginFramework::HexEditor::Goto(unsigned long, bool)
0013a624 00000030 T CTRPluginFramework::HexEditor::_MoveBackward()
0013a654 00000044 T CTRPluginFramework::HexEditor::_MoveForward()
0013a698 00000044 T CTRPluginFramework::HexEditor::_ApplyChanges()
0013a6dc 00000034 T CTRPluginFramework::HexEditor::_DiscardChanges()
0013a710 00000054 T CTRPluginFramework::HexEditor::_GotoPreviousRegion()
0013a764 00000054 T CTRPluginFramework::HexEditor::_GotoNextRegion()
0013a7b8 00000280 T CTRPluginFramework::HexEditor::_ProcessEvent(CTRPluginFramework::Event&)
0013aa38 00000038 T CTRPluginFramework::HexEditor::_GetChar(unsigned char*, int)
0013aa70 000005e4 T CTRPluginFramework::HexEditor::_RenderTop()
0013b054 0000022c T CTRPluginFramework::HexEditor::HexEditor(unsigned long)
0013b054 0000022c T CTRPluginFramework::HexEditor::HexEditor(unsigned long)
0013b280 00000044 W std::vector<CTRPluginFramework::TouchKey, std::allocator<CTRPluginFramework::TouchKey> >::at(unsigned int)
0013b2c4 000001e8 T CTRPluginFramework::HexEditor::_PromptForAddress(int)
0013b4ac 00000058 T CTRPluginFramework::HexEditor::_SaveThisAddress()
0013b504 000000e8 T CTRPluginFramework::HexEditor::_JumpTo(int)
0013b5ec 00000080 W CTRPluginFramework::IconButton<CTRPluginFramework::HexEditor, void>::Update(bool, CTRPluginFramework::Vector<int> const&)
0013b66c 00000044 T CTRPluginFramework::HexEditor::_Update()
0013b6b0 00000150 T CTRPluginFramework::HexEditor::_BrowseHistory()
0013b800 000002b0 T CTRPluginFramework::HexEditor::operator()(std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >&)
0013bab0 00000078 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(char const*, std::allocator<char> const&) [clone .isra.36]
0013bb28 000000dc T CTRPluginFramework::Menu::Menu(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, int (*)(int, int))
0013bb28 000000dc T CTRPluginFramework::Menu::Menu(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, int (*)(int, int))
0013bc04 00000118 T CTRPluginFramework::Menu::Menu(CTRPluginFramework::MenuFolderImpl*, int (*)(int, int))
0013bc04 00000118 T CTRPluginFramework::Menu::Menu(CTRPluginFramework::MenuFolderImpl*, int (*)(int, int))
0013bd1c 0000003c T CTRPluginFramework::Menu::Open(CTRPluginFramework::MenuFolderImpl*, int)
0013bd58 00000030 T CTRPluginFramework::Menu::~Menu()
0013bd58 00000030 T CTRPluginFramework::Menu::~Menu()
0013bd88 0000000c T CTRPluginFramework::Menu::Append(CTRPluginFramework::MenuItem*) const
0013bd94 00000008 T CTRPluginFramework::Menu::GetFolder() const
0013bd9c 00000008 T CTRPluginFramework::Menu::GetRootFolder() const
0013bda4 00000028 T CTRPluginFramework::Menu::GetSelectedItem() const
0013bdcc 000003a4 T CTRPluginFramework::Menu::Draw() const
0013c170 00000084 T CTRPluginFramework::Menu::_ScrollUp(int)
0013c1f4 00000084 T CTRPluginFramework::Menu::_ScrollDown(int)
0013c278 00000230 T CTRPluginFramework::Menu::ProcessEvent(CTRPluginFramework::Event&, CTRPluginFramework::MenuItem**)
0013c4a8 00000170 T CTRPluginFramework::Menu::Update(CTRPluginFramework::Time const&)
0013c618 00000068 T CTRPluginFramework::Menu::ShowNote()
0013c680 00000008 T CTRPluginFramework::Menu::CloseNote()
0013c688 00000008 T CTRPluginFramework::Menu::IsNoteOpen()
0013c690 00000040 W std::vector<CTRPluginFramework::MenuItem*, std::allocator<CTRPluginFramework::MenuItem*> >::_M_erase(__gnu_cxx::__normal_iterator<CTRPluginFramework::MenuItem**, std::vector<CTRPluginFramework::MenuItem*, std::allocator<CTRPluginFramework::MenuItem*> > >)
0013c6d0 00000044 T CTRPluginFramework::Menu::Pop()
0013c714 000000bc T CTRPluginFramework::Menu::Insert(CTRPluginFramework::MenuItem*)
0013c7d0 00000020 W CTRPluginFramework::MenuEntryTools::~MenuEntryTools()
0013c7d0 00000020 W CTRPluginFramework::MenuEntryTools::~MenuEntryTools()
0013c7f0 0000001c W CTRPluginFramework::MenuEntryTools::~MenuEntryTools()
0013c80c 00000094 T CTRPluginFramework::MenuEntryTools::MenuEntryTools(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, void (*)(), int (*)(int, int), void*)
0013c80c 00000094 T CTRPluginFramework::MenuEntryTools::MenuEntryTools(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, void (*)(), int (*)(int, int), void*)
0013c8a0 00000060 T CTRPluginFramework::MenuEntryTools::MenuEntryTools(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, void (*)(), bool, bool, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
0013c8a0 00000060 T CTRPluginFramework::MenuEntryTools::MenuEntryTools(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, void (*)(), bool, bool, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
0013c900 00000060 T CTRPluginFramework::MenuEntryTools::MenuEntryTools(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, void (*)(CTRPluginFramework::MenuEntryTools*), bool, bool, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
0013c900 00000060 T CTRPluginFramework::MenuEntryTools::MenuEntryTools(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, void (*)(CTRPluginFramework::MenuEntryTools*), bool, bool, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
0013c960 00000004 T CTRPluginFramework::MenuEntryTools::TriggerState()
0013c964 0000000c T CTRPluginFramework::PluginMenuHome::_actionReplayBtn_OnClick()
0013c970 0000000c T CTRPluginFramework::PluginMenuHome::_gameGuideBtn_OnClick()
0013c97c 0000000c T CTRPluginFramework::PluginMenuHome::_searchBtn_OnClick()
0013c988 0000000c T CTRPluginFramework::PluginMenuHome::_toolsBtn_OnClick()
0013c994 00000004 W CTRPluginFramework::IconButton<CTRPluginFramework::PluginMenuHome, void>::~IconButton()
0013c994 00000004 W CTRPluginFramework::IconButton<CTRPluginFramework::PluginMenuHome, void>::~IconButton()
0013c998 00000004 W CTRPluginFramework::ToggleButton<CTRPluginFramework::PluginMenuHome, void>::~ToggleButton()
0013c998 00000004 W CTRPluginFramework::ToggleButton<CTRPluginFramework::PluginMenuHome, void>::~ToggleButton()
0013c99c 0000001c W CTRPluginFramework::ToggleButton<CTRPluginFramework::PluginMenuHome, void>::Draw()
0013c9b8 0000001c W CTRPluginFramework::IconButton<CTRPluginFramework::PluginMenuHome, void>::Draw()
0013c9d4 00000014 W CTRPluginFramework::IconButton<CTRPluginFramework::PluginMenuHome, void>::~IconButton()
0013c9e8 00000014 W CTRPluginFramework::ToggleButton<CTRPluginFramework::PluginMenuHome, void>::~ToggleButton()
0013c9fc 000000e8 T CTRPluginFramework::PluginMenuHome::_showStarredBtn_OnClick()
0013cae4 0000003c T CTRPluginFramework::PluginMenuHome::_keyboardBtn_OnClick()
0013cb20 00000058 t CTRPluginFramework::SelectableEntryCount(CTRPluginFramework::MenuFolderImpl&)
0013cb78 000000b4 t CTRPluginFramework::ScrollUp(int&, CTRPluginFramework::MenuFolderImpl&, int)
0013cc2c 000000e0 t CTRPluginFramework::ScrollDown(int&, CTRPluginFramework::MenuFolderImpl&, int)
0013cd0c 0000008c T CTRPluginFramework::PluginMenuHome::_controllerBtn_OnClick()
0013cd98 0000002c T CTRPluginFramework::PluginMenuHome::_InfoBtn_OnClick()
0013cdc4 00000064 W CTRPluginFramework::ToggleButton<CTRPluginFramework::PluginMenuHome, void>::operator()()
0013ce28 00000064 W CTRPluginFramework::IconButton<CTRPluginFramework::PluginMenuHome, void>::operator()()
0013ce8c 00000078 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(char const*, std::allocator<char> const&) [clone .isra.38]
0013cf04 00000044 T CTRPluginFramework::decoder(char*, unsigned long const*, int)
0013cf48 0000000c T CTRPluginFramework::PluginMenuHome::Append(CTRPluginFramework::MenuItem*) const
0013cf54 0000032c T CTRPluginFramework::PluginMenuHome::_RenderTop()
0013d280 00000104 T CTRPluginFramework::PluginMenuHome::_RenderBottom()
0013d384 00000260 T CTRPluginFramework::PluginMenuHome::_Update(CTRPluginFramework::Time)
0013d5e4 00000104 T CTRPluginFramework::PluginMenuHome::_TriggerEntry()
0013d6e8 000003dc T CTRPluginFramework::PluginMenuHome::_ProcessEvent(CTRPluginFramework::Event&)
0013dac4 000000d0 T CTRPluginFramework::PluginMenuHome::UnStar(CTRPluginFramework::MenuItem*)
0013db94 00000080 T CTRPluginFramework::PluginMenuHome::_StarItem()
0013dc14 0000006c T CTRPluginFramework::PluginMenuHome::Init()
0013dc80 00000084 T CTRPluginFramework::PluginMenuHome::AddPluginVersion(unsigned long)
0013dd04 0000005c T CTRPluginFramework::PluginMenuHome::Close(CTRPluginFramework::MenuFolderImpl*)
0013dd60 00000158 W CTRPluginFramework::Button<CTRPluginFramework::PluginMenuHome, void>::Button(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::PluginMenuHome&, void (CTRPluginFramework::PluginMenuHome::*)(), CTRPluginFramework::Rect<int>, int (*)(int, int))
0013dd60 00000158 W CTRPluginFramework::Button<CTRPluginFramework::PluginMenuHome, void>::Button(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::PluginMenuHome&, void (CTRPluginFramework::PluginMenuHome::*)(), CTRPluginFramework::Rect<int>, int (*)(int, int))
0013deb8 00000038 W CTRPluginFramework::Button<CTRPluginFramework::PluginMenuHome, void>::RoundedRatio(unsigned long)
0013def0 0000071c T CTRPluginFramework::PluginMenuHome::PluginMenuHome(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)
0013def0 0000071c T CTRPluginFramework::PluginMenuHome::PluginMenuHome(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)
0013e60c 00000078 W CTRPluginFramework::Rect<int>::Contains(CTRPluginFramework::Vector<int> const&) const
0013e684 00000080 W CTRPluginFramework::IconButton<CTRPluginFramework::PluginMenuHome, void>::Update(bool, CTRPluginFramework::Vector<int> const&)
0013e704 00000080 W CTRPluginFramework::ToggleButton<CTRPluginFramework::PluginMenuHome, void>::Update(bool, CTRPluginFramework::Vector<int> const&)
0013e784 0000010c T CTRPluginFramework::PluginMenuHome::operator()(std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >&, int&, CTRPluginFramework::Time&)
0013e890 00000008 T CTRPluginFramework::ActionReplay_IsValidAddress(unsigned long, bool)
0013e898 00000024 T CTRPluginFramework::Write32(unsigned long, unsigned long)
0013e8bc 00000024 T CTRPluginFramework::Write16(unsigned long, unsigned short)
0013e8e0 00000024 T CTRPluginFramework::Write8(unsigned long, unsigned char)
0013e904 00000028 T CTRPluginFramework::Read32(unsigned long, unsigned long&)
0013e92c 00000028 T CTRPluginFramework::Read16(unsigned long, unsigned short&)
0013e954 00000028 T CTRPluginFramework::Read8(unsigned long, unsigned char&)
0013e97c 00000020 W std::vector<CTRPluginFramework::ARCode, std::allocator<CTRPluginFramework::ARCode> >::clear()
0013e99c 00001444 T CTRPluginFramework::ARHandler::_Execute(std::vector<CTRPluginFramework::ARCode, std::allocator<CTRPluginFramework::ARCode> > const&)
0013fde0 00000064 T CTRPluginFramework::ARHandler::Execute(std::vector<CTRPluginFramework::ARCode, std::allocator<CTRPluginFramework::ARCode> > const&, unsigned long (&) [2])
0013fe44 00000020 t _GLOBAL__sub_I__ZN18CTRPluginFramework9ARHandler6OffsetE
0013fe64 00000024 t addrMapNodeComparator(rbtree_node const*, rbtree_node const*)
0013fe88 00000004 t addrMapNodeDestructor(rbtree_node*)
0013fe8c 000000d8 T mappableAlloc
0013ff64 00000050 T mappableFree
0013ffb4 00000008 T envGetHandle
0013ffbc 0000005c t getSysTime
00140018 000000fc T __libctru_gtod
00140114 00000014 W __appExit
00140128 00000078 W __libctru_exit
001401a0 00000050 T rbtree_node_next
001401f0 00000004 T operator delete[](void*)
001401f4 00000004 T operator new[](unsigned int)
001401f8 0000005c T __cxa_guard_acquire
00140254 0000000c T __cxa_guard_release
00140260 00000060 t __gxx_exception_cleanup(_Unwind_Reason_Code, _Unwind_Control_Block*)
001402c0 00000070 T __cxa_init_primary_exception
00140330 00000054 T __cxa_throw
00140384 000000b0 T __cxa_rethrow
00140434 00000020 T __gnu_cxx::recursive_init_error::~recursive_init_error()
00140434 00000020 T __gnu_cxx::recursive_init_error::~recursive_init_error()
00140454 0000002c T __gnu_cxx::recursive_init_error::~recursive_init_error()
00140480 00000004 T std::exception::~exception()
00140480 00000004 T std::exception::~exception()
00140484 00000004 T std::bad_exception::~bad_exception()
00140484 00000004 T std::bad_exception::~bad_exception()
00140488 0000000c T transaction clone for std::exception::what() const
00140488 0000000c T std::exception::what() const
00140494 0000000c T transaction clone for std::bad_exception::what() const
00140494 0000000c T std::bad_exception::what() const
001404a0 00000018 T std::bad_exception::~bad_exception()
001404b8 00000020 T __cxxabiv1::__si_class_type_info::~__si_class_type_info()
001404b8 00000020 T __cxxabiv1::__si_class_type_info::~__si_class_type_info()
001404d8 0000002c T __cxxabiv1::__si_class_type_info::~__si_class_type_info()
00140504 0000006c T __cxxabiv1::__si_class_type_info::__do_find_public_src(int, void const*, __cxxabiv1::__class_type_info const*, void const*) const
00140570 000000d4 T __cxxabiv1::__si_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const
00140644 00000044 T __cxxabiv1::__si_class_type_info::__do_upcast(__cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__upcast_result&) const
00140688 0000000c T __cxa_get_globals_fast
00140694 0000000c T __cxa_get_globals
001406a0 00000004 T operator delete(void*, unsigned int)
001406a4 000000d0 T __cxa_begin_catch
00140774 000000d8 T __cxa_end_catch
0014084c 00000004 T std::type_info::~type_info()
0014084c 00000004 T std::type_info::~type_info()
00140850 00000008 T std::type_info::__is_pointer_p() const
00140850 00000008 T std::type_info::__is_function_p() const
00140858 0000004c T std::type_info::operator==(std::type_info const&) const
001408a4 00000008 T __cxa_pure_virtual
001408ac 00000168 t read_encoded_value_with_base(unsigned char, unsigned int, unsigned char const*, unsigned int*)
00140a14 00000060 t base_of_encoded_value(unsigned char, _Unwind_Context*) [clone .part.3]
00140a74 000000e0 t parse_lsda_header(_Unwind_Context*, unsigned char const*, lsda_header_info*)
00140b54 0000074c T __gxx_personality_v0
001412a0 00000004 T operator delete(void*)
001412a4 0000005c T operator new(unsigned int)
00141300 00000010 T __aeabi_atexit
00141310 000000d0 t (anonymous namespace)::pool::free(void*) [clone .constprop.4]
001413e0 000000b4 t (anonymous namespace)::pool::allocate(unsigned int) [clone .constprop.5]
00141494 00000044 T __cxa_allocate_exception
001414d8 00000030 T __cxa_free_exception
00141508 00000040 t _GLOBAL__sub_I__ZN9__gnu_cxx9__freeresEv
00141548 0000005c T __cxxabiv1::__class_type_info::__do_upcast(__cxxabiv1::__class_type_info const*, void**) const
001415a4 00000014 T __cxxabiv1::__class_type_info::__do_find_public_src(int, void const*, __cxxabiv1::__class_type_info const*, void const*) const
001415b8 00000020 T __cxxabiv1::__class_type_info::~__class_type_info()
001415b8 00000020 T __cxxabiv1::__class_type_info::~__class_type_info()
001415d8 0000002c T __cxxabiv1::__class_type_info::~__class_type_info()
00141604 00000068 T __cxxabiv1::__class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const
0014166c 0000002c T __cxxabiv1::__class_type_info::__do_upcast(__cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__upcast_result&) const
00141698 00000044 T __cxxabiv1::__class_type_info::__do_catch(std::type_info const*, void**, unsigned int) const
001416dc 00000018 T std::__detail::_List_node_base::_M_hook(std::__detail::_List_node_base*)
001416f4 00000014 T std::__detail::_List_node_base::_M_unhook()
00141708 0000002c T std::__throw_bad_alloc()
00141734 00000040 T std::__throw_logic_error(char const*)
00141774 00000040 T std::__throw_invalid_argument(char const*)
001417b4 00000040 T std::__throw_length_error(char const*)
001417f4 00000040 T std::__throw_out_of_range(char const*)
00141834 0000007c T std::__throw_out_of_range_fmt(char const*, ...)
001418b0 00000038 T std::logic_error::logic_error(char const*)
001418b0 00000038 T std::logic_error::logic_error(char const*)
001418e8 00000020 T std::invalid_argument::invalid_argument(char const*)
001418e8 00000020 T std::invalid_argument::invalid_argument(char const*)
00141908 00000020 T std::length_error::length_error(char const*)
00141908 00000020 T std::length_error::length_error(char const*)
00141928 00000020 T std::out_of_range::out_of_range(char const*)
00141928 00000020 T std::out_of_range::out_of_range(char const*)
00141948 00000084 W std::string::_Rep::_S_create(unsigned int, unsigned int, std::allocator<char> const&)
001419cc 00000004 W std::string::_Rep::_M_destroy(std::allocator<char> const&)
001419d0 000000b0 W char* std::string::_S_construct<char const*>(char const*, char const*, std::allocator<char> const&, std::forward_iterator_tag)
00141a80 00000040 W std::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(char const*, std::allocator<char> const&)
00141a80 00000040 W std::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(char const*, std::allocator<char> const&)
00141ac0 00000054 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_create(unsigned int&, unsigned int)
00141b14 00000014 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_dispose()
00141b28 00000024 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_S_copy_chars(char*, char*, char*)
00141b4c 00000024 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_S_copy_chars(char*, char const*, char const*)
00141b70 000000b8 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_assign(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
00141c28 00000110 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_mutate(unsigned int, unsigned int, char const*, unsigned int)
00141d38 00000074 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_erase(unsigned int, unsigned int)
00141dac 0000006c W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&&)
00141dac 0000006c W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&&)
00141e18 00000024 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::~basic_string()
00141e18 00000024 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::~basic_string()
00141e3c 00000090 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::operator=(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&&)
00141ecc 00000114 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::reserve(unsigned int)
00141fe0 0000006c W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::push_back(char)
0014204c 0000006c W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::erase(unsigned int, unsigned int)
001420b8 00000028 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::erase(__gnu_cxx::__normal_iterator<char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >)
001420e0 00000044 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::erase(__gnu_cxx::__normal_iterator<char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, __gnu_cxx::__normal_iterator<char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >)
00142124 00000018 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::pop_back()
0014213c 00000104 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_replace_aux(unsigned int, unsigned int, unsigned int, char)
00142240 00000048 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::insert(unsigned int, unsigned int, char)
00142288 00000288 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_replace(unsigned int, unsigned int, char const*, unsigned int)
00142510 00000038 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::operator=(char const*)
00142548 0000004c W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::insert(unsigned int, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
00142594 00000060 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::insert(unsigned int, char const*)
001425f4 00000094 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_append(char const*, unsigned int)
00142688 00000010 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::append(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
00142698 00000010 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::operator+=(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
001426a8 0000002c W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::append(char const*, unsigned int)
001426d4 00000048 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::append(char const*)
0014271c 00000048 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::operator+=(char const*)
00142764 000000a8 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::find(char const*, unsigned int, unsigned int) const
0014280c 00000010 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::find(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned int) const
0014281c 00000070 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::rfind(char const*, unsigned int, unsigned int) const
0014288c 00000030 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::rfind(char const*, unsigned int) const
001428bc 0000004c W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::compare(char const*) const
00142908 000000b0 W void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct<char*>(char*, char*, std::forward_iterator_tag)
001429b8 00000030 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
001429b8 00000030 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
001429e8 000000b0 W void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct<char const*>(char const*, char const*, std::forward_iterator_tag)
00142a98 00000078 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::substr(unsigned int, unsigned int) const
00142b10 00000070 T __gnu_cxx::__throw_insufficient_space(char const*, char const*)
00142b80 00000078 T __gnu_cxx::__concat_size_t(char*, unsigned int, unsigned int)
00142bf8 00000100 T __gnu_cxx::__snprintf_lite(char*, unsigned int, char const*, std::__va_list)
00142cf8 00000014 T std::get_new_handler()
00142d0c 00000034 T __cxxabiv1::__terminate(void (*)())
00142d40 00000018 T std::terminate()
00142d58 0000000c T __cxxabiv1::__unexpected(void (*)())
00142d64 00000018 T std::unexpected()
00142d7c 00000014 T std::get_terminate()
00142d90 00000014 T std::get_unexpected()
00142da4 0000000c T std::bad_alloc::what() const
00142db0 00000020 T std::bad_alloc::~bad_alloc()
00142db0 00000020 T std::bad_alloc::~bad_alloc()
00142dd0 0000002c T std::bad_alloc::~bad_alloc()
00142dfc T __cxa_end_cleanup
00142e0c 00000138 T __cxa_type_match
00142f44 000000b4 T __cxa_begin_cleanup
00142ff8 000000b4 T __gnu_end_cleanup
001430ac 00000070 t __cxxabiv1::__is_gxx_exception_class(char*)
0014311c 0000002c T __cxa_call_terminate
00143148 0000013c T __cxa_call_unexpected
00143284 00000008 T std::logic_error::what() const
0014328c 00000064 T std::logic_error::~logic_error()
0014328c 00000064 T std::logic_error::~logic_error()
001432f0 0000001c T std::logic_error::~logic_error()
0014330c 00000020 T std::invalid_argument::~invalid_argument()
0014330c 00000020 T std::invalid_argument::~invalid_argument()
0014332c 00000028 T std::invalid_argument::~invalid_argument()
00143354 00000020 T std::length_error::~length_error()
00143354 00000020 T std::length_error::~length_error()
00143374 00000028 T std::length_error::~length_error()
0014339c 00000020 T std::out_of_range::~out_of_range()
0014339c 00000020 T std::out_of_range::~out_of_range()
001433bc 00000028 T std::out_of_range::~out_of_range()
001433e8 00000174 T ceil
0014355c 000000b8 T ceilf
00143618 00000174 T floor
0014378c 00000088 T roundf
00143818 00000020 T log2
00143838 0000015c T log
00143998 000002c4 T __ieee754_log
00143c5c 00000008 T matherr
00143c68 00000010 T nan
00143c78 0000002c t __aeabi_f2lz
00143c78 0000002c T __fixsfdi
00143ca8 00000050 t __aeabi_f2ulz
00143ca8 00000050 T __fixunssfdi
00143cf8 00000158 t __udivmoddi4
00143e50 00000018 t selfrel_offset31
00143e68 0000008c t search_EIT_table
00143ef4 00000040 t __gnu_unwind_get_pr_addr
00143f34 00000118 t get_eit_entry
0014404c 00000088 t restore_non_core_regs
001440d4 00000014 t _Unwind_decode_typeinfo_ptr.isra.0
001440e8 00000004 t _Unwind_DebugHook
001440ec 00000068 t unwind_phase2
00144154 00000134 t unwind_phase2_forced
00144288 000000a8 t __gnu_Unwind_RaiseException
00144330 00000024 t __gnu_Unwind_ForcedUnwind
00144354 00000074 t __gnu_Unwind_Resume
001443c8 00000020 t __gnu_Unwind_Resume_or_Rethrow
001443e8 00000004 t _Unwind_Complete
001443ec 00000018 t _Unwind_DeleteException
00144404 00000068 t _Unwind_VRS_Get
0014446c 0000002c t _Unwind_GetGR
00144498 00000068 t _Unwind_VRS_Set
00144500 0000002c t _Unwind_SetGR
0014452c 000000c0 t __gnu_Unwind_Backtrace
001445ec 0000044c t __gnu_unwind_pr_common
00144a38 00000008 T __aeabi_unwind_cpp_pr0
00144a40 00000008 W __aeabi_unwind_cpp_pr1
00144a48 00000008 W __aeabi_unwind_cpp_pr2
00144a50 00000418 t _Unwind_VRS_Pop
00144e68 00000060 t next_unwind_byte
00144ec8 0000002c t _Unwind_GetGR.constprop.0
00144ef4 00000004 t unwind_UCB_from_context
00144ef8 000003c8 t __gnu_unwind_execute
001452c0 00000048 t __gnu_unwind_frame
00145308 00000010 t _Unwind_GetRegionStart
00145318 0000001c t _Unwind_GetLanguageSpecificData
00145334 00000008 t _Unwind_GetDataRelBase
0014533c 00000008 t _Unwind_GetTextRelBase
00145344 00000010 T ctime
00145354 00000014 T __cxa_atexit
00145368 0000000c T __errno
00145374 00000034 T exit
001453a8 00000040 T __libc_fini_array
001453e8 0000007c T __libc_init_array
00145464 0000001c T isspace
00145480 0000001c T isxdigit
0014549c 0000001c T localtime
001454b8 00000364 T localtime_r
0014581c 00000024 T __locale_mb_cur_max
00145840 00000008 T __locale_ctype_ptr_l
00145848 00000024 T __locale_ctype_ptr
0014586c 00000018 T malloc
00145884 00000018 T free
0014589c 000007a8 T _malloc_r
00146044 000002fc T __utf8_mbtowc
00146340 00000100 T memchr
00146440 000000fc T memcmp
0014653c 0000010c T memcpy
00146648 0000013c T memmove
00146784 00000110 T memset
00146894 0000000c T __malloc_lock
001468a0 0000000c T __malloc_unlock
001468ac 00000064 T sprintf
00146910 00000008 T __seofread
00146918 000000f0 T strcpy
00146a08 00000158 t iso_year_adjust
00146b60 00001024 t __strftime
00147b84 00000050 T strftime
00147bd4 0000005c T strlen
00147c30 000000f8 T strncmp
00147d28 000000d8 T strncpy
00147e00 00000054 t sulp
00147e58 00001464 T _strtod_l
001492c0 000000b8 T strtof
00149378 000001bc t _strtol_l.isra.0
00149534 00000050 T _strtol_r
00149588 00000260 t _strtoull_l.isra.0
001497e8 00000050 T _strtoull_r
00149838 000001d0 t _strtoul_l.isra.0
00149a08 00000050 T _strtoul_r
00149a58 00000054 T strtoul
00149aac 000074a0 t get_arg
00150f50 00003e2c T _svfprintf_r
00154d7c 00000038 T time
00154db4 00000218 T __tzcalc_limits
00154fcc 0000000c T __tz_lock
00154fd8 0000000c T __tz_unlock
00154fe4 00000010 T _tzset_unlocked
00154ff4 0000049c T _tzset_unlocked_r
00155490 000000a0 T _vsnprintf_r
00155530 00000038 T vsnprintf
00155568 000000a0 T _wcrtomb_r
00155608 00000020 T _wcsrtombs_r
00155628 000000e8 T __utf8_wctomb
00155710 0000000c T abs
0015571c 0000001c T asctime
00155738 00000078 T asctime_r
001557b0 000000f4 T __register_exitproc
001558a4 00000170 T __call_exitprocs
00155a14 000001bc t quorem
00155bd0 00001224 T _dtoa_r
00156df4 000000f8 T _malloc_trim_r
00156eec 000002e4 T _free_r
001571d0 00000104 t rshift
001572d4 000007f8 T __gethex
00157acc 00000060 T __match
00157b2c 00000254 T __hexnan
00157d80 000000c8 T _findenv_r
00157e48 00000018 T _getenv_r
00157e60 0000000c T __gettzinfo
00157e6c 00000280 T gmtime_r
001580ec 0000000c T labs
001580f8 00000008 T __localeconv_l
00158100 00000024 T _localeconv_r
00158124 00000088 T _Balloc
001581ac 0000001c T _Bfree
001581c8 000000d0 T __multadd
00158298 000000e0 T __s2b
00158378 00000058 T __hi0bits
001583d0 0000009c T __lo0bits
0015846c 00000020 T __i2b
0015848c 000001d4 T __multiply
00158660 00000100 T __pow5mult
00158760 000000e8 T __lshift
00158848 0000005c T __mcmp
001588a4 00000168 T __mdiff
00158a0c 00000078 T __ulp
00158a84 000000d0 T __b2d
00158b54 00000104 T __d2b
00158c58 00000084 T __ratio
00158cdc 00000088 T __copybits
00158d64 00000078 T __any_on
00158ddc 0000000c T nanf
00158de8 0000009c T frexp
00158e84 00000064 T siprintf
00158ee8 00000074 T siscanf
00158f5c 000000c8 T sniprintf
00159024 000074a0 t get_arg
001604c4 00000188 T __ssprint_r
0016064c 0000295c T _svfiprintf_r
00162fa8 000000dc T _sungetc_r
00163084 0000006c T __ssrefill_r
001630f0 000000c8 T _sfread_r
001631b8 00001d84 T __ssvfiscanf_r
00164f3c 000000a4 T __submore
00164fe0 00000170 T _wcsnrtombs_l
00165150 00000064 T _wcsnrtombs_r
001651b4 00000090 T _calloc_r
00165244 0000000c T __env_lock
00165250 0000000c T __env_unlock
0016525c 00000074 T iswspace
001652d0 000001e0 t __jp2uc
001654b0 000000c4 T _jp2uc
00165574 000000b4 T _mbrtowc_r
00165628 000004d0 T _realloc_r
00165af8 000000cc T __sccl
00165bc4 00000274 t _strtoll_l.isra.0
00165e38 00000050 T _strtoll_r
00165e88 0000002c T _gettimeofday_r
00165eb4 00000070 T _sbrk_r
00165f24 00000024 T _exit
00165f48 00000018 T __libc_lock_acquire
00165f60 00000018 T __libc_lock_release
00165f78 00000018 T __libc_lock_acquire_recursive
00165f90 00000018 T __libc_lock_release_recursive
00165fa8 00000028 T __getreent
00165fd0 T _fini
00166020 000001e8 r CTRPluginFramework::eliminationMode(CTRPluginFramework::MenuEntry*)::buffer1
00166208 0000000c r CTRPluginFramework::eliminationMode(CTRPluginFramework::MenuEntry*)::buffer2
00166214 00000014 r CTRPluginFramework::eliminationMode(CTRPluginFramework::MenuEntry*)::buffer3
00166228 0000001c r CTRPluginFramework::eliminationMode(CTRPluginFramework::MenuEntry*)::buffer4
00166250 00000030 r ._184
00166288 00000058 r CTRPluginFramework::g_OSDPattern
001662e0 00000a00 r font
00166ce0 00000038 r CTRPluginFramework::stable
00166d18 00000038 r CTRPluginFramework::ktable
00166d50 0000001c R vtable for CTRPluginFramework::MenuEntryImpl
00166d6c 00000014 R vtable for CTRPluginFramework::MenuFolderImpl
00166d80 00000030 r ._184
00166dd0 00000038 R vtable for CTRPluginFramework::Search32
00166e08 00000038 R vtable for CTRPluginFramework::Search
00166e40 00000005 r CSWTCH.47
00166e48 00000014 R vtable for CTRPluginFramework::ARCode
00166e5c 0000002d r ._89
00166e8c 00000080 r CTRPluginFramework::KeysToString(unsigned long)::keysText
00166f0c 0000000c r CTRPluginFramework::CommentCodeLine(CTRPluginFramework::ARCode const&)::condstr
00166f18 00000008 r CTRPluginFramework::CommentCodeLine(CTRPluginFramework::ARCode const&)::offsets
00166f20 00000008 r CTRPluginFramework::CommentCodeLine(CTRPluginFramework::ARCode const&)::data
00166f28 00000008 r CTRPluginFramework::CommentCodeLine(CTRPluginFramework::ARCode const&)::storage
00166f30 0000001c R vtable for CTRPluginFramework::MenuEntryActionReplay
00166f4c 00000004 R About15_array_length
00166f50 00000384 r About15_array
001672d4 00000004 R AddFavorite25_array_length
001672d8 000009c4 r AddFavorite25_array
00167c9c 00000004 R AddFavoriteFilled25_array_length
00167ca0 000009c4 r AddFavoriteFilled25_array
00168664 00000004 R CapsLockOn15_array_length
00168668 00000384 r CapsLockOn15_array
001689ec 00000004 R CapsLockOnFilled15_array_length
001689f0 00000384 r CapsLockOnFilled15_array
00168d74 00000004 R CheckedCheckbox_array_length
00168d78 00000384 r CheckedCheckbox_array
001690fc 00000004 R ClearSymbol15_array_length
00169100 00000384 r ClearSymbol15_array
00169484 00000004 R ClearSymbolFilled15_array_length
00169488 00000384 r ClearSymbolFilled15_array
0016980c 00000004 R Clipboard25_array_length
00169810 000009c4 r Clipboard25_array
0016a1d4 00000004 R ClipboardFilled25_array_length
0016a1d8 000009c4 r ClipboardFilled25_array
0016ab9c 00000004 R CloseWindow20_array_length
0016aba0 00000640 r CloseWindow20_array
0016b1e0 00000004 R CloseWindowFilled20_array_length
0016b1e4 00000640 r CloseWindowFilled20_array
0016b824 00000004 R Controller15_array_length
0016b828 00000384 r Controller15_array
0016bbac 00000004 R Cut25_array_length
0016bbb0 000009c4 r Cut25_array
0016c574 00000004 R CutFilled25_array_length
0016c578 000009c4 r CutFilled25_array
0016cf3c 00000004 R Duplicate25_array_length
0016cf40 000009c4 r Duplicate25_array
0016d904 00000004 R DuplicateFilled25_array_length
0016d908 000009c4 r DuplicateFilled25_array
0016e2cc 00000004 R Edit25_array_length
0016e2d0 000009c4 r Edit25_array
0016ec94 00000004 R EditFilled25_array_length
0016ec98 000009c4 r EditFilled25_array
0016f65c 00000004 R EnterKey15_array_length
0016f660 00000384 r EnterKey15_array
0016f9e4 00000004 R EnterKeyFilled15_array_length
0016f9e8 00000384 r EnterKeyFilled15_array
0016fd6c 00000004 R File15_array_length
0016fd70 00000384 r File15_array
001700f4 00000004 R FolderFilled_array_length
001700f8 00000384 r FolderFilled_array
0017047c 00000004 R GameController15_array_length
00170480 00000384 r GameController15_array
00170804 00000004 R GameController25_array_length
00170808 000009c4 r GameController25_array
001711cc 00000004 R GameControllerFilled25_array_length
001711d0 000009c4 r GameControllerFilled25_array
00171b94 00000004 R Grid15_array_length
00171b98 00000384 r Grid15_array
00171f1c 00000004 R HandCursor15_array_length
00171f20 00000384 r HandCursor15_array
001722a4 00000004 R Info25_array_length
001722a8 000009c4 r Info25_array
00172c6c 00000004 R InfoFilled25_array_length
00172c70 000009c4 r InfoFilled25_array
00173634 00000004 R Keyboard25_array_length
00173638 000009c4 r Keyboard25_array
00173ffc 00000004 R KeyboardFilled25_array_length
00174000 000009c4 r KeyboardFilled25_array
001749c4 00000004 R Maintenance15_array_length
001749c8 00000384 r Maintenance15_array
00174d4c 00000004 R More15_array_length
00174d50 00000384 r More15_array
001750d4 00000004 R Plus25_array_length
001750d8 000009c4 r Plus25_array
00175a9c 00000004 R PlusFilled25_array_length
00175aa0 000009c4 r PlusFilled25_array
00176464 00000004 R RAM15_array_length
00176468 00000384 r RAM15_array
001767ec 00000004 R Restart15_array_length
001767f0 00000384 r Restart15_array
00176b74 00000004 R Rocket40_array_length
00176b78 00001900 r Rocket40_array
00178478 00000004 R Save25_array_length
0017847c 000009c4 r Save25_array
00178e40 00000004 R Search15_array_length
00178e44 00000384 r Search15_array
001791c8 00000004 R Settings15_array_length
001791cc 00000384 r Settings15_array
00179550 00000004 R Shutdown15_array_length
00179554 00000384 r Shutdown15_array
001798d8 00000004 R Star15_array_length
001798dc 00000384 r Star15_array
00179c60 00000004 R Trash25_array_length
00179c64 000009c4 r Trash25_array
0017a628 00000004 R TrashFilled25_array_length
0017a62c 000009c4 r TrashFilled25_array
0017aff0 00000004 R UnCheckedCheckbox_array_length
0017aff4 00000384 r UnCheckedCheckbox_array
0017b378 00000004 R UserManualFilled15_array_length
0017b37c 00000384 r UserManualFilled15_array
0017b700 0000001c R vtable for CTRPluginFramework::CheckBox
0017b71c 0000001c R vtable for CTRPluginFramework::ComboBox
0017b738 0000001c R vtable for CTRPluginFramework::FloatingButton
0017b754 0000001c R vtable for CTRPluginFramework::NumericTextBox
0017b770 0000001c R vtable for CTRPluginFramework::TextBox
0017b78c 0000001c R vtable for CTRPluginFramework::TouchKey
0017b7a8 00000020 r CTRPluginFramework::HexEditor::_RenderTop()::bytePos
0017b7c8 00000280 r CTRPluginFramework::_cursorPositions
0017ba48 00000008 r CTRPluginFramework::HexEditor::_PromptForAddress(int)::msg
0017ba50 00000048 r CTRPluginFramework::g_ctrpf
0017ba98 00000030 r CTRPluginFramework::g_byme
0017d724 0000001c V vtable for CTRPluginFramework::IconButton<CTRPluginFramework::Window, void>
0017d740 0000001c V vtable for CTRPluginFramework::IconButton<CTRPluginFramework::CheckBox, void>
0017d8a8 00000014 V vtable for CTRPluginFramework::MenuItem
0017d8bc 0000001c V vtable for CTRPluginFramework::ToggleButton<CTRPluginFramework::PluginMenuActionReplay, void>
0017d8d8 0000001c V vtable for CTRPluginFramework::IconButton<CTRPluginFramework::PluginMenuActionReplay, void>
0017d948 0000001c V vtable for CTRPluginFramework::CheckedButton<CTRPluginFramework::PluginMenuHome, void>
0017d964 0000001c V vtable for CTRPluginFramework::Button<CTRPluginFramework::PluginMenuHome, void>
0017d980 0000001c V vtable for CTRPluginFramework::Button<CTRPluginFramework::PluginMenuSearch, void>
0017d99c 0000001c V vtable for CTRPluginFramework::CheckedButton<CTRPluginFramework::PluginMenuSearch, void>
0017e9c4 0000001c V vtable for CTRPluginFramework::IconButton<CTRPluginFramework::GuideReader, void>
0017e9e8 0000001c V vtable for CTRPluginFramework::IconButton<CTRPluginFramework::HexEditor, void>
0017eb68 0000001c V vtable for CTRPluginFramework::MenuEntryTools
0017eb84 0000001c V vtable for CTRPluginFramework::IconButton<CTRPluginFramework::PluginMenuHome, void>
0017eba0 0000001c V vtable for CTRPluginFramework::ToggleButton<CTRPluginFramework::PluginMenuHome, void>
0017ebec 0000000c R typeinfo for __gnu_cxx::recursive_init_error
0017ebf8 00000023 R typeinfo name for __gnu_cxx::recursive_init_error
0017ec1c 00000014 R vtable for __gnu_cxx::recursive_init_error
0017ec54 00000008 R typeinfo for __cxxabiv1::__forced_unwind
0017ec5c 00000008 R typeinfo for __cxxabiv1::__foreign_exception
0017ec64 0000000c R typeinfo for std::bad_exception
0017ec70 00000008 R typeinfo for std::exception
0017ec78 00000020 R typeinfo name for __cxxabiv1::__forced_unwind
0017ec98 00000024 R typeinfo name for __cxxabiv1::__foreign_exception
0017ecbc 00000012 R typeinfo name for std::bad_exception
0017ecd0 0000000d R typeinfo name for std::exception
0017ece0 00000014 R vtable for std::bad_exception
0017ecf4 0000000c R typeinfo for __cxxabiv1::__si_class_type_info
0017ed00 00000025 R typeinfo name for __cxxabiv1::__si_class_type_info
0017ed28 0000002c R vtable for __cxxabiv1::__si_class_type_info
0017ed54 00000008 R typeinfo for std::type_info
0017ed5c 0000000d R typeinfo name for std::type_info
0017ed6c 0000000c R typeinfo for __cxxabiv1::__class_type_info
0017ed78 00000022 R typeinfo name for __cxxabiv1::__class_type_info
0017ed9c 0000002c R vtable for __cxxabiv1::__class_type_info
0017efb0 0000000c R typeinfo for std::bad_alloc
0017efbc 0000000d R typeinfo name for std::bad_alloc
0017efcc 00000014 R vtable for std::bad_alloc
0017efe0 0000000c R typeinfo for std::logic_error
0017efec 0000000c R typeinfo for std::length_error
0017eff8 0000000c R typeinfo for std::out_of_range
0017f004 0000000c R typeinfo for std::invalid_argument
0017f010 00000010 R typeinfo name for std::logic_error
0017f020 00000011 R typeinfo name for std::length_error
0017f034 00000011 R typeinfo name for std::out_of_range
0017f048 00000015 R typeinfo name for std::invalid_argument
0017f060 00000014 R vtable for std::logic_error
0017f074 00000014 R vtable for std::length_error
0017f088 00000014 R vtable for std::out_of_range
0017f09c 00000014 R vtable for std::invalid_argument
0017f0b4 00000004 R _global_impure_ptr
0017f0fc 00000060 R __month_lengths
0017f1e8 00000014 r fpi.7439
0017f1fc 00000014 r fpinan.7475
0017f210 00000028 r tinytens
0017f27c 00000010 r blanks.8562
0017f28c 00000010 r zeroes.8563
0017f29c 000000fc R _C_time_locale
0017f564 00000015 r day_name.6011
0017f57c 00000024 r mon_name.6012
0017f5a0 00000101 R _ctype_
0017f6b4 00000100 R __hexdig
0017f7b8 00000028 R __mprec_bigtens
0017f7e0 000000c8 R __mprec_tens
0017f8a8 0000000c r p05.7353
0017f8b4 0000006c R __action_table
0017f920 00000100 R __chclass
0017fa20 0000006c R __state_table
0017fa8c 00000010 r blanks.8541
0017fa9c 00000010 r zeroes.8542
0017faac 00000022 r basefix.8096
0017fae4 000000bc r a1
0017fba0 000000bc r a2
0017fc5c 0000005b r a3
0017fcb8 00000070 r a6
0017fd28 000000a2 r a7
0017fdcc 00000040 r a8
0017fe0c 0000172a r b02cf
00181538 00001a7c r d02f4
00183220 R __exidx_start
00183440 R __exidx_end
00183440 00000004 d CTRPluginFramework::stalking(CTRPluginFramework::MenuEntry*)::player
00183444 00000004 d CTRPluginFramework::sizeChanger(CTRPluginFramework::MenuEntry*)::PlayerSize
00183448 00000001 d CTRPluginFramework::sizeChanger(CTRPluginFramework::MenuEntry*)::adding
0018344c 00000004 d CTRPluginFramework::sizeChanger(CTRPluginFramework::MenuEntry*)::speed
00183450 00000001 D CTRPluginFramework::g_keepRunning
00183454 00000004 D CTRPluginFramework::Preferences::MenuHotkeys
00183458 00000001 D CTRPluginFramework::Preferences::_bmpCanBeLoaded
0018345c 00000001 D CTRPluginFramework::PrivColor::_format
00183460 00000004 D CTRPluginFramework::PrivColor::FromFramebuffer
00183464 00000004 D CTRPluginFramework::PrivColor::ToFramebuffer
00183468 00000001 d CTRPluginFramework::EventManager::PopEvent(CTRPluginFramework::Event&, bool)::refresh
00183469 00000001 D CTRPluginFramework::SystemImpl::_language
0018346c 00000004 D g_KProcessPIDOffset
00183470 00000004 D About15
00183474 00000004 D AddFavorite25
00183478 00000004 D AddFavoriteFilled25
0018347c 00000004 D CapsLockOn15
00183480 00000004 D CapsLockOnFilled15
00183484 00000004 D CheckedCheckbox
00183488 00000004 D ClearSymbol15
0018348c 00000004 D ClearSymbolFilled15
00183490 00000004 D Clipboard25
00183494 00000004 D ClipboardFilled25
00183498 00000004 D CloseWindow20
0018349c 00000004 D CloseWindowFilled20
001834a0 00000004 D Controller15
001834a4 00000004 D Cut25
001834a8 00000004 D CutFilled25
001834ac 00000004 D Duplicate25
001834b0 00000004 D DuplicateFilled25
001834b4 00000004 D Edit25
001834b8 00000004 D EditFilled25
001834bc 00000004 D EnterKey15
001834c0 00000004 D EnterKeyFilled15
001834c4 00000004 D File15
001834c8 00000004 D FolderFilled
001834cc 00000004 D GameController15
001834d0 00000004 D GameController25
001834d4 00000004 D GameControllerFilled25
001834d8 00000004 D Grid15
001834dc 00000004 D HandCursor15
001834e0 00000004 D Info25
001834e4 00000004 D InfoFilled25
001834e8 00000004 D Keyboard25
001834ec 00000004 D KeyboardFilled25
001834f0 00000004 D Maintenance15
001834f4 00000004 D More15
001834f8 00000004 D Plus25
001834fc 00000004 D PlusFilled25
00183500 00000004 D RAM15
00183504 00000004 D Restart15
00183508 00000004 D Rocket40
0018350c 00000004 D Save25
00183510 00000004 D Search15
00183514 00000004 D Settings15
00183518 00000004 D Shutdown15
0018351c 00000004 D Star15
00183520 00000004 D Trash25
00183524 00000004 D TrashFilled25
00183528 00000004 D UnCheckedCheckbox
0018352c 00000004 D UserManualFilled15
00183530 00000001 d CTRPluginFramework::PluginMenuHome::_RenderBottom()::framework
00183534 D __dso_handle
00183538 00000004 D __cxxabiv1::__unexpected_handler
0018353c 00000004 D __cxxabiv1::__terminate_handler
00183540 00000001 D __fdlib_version
00183544 00000004 D _impure_ptr
00183548 00000460 d impure_data
001839a8 0000016c D __global_locale
00183b14 00000408 D __malloc_av_
00183f1c 00000004 D __malloc_sbrk_base
00183f20 00000004 D __malloc_trim_threshold
00183f24 0000000c d __malloc_lock_object
00183f30 00000004 d __tz_lock_object
00183f34 00000008 D _tzname
00183f3c 0000000c D __atexit_lock
00183f48 00000040 d tzinfo
00183f88 00000004 D environ
00183f8c 0000000c d __env_lock_object
00183f98 a _DYNAMIC
00184070 a _GLOBAL_OFFSET_TABLE_
00184088 t __frame_dummy_init_array_entry
00184088 T __init_array_start
00184088 B __preinit_array_end
00184088 B __preinit_array_start
00184088 D __tdata_lma
00184088 D __tdata_lma_end
00184088 D __TMC_END__
001840d4 t __do_global_dtors_aux_fini_array_entry
001840d4 T __fini_array_start
001840d4 T __init_array_end
001840d8 T __fini_array_end
001840d8 r __rel_dyn_start
0019a718 B __c_bss_start
0019a718 r __rel_dyn_end
0019a718 00000001 b CTRPluginFramework::CountdownMode(CTRPluginFramework::MenuEntry*)::score
0019a71c 00000004 B CTRPluginFramework::offset
0019a720 00000004 B CTRPluginFramework::data
0019a724 00000004 b CTRPluginFramework::saveSlotTeleporter(CTRPluginFramework::MenuEntry*)::x
0019a728 00000004 b CTRPluginFramework::saveSlotTeleporter(CTRPluginFramework::MenuEntry*)::y
0019a72c 00000004 b CTRPluginFramework::saveSlotTeleporter(CTRPluginFramework::MenuEntry*)::z
0019a730 00000001 b CTRPluginFramework::driveAnywhere(CTRPluginFramework::MenuEntry*)::enabled
0019a734 00000004 b CTRPluginFramework::stalking(CTRPluginFramework::MenuEntry*)::active
0019a738 00000004 b CTRPluginFramework::stalking(CTRPluginFramework::MenuEntry*)::pointer
0019a73c 00000001 b CTRPluginFramework::stalking(CTRPluginFramework::MenuEntry*)::held
0019a73d 00000001 b CTRPluginFramework::sizeChanger(CTRPluginFramework::MenuEntry*)::held
0019a73e 00000001 b CTRPluginFramework::SetItem(CTRPluginFramework::MenuEntry*)::shown_dialogue
0019a73f 00000001 b CTRPluginFramework::SetItem(CTRPluginFramework::MenuEntry*)::item
0019a740 00000001 b CTRPluginFramework::SetItem(CTRPluginFramework::MenuEntry*)::execute
0019a741 00000001 b CTRPluginFramework::CountdownMode(CTRPluginFramework::MenuEntry*)::AddedToScore
0019a742 00000001 b CTRPluginFramework::CountdownMode(CTRPluginFramework::MenuEntry*)::AddedToTime
0019a743 00000001 b CTRPluginFramework::CountdownMode(CTRPluginFramework::MenuEntry*)::end_race
0019a744 00000001 b CTRPluginFramework::SetVR(CTRPluginFramework::MenuEntry*)::shown_dialogue
0019a748 00000004 b CTRPluginFramework::SetVR(CTRPluginFramework::MenuEntry*)::vr
0019a74c 00000001 b CTRPluginFramework::SetVR(CTRPluginFramework::MenuEntry*)::execute
0019a750 00000004 B CTRPluginFramework::random
0019a754 00000001 b CTRPluginFramework::SetFlag(CTRPluginFramework::MenuEntry*)::error
0019a756 00000002 b CTRPluginFramework::SetFlag(CTRPluginFramework::MenuEntry*)::flag
0019a758 00000001 b CTRPluginFramework::SetFlag(CTRPluginFramework::MenuEntry*)::shown_dialogue
0019a759 00000001 b CTRPluginFramework::SetCoordinates(CTRPluginFramework::MenuEntry*)::shown_dialogue
0019a75c 00000004 b CTRPluginFramework::SetCoordinates(CTRPluginFramework::MenuEntry*)::coordinates
0019a760 00000004 B CTRPluginFramework::g_itemPointer
0019a764 00000004 B CTRPluginFramework::g_oldRacePointer5D0
0019a768 00000004 B CTRPluginFramework::g_oldRacePointer5CC
0019a76c 00000004 B CTRPluginFramework::g_FNsPointer
0019a770 00000004 B CTRPluginFramework::g_raceCondition
0019a774 00000004 B CTRPluginFramework::g_racePointer
0019a778 00000004 B CTRPluginFramework::dataZ
0019a77c 00000004 B CTRPluginFramework::dataY
0019a780 00000004 B CTRPluginFramework::dataX
0019a788 00000050 B CTRPluginFramework::QuickMenu::_instance
0019a7d8 00000008 B CTRPluginFramework::_sdmcArchive
0019a7e0 00000004 B CTRPluginFramework::g_continueGameEvent
0019a7e4 00000004 B __ctru_heap_size
0019a7e8 00000004 B g_gspEventThreadPriority
0019a7ec 00000004 B CTRPluginFramework::g_keepEvent
0019a7f0 00000004 B g_mainThread
0019a7f4 00000004 b onLoadCroLock
0019a7f8 00000038 b g_loadCroHook
0019a830 00000004 B croReturn
0019a834 00000004 B CTRPluginFramework::g_keepThreadHandle
0019a838 00000004 B CTRPluginFramework::g_resumeEvent
0019a840 00004000 b CTRPluginFramework::keepThreadStack
0019e840 00010000 b CTRPluginFramework::threadStack
001ae840 00000004 B CTRPluginFramework::Color::Black
001ae844 00000004 B CTRPluginFramework::Color::Blank
001ae848 00000004 B CTRPluginFramework::Color::Blue
001ae84c 00000004 B CTRPluginFramework::Color::BlackGrey
001ae850 00000004 B CTRPluginFramework::Color::Brown
001ae854 00000004 B CTRPluginFramework::Color::Cyan
001ae858 00000004 B CTRPluginFramework::Color::DarkGrey
001ae85c 00000004 B CTRPluginFramework::Color::DeepSkyBlue
001ae860 00000004 B CTRPluginFramework::Color::DimGrey
001ae864 00000004 B CTRPluginFramework::Color::DodgerBlue
001ae868 00000004 B CTRPluginFramework::Color::Gainsboro
001ae86c 00000004 B CTRPluginFramework::Color::ForestGreen
001ae870 00000004 B CTRPluginFramework::Color::Green
001ae874 00000004 B CTRPluginFramework::Color::Grey
001ae878 00000004 B CTRPluginFramework::Color::LimeGreen
001ae87c 00000004 B CTRPluginFramework::Color::Magenta
001ae880 00000004 B CTRPluginFramework::Color::Orange
001ae884 00000004 B CTRPluginFramework::Color::Red
001ae888 00000004 B CTRPluginFramework::Color::Silver
001ae88c 00000004 B CTRPluginFramework::Color::SkyBlue
001ae890 00000004 B CTRPluginFramework::Color::Turquoise
001ae894 00000004 B CTRPluginFramework::Color::Yellow
001ae898 00000004 b CTRPluginFramework::ConvertToFloat(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, bool)::temp
001ae8a0 00000008 b CTRPluginFramework::ConvertToDouble(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, bool)::temp
001ae8a8 00000008 b CTRPluginFramework::ConvertToU64(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, bool)::temp
001ae8b0 00000002 b CTRPluginFramework::ConvertToU16(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, bool)::temp
001ae8b4 00000004 b CTRPluginFramework::ConvertToU32(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, bool)::temp
001ae8b8 00000001 b CTRPluginFramework::ConvertToU8(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, bool)::temp
001ae8bc 00000180 b CTRPluginFramework::g_keyName
001aea3c 00000004 b CTRPluginFramework::g_runningInstance
001aea40 00000004 B CTRPluginFramework::Controller::_keysDown
001aea44 00000004 B CTRPluginFramework::Controller::_keysHeld
001aea48 00000004 B CTRPluginFramework::Controller::_keysReleased
001aea4c 00000018 b CTRPluginFramework::_workingDirectory
001aea64 00002002 b CTRPluginFramework::_Path::SdmcUtf16Path(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)::utf16Path
001b0a68 00000004 B CTRPluginFramework::System::OnAbort
001b0a70 00000008 B CTRPluginFramework::Time::Zero
001b0a78 000009c4 b CTRPluginFramework::g_rng
001b1440 00000001 B CTRPluginFramework::Preferences::AutoLoadCheats
001b1441 00000001 B CTRPluginFramework::Preferences::AutoLoadFavorites
001b1442 00000001 B CTRPluginFramework::Preferences::AutoSaveCheats
001b1443 00000001 B CTRPluginFramework::Preferences::AutoSaveFavorites
001b1444 00000001 B CTRPluginFramework::Preferences::DrawTouchCursor
001b1445 00000001 B CTRPluginFramework::Preferences::ShowBottomFps
001b1446 00000001 B CTRPluginFramework::Preferences::ShowTopFps
001b1447 00000001 B CTRPluginFramework::Preferences::UseFloatingBtn
001b1448 00000001 B CTRPluginFramework::Preferences::_cheatsAlreadyLoaded
001b1449 00000001 B CTRPluginFramework::Preferences::_favoritesAlreadyLoaded
001b144a 00000001 B CTRPluginFramework::Preferences::EcoMemoryMode
001b144c 00000004 B CTRPluginFramework::Preferences::topBackgroundImage
001b1450 00000004 B CTRPluginFramework::Preferences::bottomBackgroundImage
001b1458 00000078 B CTRPluginFramework::Preferences::Settings
001b14d0 00000001 B CTRPluginFramework::Preferences::DisplayFilesLoading
001b14d1 00000001 B CTRPluginFramework::Preferences::DrawTouchCoord
001b14d2 00000001 B CTRPluginFramework::Preferences::InjectBOnMenuClose
001b14d4 00000004 b CTRPluginFramework::defaultSysFont
001b14d8 00000004 B CTRPluginFramework::g_fontAllocated
001b14dc 00000004 b CTRPluginFramework::tileData
001b14e0 00000004 b CTRPluginFramework::glyph
001b14e4 00000004 B CTRPluginFramework::g_glyphAllocated
001b14e8 0000000c B CTRPluginFramework::OSDImpl::RecLock
001b14f4 0000000c B CTRPluginFramework::OSDImpl::Notifications[abi:cxx11]
001b1500 00000018 B CTRPluginFramework::OSDImpl::TopScreen
001b1518 00000018 B CTRPluginFramework::OSDImpl::BottomScreen
001b1530 00000038 B CTRPluginFramework::OSDImpl::OSDHook
001b1568 00000004 B CTRPluginFramework::OSDImpl::HookReturn
001b156c 00000008 B CTRPluginFramework::OSDImpl::OnNewFrameEvent
001b1574 00000024 B CTRPluginFramework::OSDImpl::FloatingBtn
001b1598 0000000c B CTRPluginFramework::OSDImpl::Callbacks
001b15a4 00000004 b CTRPluginFramework::g_second
001b15a8 00000010 b CTRPluginFramework::g_fpsClock
001b15b8 00000038 B CTRPluginFramework::OSDHook2
001b15f0 00000004 B CTRPluginFramework::OSDImpl::FramesToPlay
001b15f4 00000001 B CTRPluginFramework::OSDImpl::DrawSaveIcon
001b15f5 00000001 B CTRPluginFramework::OSDImpl::MessColors
001b15f8 00000001 B CTRPluginFramework::PrivColor::_useClamp
001b15fc 00000010 B CTRPluginFramework::PrivColor::_clampArea
001b160c 00000001 B CTRPluginFramework::Renderer::_target
001b1610 00000004 B CTRPluginFramework::Renderer::_screen
001b1614 00000004 b guard variable for CTRPluginFramework::Renderer::EndFrame(bool)::background
001b1618 00000004 b CTRPluginFramework::Renderer::EndFrame(bool)::background
001b161c 00000004 B CTRPluginFramework::RendererPriv::g_customColor
001b1620 00000028 B CTRPluginFramework::Window::BottomWindow
001b1648 00000028 B CTRPluginFramework::Window::TopWindow
001b1670 00000010 b CTRPluginFramework::KeyboardImpl::_RenderTop()::background2
001b1680 00000010 b CTRPluginFramework::KeyboardImpl::_RenderTop()::background1
001b1690 00000004 b guard variable for CTRPluginFramework::KeyboardImpl::_RenderTop()::background1
001b1694 00000004 b guard variable for CTRPluginFramework::KeyboardImpl::_RenderTop()::background2
001b1698 00000004 b guard variable for CTRPluginFramework::KeyboardImpl::_RenderBottom()::background
001b169c 00000010 b CTRPluginFramework::KeyboardImpl::_RenderBottom()::background
001b16ac 00000004 b guard variable for CTRPluginFramework::KeyboardImpl::_RenderBottom()::background2
001b16b0 00000010 b CTRPluginFramework::KeyboardImpl::_RenderBottom()::background2
001b16c0 00000004 b guard variable for CTRPluginFramework::KeyboardImpl::_RenderBottom()::clampArea
001b16c4 00000010 b CTRPluginFramework::KeyboardImpl::_RenderBottom()::clampArea
001b16d4 00000004 b guard variable for CTRPluginFramework::KeyboardImpl::_CheckKeys()::backspacetimer
001b16d8 00000008 b CTRPluginFramework::KeyboardImpl::_CheckKeys()::backspacetimer
001b16e0 00000004 b guard variable for CTRPluginFramework::KeyboardImpl::_CheckKeys()::FastModeWaitTime
001b16e8 00000008 b CTRPluginFramework::KeyboardImpl::_CheckKeys()::FastModeWaitTime
001b16f0 00000004 b guard variable for CTRPluginFramework::KeyboardImpl::_CheckKeys()::FastClearingFrame
001b16f8 00000008 b CTRPluginFramework::KeyboardImpl::_CheckKeys()::FastClearingFrame
001b1700 00000004 b CTRPluginFramework::KeyboardImpl::_CheckKeys()::backspaceFastMode
001b1704 0000000c B CTRPluginFramework::KeyboardImpl::_QwertyKeys
001b1710 0000000c B CTRPluginFramework::KeyboardImpl::_DecimalKeys
001b171c 0000000c B CTRPluginFramework::KeyboardImpl::_HexaDecimalKeys
001b1728 00000004 b guard variable for CTRPluginFramework::KeyboardImpl::_ProcessEvent(CTRPluginFramework::Event&)::inputClock
001b1730 00000008 b CTRPluginFramework::KeyboardImpl::_ProcessEvent(CTRPluginFramework::Event&)::inputClock
001b1738 00000004 b guard variable for CTRPluginFramework::KeyboardImpl::_ProcessEvent(CTRPluginFramework::Event&)::buttons
001b173c 00000010 b CTRPluginFramework::KeyboardImpl::_ProcessEvent(CTRPluginFramework::Event&)::buttons
001b174c 00000004 B CTRPluginFramework::MenuItem::_uidCounter
001b1750 00000004 b CTRPluginFramework::__pmARinstance
001b1754 00000004 b CTRPluginFramework::g_radioId
001b1758 00000004 B CTRPluginFramework::PluginMenuExecuteLoop::_firstInstance
001b175c 00000004 B CTRPluginFramework::PluginMenuExecuteLoop::_builtinLock
001b1760 00000004 B CTRPluginFramework::PluginMenuExecuteLoop::_arLock
001b1768 00000004 B CTRPluginFramework::PluginMenuImpl::_runningInstance
001b176c 00000004 b CTRPluginFramework::PluginMenuImpl::Run()::count
001b1770 00000004 b guard variable for CTRPluginFramework::PluginMenuImpl::Run()::konamicode
001b1778 00000020 b CTRPluginFramework::PluginMenuImpl::Run()::konamicode
001b1798 00000010 b CTRPluginFramework::PluginMenuSearch::_ShowProgressWindow() const::background
001b17a8 00000010 b CTRPluginFramework::PluginMenuSearch::_ShowProgressWindow() const::background2
001b17b8 00000004 b guard variable for CTRPluginFramework::PluginMenuSearch::_ShowProgressWindow() const::background
001b17bc 00000004 b guard variable for CTRPluginFramework::PluginMenuSearch::_ShowProgressWindow() const::background2
001b17c0 00000004 b guard variable for CTRPluginFramework::PluginMenuSearch::_ShowProgressWindow() const::timer
001b17c8 00000008 b CTRPluginFramework::PluginMenuSearch::_ShowProgressWindow() const::timer
001b17d0 00000004 b CTRPluginFramework::PluginMenuSearch::_ShowProgressWindow() const::phase
001b17d8 00000004 b CTRPluginFramework::g_mode
001b17dc 00000004 b CTRPluginFramework::g_HookMode
001b17e0 00000004 B CTRPluginFramework::g_index
001b17e4 00000004 B CTRPluginFramework::g_OpenFileLock
001b17e8 00000004 B CTRPluginFramework::g_filenames
001b17ec 00000004 b CTRPluginFramework::g_buffer2
001b17f0 00000030 b CTRPluginFramework::g_hookExportFile
001b1820 00000038 b CTRPluginFramework::g_FsTryOpenFileHook
001b1858 00000004 B CTRPluginFramework::g_FsTryOpenFileAddress
001b185c 00000004 b CTRPluginFramework::g_buffer
001b1860 00000004 b CTRPluginFramework::PluginMenuTools::_ProcessEvent(CTRPluginFramework::Event&)::mode
001b1864 00000004 b guard variable for CTRPluginFramework::PluginMenuTools::_RenderBottom()::xpos
001b1868 00000004 b CTRPluginFramework::PluginMenuTools::_RenderBottom()::xpos
001b1870 00000004 b guard variable for CTRPluginFramework::SearchMenu::ProcessEvent(std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >&, CTRPluginFramework::Time&)::_fastScroll
001b1878 00000008 b CTRPluginFramework::SearchMenu::ProcessEvent(std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >&, CTRPluginFramework::Time&)::_fastScroll
001b1880 00000004 b guard variable for CTRPluginFramework::SearchMenu::ProcessEvent(std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >&, CTRPluginFramework::Time&)::_startFastScroll
001b1888 00000008 b CTRPluginFramework::SearchMenu::ProcessEvent(std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >&, CTRPluginFramework::Time&)::_startFastScroll
001b1890 00000004 b guard variable for CTRPluginFramework::SubMenu::Draw()::background
001b1894 00000010 b CTRPluginFramework::SubMenu::Draw()::background
001b18a4 00000004 B CTRPluginFramework::_pool
001b18a8 00000001 b CTRPluginFramework::EventManager::ProcessEvents()::isTouching
001b18aa 00000004 b CTRPluginFramework::EventManager::ProcessEvents()::firstTouch
001b18b0 00000004 B CTRPluginFramework::Heap::__ctrpf_heap
001b18b4 00000004 B CTRPluginFramework::Heap::__ctrpf_heap_size
001b18b8 00000008 b CTRPluginFramework::Heap::g_heapPool
001b18c0 0000000c b sAddrMap
001b18d0 00000004 B CTRPluginFramework::ProcessImpl::_kProcess
001b18d4 00000064 B CTRPluginFramework::ProcessImpl::_kCodeSet
001b1938 00000004 B CTRPluginFramework::ProcessImpl::_processID
001b193c 00000004 B CTRPluginFramework::ProcessImpl::_kProcessState
001b1940 00000004 B CTRPluginFramework::ProcessImpl::mmuTableSize
001b1944 00000004 B CTRPluginFramework::ProcessImpl::mmuTable
001b1948 00000008 B CTRPluginFramework::ProcessImpl::_processName
001b1950 00000008 B CTRPluginFramework::ProcessImpl::_titleID
001b1958 00000004 B CTRPluginFramework::ProcessImpl::_processHandle
001b195c 00000004 B CTRPluginFramework::ProcessImpl::_mainThreadHandle
001b1960 0000000c B CTRPluginFramework::ProcessImpl::FrameLock
001b196c 00000004 B CTRPluginFramework::ProcessImpl::FrameEvent
001b1970 00000004 B CTRPluginFramework::ProcessImpl::_isPaused
001b1974 00000001 B CTRPluginFramework::ProcessImpl::_isAcquiring
001b1978 00000038 b CTRPluginFramework::_topBuf
001b19b0 00000004 B CTRPluginFramework::ScreenImpl::Top
001b19b4 00000038 b CTRPluginFramework::_botBuf
001b19ec 00000004 B CTRPluginFramework::ScreenImpl::Bottom
001b19f0 00000001 B CTRPluginFramework::SystemImpl::_isInit
001b19f1 00000001 B CTRPluginFramework::SystemImpl::_isNew3DS
001b19f4 00000004 B CTRPluginFramework::SystemImpl::_IOBaseLCD
001b19f8 00000004 B CTRPluginFramework::SystemImpl::_IOBasePAD
001b19fc 00000004 B CTRPluginFramework::SystemImpl::_IOBasePDC
001b1a00 00000004 B CTRPluginFramework::SystemImpl::CFWVersion
001b1a04 00000004 B CTRPluginFramework::SystemImpl::RosalinaHotkey
001b1a08 00000001 B CTRPluginFramework::SystemImpl::IsLoaderNTR
001b1a0c 0000000c B CTRPluginFramework::g_codeTypes
001b1a18 00000001 b CTRPluginFramework::g_condAgainstData
001b1a19 00000001 b CTRPluginFramework::g_newCondDataToggle
001b1a1c 00000004 b CTRPluginFramework::__arCodeEditor
001b1a20 00000004 b guard variable for CTRPluginFramework::ARCodeEditor::_ReloadCodeLines()::tempar
001b1a24 0000000c b CTRPluginFramework::ARCodeEditor::_ReloadCodeLines()::tempar
001b1a30 00000001 b CTRPluginFramework::ARCodeEditor::operator()(std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >&)::isInHexEditor
001b1a34 00000004 b guard variable for CTRPluginFramework::ActionReplay_ProcessString(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, bool)::colors
001b1a38 0000000c b CTRPluginFramework::ActionReplay_ProcessString(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, bool)::colors
001b1a44 00000001 B CTRPluginFramework::g_heapError
001b1a48 00000004 b cfguRefCount
001b1a4c 00000004 b cfguHandle
001b1a50 00000004 b sharedFontAddr
001b1a54 00000004 b srvRefCount
001b1a58 00000004 b srv2Handle
001b1a5c 00000004 b arbiter
001b1a60 00000004 b acRefCount
001b1a64 00000004 b acHandle
001b1a68 00000004 b amRefCount
001b1a6c 00000004 b amHandle
001b1a70 0000000c b aptFirstHook
001b1a7c 00000004 b aptLockHandle
001b1a80 00000004 b serviceName.7503
001b1a84 00000004 b aptMessageFunc
001b1a88 00000004 b aptMessageFuncData
001b1a8c 0000000c b aptEvents
001b1a98 00000001 b aptHomeButtonState
001b1a9c 00000004 b aptRefCount
001b1aa0 00000008 b aptSleepEvent
001b1aa8 00000004 b aptEventHandlerThread
001b1aac 00000001 b flagInit.7855
001b1aad 00000001 b flagValue.7856
001b1ab0 00001000 b aptParameters
001b2ab0 00000004 b fsuHandle
001b2ab8 00000080 b fsExemptArchives
001b2b38 00000004 b fsuRefCount
001b2b3c 00000001 B fs
001b2b40 00000004 b gspEventData
001b2b44 00000038 b gspEvents
001b2b7c 0000001c b gspEventCounts
001b2b98 00000001 b gspRunEvents
001b2b9c 00000004 b gspRefCount
001b2ba0 00000004 b gfxSharedMemory
001b2ba4 00000001 b gfxThreadID
001b2ba5 00001000 b gspThreadEventStack
001b3ba8 00000004 b hidRefCount
001b3bac 00000004 b kOld
001b3bb0 00000004 b kHeld
001b3bb4 00000004 b cPos
001b3bb8 00000004 b tPos
001b3bbc 00000006 b aVec
001b3bc2 00000006 b gRate
001b3bc8 00000004 b kDown
001b3bcc 00000004 b kUp
001b3bd0 00000004 b irrstRefCount
001b3bd4 00000004 b kHeld
001b3bd8 00000004 b csPos
001b3bdc 00000004 B _tls_size
001b3be0 b saved_stack
001b3be8 00000004 b guard variable for CTRPluginFramework::LineWriter::endl[abi:cxx11]()::end
001b3bec 00000018 b CTRPluginFramework::LineWriter::endl[abi:cxx11]()::end
001b3c04 00000004 b CTRPluginFramework::__converter
001b3c08 00000004 b guard variable for CTRPluginFramework::GuideReader::Draw()::background
001b3c0c 00000010 b CTRPluginFramework::GuideReader::Draw()::background
001b3c20 00000004 b guard variable for CTRPluginFramework::HexEditor::_ProcessEvent(CTRPluginFramework::Event&)::timer
001b3c28 00000008 b CTRPluginFramework::HexEditor::_ProcessEvent(CTRPluginFramework::Event&)::timer
001b3c30 00000004 B CTRPluginFramework::__g_hexEditor
001b3c34 00000004 b guard variable for CTRPluginFramework::HexEditor::_PromptForAddress(int)::background
001b3c38 00000010 b CTRPluginFramework::HexEditor::_PromptForAddress(int)::background
001b3c48 00000001 b CTRPluginFramework::HexEditor::operator()(std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >&)::keysAreDisabled
001b3c50 00000004 b CTRPluginFramework::PluginMenuHome::_showStarredBtn_OnClick()::bak
001b3c54 00000004 b guard variable for CTRPluginFramework::PluginMenuHome::_RenderBottom()::creditClock
001b3c58 00000008 b CTRPluginFramework::PluginMenuHome::_RenderBottom()::creditClock
001b3c60 00000004 b CTRPluginFramework::g_ctrpfString
001b3c64 00000004 b CTRPluginFramework::g_bymeString
001b3c68 00000004 b guard variable for CTRPluginFramework::PluginMenuHome::_ProcessEvent(CTRPluginFramework::Event&)::fastScroll
001b3c70 00000008 b CTRPluginFramework::PluginMenuHome::_ProcessEvent(CTRPluginFramework::Event&)::fastScroll
001b3c78 00000004 b guard variable for CTRPluginFramework::PluginMenuHome::_ProcessEvent(CTRPluginFramework::Event&)::inputClock
001b3c80 00000008 b CTRPluginFramework::PluginMenuHome::_ProcessEvent(CTRPluginFramework::Event&)::inputClock
001b3c88 00000004 b CTRPluginFramework::PluginMenuHome::_ProcessEvent(CTRPluginFramework::Event&)::last
001b3c8c 00000004 B CTRPluginFramework::ARHandler::ActiveData
001b3c90 00000001 B CTRPluginFramework::ARHandler::ExitCodeImmediately
001b3c94 00000008 B CTRPluginFramework::ARHandler::Offset
001b3c9c 00000004 B CTRPluginFramework::ARHandler::ActiveOffset
001b3ca0 00000010 B CTRPluginFramework::ARHandler::Data
001b3cb0 00000008 B CTRPluginFramework::ARHandler::Storage
001b3cb8 00000001 b CTRPluginFramework::ToggleFloat
001b3cbc 00000008 b sMappablePool
001b3cc4 0000000c b sAddrMap
001b3cd0 b completed.7759
001b3cd4 b object.7764
001b3cec 0000000c b eh_globals
001b3cf8 00000010 b (anonymous namespace)::emergency_pool
001b3d08 00000010 V std::string::_Rep::_S_empty_rep_storage
001b3d18 00000004 b (anonymous namespace)::__new_handler
001b3d1c 00000028 B __malloc_current_mallinfo
001b3d44 00000004 B __malloc_max_sbrked_mem
001b3d48 00000004 B __malloc_max_total_mem
001b3d4c 00000004 B __malloc_top_pad
001b3d50 0000000b b __tzname_dst
001b3d5c 0000000b b __tzname_std
001b3d68 00000004 b prev_tzenv
001b3d6c 00000004 B _daylight
001b3d70 00000004 B _timezone
001b3d74 00000004 b initial_env
001b3d78 00000004 b heap_start.7089
001b3d7c 00000004 B fake_heap_end
001b3d80 00000004 B fake_heap_start
001b3d84 00000038 B __syscalls
001b3dbc 00000004 B g_KProcessHandleDataOffset
001b3dc0 00000080 B g_kernelParams
001b3e40 00000004 B g_sharedFont
001b3e44 00000004 B charPerSheet
001b3e48 00000004 B gspEvent
001b3e4c 00000004 B gspGpuHandle
001b3e50 00000004 B gspSharedMemHandle
001b3e54 00000004 B gspThreadEventHandle
001b3e58 00000004 B hidMemHandle
001b3e5c 00000004 B hidHandle
001b3e60 00000014 B hidEvents
001b3e74 00000004 B hidSharedMem
001b3e78 00000004 B irrstMemHandle
001b3e7c 00000004 B irrstEvent
001b3e80 00000004 B irrstHandle
001b3e84 00000004 B irrstSharedMem
001b3e88 00000004 B __ctru_linear_heap
001b3e8c 00000004 B __tmp
001b3e90 00000004 B __ctru_linear_heap_size
001b3e94 00000004 B __system_retAddr
001b3e98 00000004 B __ctru_heap
001b3e9c B __c_bss_end
001b3e9c A __end__
001b3e9c B __tls_end
001b3e9c B __tls_start
