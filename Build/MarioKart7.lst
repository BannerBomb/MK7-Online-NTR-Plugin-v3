         w __deregister_frame_info
         w __gnu_Unwind_Find_exidx
         w __register_frame_info
         w _ITM_deregisterTMCloneTable
         w _ITM_registerTMCloneTable
00000000 a shift
00000000 a shift
00100000 T __start__
00100000 T _start
00100028 t relocNotFinished
00100044 t notRelativeEntry
00100088 t ClearMem
0010009c t ClrLoop
001000c4 T _init
001000e0 T dispatchArm11KernelCmd
001000f4 t arm11kMemcpy
00100104 t _memcpy
0010011c t loc_108230
00100124 t GetKprocessFromHandle
00100148 t loc_10825C
0010014c t GetCurrentKprocess
0010015c t test4
00100160 t SetCurrentKprocess
00100184 t SetKProcessID
001001ac t loc_1082AC
001001b4 t GetKProcessState
001001c0 t ReadCTXID
001001d0 t exit
001001d4 T executeKernelCmd
001001f0 T initSystem
001001f8 T initLib
0010021c T __ctru_exit
00100238 t .udivsi3_skip_div0_test
00100238 t __aeabi_uidiv
00100238 000001ec T __udivsi3
00100424 00000020 t __aeabi_uidivmod
00100444 t __aeabi_idiv
00100444 00000220 T __divsi3
0010044c t .divsi3_skip_div0_test
00100664 00000020 t __aeabi_idivmod
00100684 00000004 t __aeabi_idiv0
00100684 00000004 t __aeabi_ldiv0
00100688 0000019c T __aeabi_frsub
00100690 00000194 T __aeabi_fsub
00100690 00000194 T __subsf3
00100694 00000190 T __addsf3
00100694 00000190 T __aeabi_fadd
00100824 00000028 T __aeabi_ui2f
00100824 00000028 T __floatunsisf
0010082c 00000020 T __aeabi_i2f
0010082c 00000020 T __floatsisf
0010084c 0000008c t __aeabi_ul2f
0010084c 0000008c T __floatundisf
0010085c 0000007c t __aeabi_l2f
0010085c 0000007c T __floatdisf
001008d8 t __aeabi_ldivmod
001009ac 00000014 T __restore_core_regs
001009ac 00000014 t restore_core_regs
001009c0 t __gnu_Unwind_Restore_VFP
001009c8 t __gnu_Unwind_Save_VFP
001009d0 t __gnu_Unwind_Restore_VFP_D
001009d8 t __gnu_Unwind_Save_VFP_D
001009e0 t __gnu_Unwind_Restore_VFP_D_16_to_31
001009e8 t __gnu_Unwind_Save_VFP_D_16_to_31
001009f0 t __gnu_Unwind_Restore_WMMXD
00100a34 t __gnu_Unwind_Save_WMMXD
00100a78 t __gnu_Unwind_Restore_WMMXC
00100a8c t __gnu_Unwind_Save_WMMXC
00100aa0 00000024 T ___Unwind_RaiseException
00100aa0 00000024 t _Unwind_RaiseException
00100ac4 00000024 T ___Unwind_Resume
00100ac4 00000024 t _Unwind_Resume
00100ae8 00000024 T ___Unwind_Resume_or_Rethrow
00100ae8 00000024 t _Unwind_Resume_or_Rethrow
00100b0c 00000024 T ___Unwind_ForcedUnwind
00100b0c 00000024 T _Unwind_ForcedUnwind
00100b30 00000024 T ___Unwind_Backtrace
00100b30 00000024 T _Unwind_Backtrace
00100b68 00000390 T strcmp
00100ef0 t __aeabi_uldivmod
00100f2c t deregister_tm_clones
00100f58 t register_tm_clones
00100f90 t __do_global_dtors_aux
00100fd4 t frame_dummy
00101008 000000b0 t CTRPluginFramework::GetRacePointer() [clone .part.7]
001010b8 0000003c t CTRPluginFramework::GetFNsPointer() [clone .part.8]
001010f4 00000068 t CTRPluginFramework::GetOldPointer5CC() [clone .part.9]
0010115c 00000064 t CTRPluginFramework::GetOldPointer5D0() [clone .part.10]
001011c0 00000090 t CTRPluginFramework::GetItemPointer() [clone .part.11]
00101250 0000008c T CTRPluginFramework::IsInRace()
001012dc 000000ac T CTRPluginFramework::GetTotalPlayers()
00101388 00000074 T CTRPluginFramework::GetTime()
001013fc 00000114 t CTRPluginFramework::CountdownMode(CTRPluginFramework::MenuEntry*)::{lambda(CTRPluginFramework::Screen const&)#1}::_FUN(CTRPluginFramework::Screen const&)
00101510 000000b4 T CTRPluginFramework::SubToTime(unsigned short)
001015c4 00000070 T CTRPluginFramework::writeItem(unsigned long)
00101634 000000c4 T CTRPluginFramework::writeSpeed(unsigned long)
001016f8 00000048 T CTRPluginFramework::writeVR(unsigned long)
00101740 0000004c T CTRPluginFramework::writeLocation(unsigned long)
0010178c 00000064 T CTRPluginFramework::writeFlag(unsigned short)
001017f0 00000040 T CTRPluginFramework::invincible(CTRPluginFramework::MenuEntry*)
00101830 00000040 T CTRPluginFramework::alwaysStarPower(CTRPluginFramework::MenuEntry*)
00101870 0000003c T CTRPluginFramework::trickAnywhere(CTRPluginFramework::MenuEntry*)
001018ac 00000040 T CTRPluginFramework::alwaysBlackKart(CTRPluginFramework::MenuEntry*)
001018ec 0000003c T CTRPluginFramework::alwaysShocked(CTRPluginFramework::MenuEntry*)
00101928 00000004 T CTRPluginFramework::alwaysCrushed(CTRPluginFramework::MenuEntry*)
0010192c 00000028 T CTRPluginFramework::instantMT(CTRPluginFramework::MenuEntry*)
00101954 00000014 T CTRPluginFramework::hugeBunnyhop(CTRPluginFramework::MenuEntry*)
00101968 00000014 T CTRPluginFramework::fastReverse(CTRPluginFramework::MenuEntry*)
0010197c 00000068 T CTRPluginFramework::noCountdown(CTRPluginFramework::MenuEntry*)
001019e4 0000004c T CTRPluginFramework::moonjump(CTRPluginFramework::MenuEntry*)
00101a30 000000b4 T CTRPluginFramework::saveSlotTeleporter(CTRPluginFramework::MenuEntry*)
00101ae4 00000054 T CTRPluginFramework::maxTimer(CTRPluginFramework::MenuEntry*)
00101b38 00000074 T CTRPluginFramework::waterEverywhere(CTRPluginFramework::MenuEntry*)
00101bac 000000f4 T CTRPluginFramework::driveAnywhere(CTRPluginFramework::MenuEntry*)
00101ca0 000002dc T CTRPluginFramework::stalking(CTRPluginFramework::MenuEntry*)
00101f7c 000000dc T CTRPluginFramework::cpuBrawl(CTRPluginFramework::MenuEntry*)
00102058 000002c0 T CTRPluginFramework::sizeChanger(CTRPluginFramework::MenuEntry*)
00102318 00000198 T CTRPluginFramework::TouchCode(CTRPluginFramework::MenuEntry*)
001024b0 00000010 T CTRPluginFramework::fastBlueShell(CTRPluginFramework::MenuEntry*)
001024c0 00000010 T CTRPluginFramework::stoppedBlueShell(CTRPluginFramework::MenuEntry*)
001024d0 00000010 T CTRPluginFramework::fastGreenShell(CTRPluginFramework::MenuEntry*)
001024e0 00000010 T CTRPluginFramework::stoppedGreenShell(CTRPluginFramework::MenuEntry*)
001024f0 0000005c T CTRPluginFramework::dropMushrooms(CTRPluginFramework::MenuEntry*)
0010254c 0000004c T CTRPluginFramework::bulletControl(CTRPluginFramework::MenuEntry*)
00102598 00000084 T CTRPluginFramework::disableStarMusic(CTRPluginFramework::MenuEntry*)
0010261c 00000070 T CTRPluginFramework::bulletSpeed(CTRPluginFramework::MenuEntry*)
0010268c 00000144 T CTRPluginFramework::blueShellRide(CTRPluginFramework::MenuEntry*)
001027d0 00000118 T CTRPluginFramework::itemWheel(CTRPluginFramework::MenuEntry*)
001028e8 00000110 T CTRPluginFramework::SetItem(CTRPluginFramework::MenuEntry*)
001029f8 000000ac T CTRPluginFramework::instantAcceleration(CTRPluginFramework::MenuEntry*)
00102aa4 000000b4 T CTRPluginFramework::instantBackAcceleration(CTRPluginFramework::MenuEntry*)
00102b58 0000005c T CTRPluginFramework::instantStop(CTRPluginFramework::MenuEntry*)
00102bb4 0000000c T CTRPluginFramework::TwoHundredCC(CTRPluginFramework::MenuEntry*)
00102bc0 0000000c T CTRPluginFramework::FiveHundredCC(CTRPluginFramework::MenuEntry*)
00102bcc 00000118 T CTRPluginFramework::eliminationMode(CTRPluginFramework::MenuEntry*)
00102ce4 00000480 T CTRPluginFramework::CountdownMode(CTRPluginFramework::MenuEntry*)
00103164 00000064 T CTRPluginFramework::disableFirstPersonView(CTRPluginFramework::MenuEntry*)
001031c8 0000013c T CTRPluginFramework::timeTrialGhost(CTRPluginFramework::MenuEntry*)
00103304 000000ec T CTRPluginFramework::vrExtender(CTRPluginFramework::MenuEntry*)
001033f0 0000010c T CTRPluginFramework::SetVR(CTRPluginFramework::MenuEntry*)
001034fc 00000088 T CTRPluginFramework::randomVR(CTRPluginFramework::MenuEntry*)
00103584 000000b4 T CTRPluginFramework::unlockEverything(CTRPluginFramework::MenuEntry*)
00103638 00000048 T CTRPluginFramework::NoDC(CTRPluginFramework::MenuEntry*)
00103680 0000005c T CTRPluginFramework::fastGame(CTRPluginFramework::MenuEntry*)
001036dc 0000020c T CTRPluginFramework::SetFlag(CTRPluginFramework::MenuEntry*)
001038e8 000000d0 T CTRPluginFramework::SetCoordinates(CTRPluginFramework::MenuEntry*)
001039b8 000000a0 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(char const*, std::allocator<char> const&) [clone .isra.15]
00103a58 00000004 T CTRPluginFramework::PatchProcess(CTRPluginFramework::FwkSettings&)
00103a5c 00001850 T CTRPluginFramework::main()
001052ac 00000030 T CTRPluginFramework::HoldKey::HoldKey(unsigned long, CTRPluginFramework::Time)
001052ac 00000030 T CTRPluginFramework::HoldKey::HoldKey(unsigned long, CTRPluginFramework::Time)
001052dc 000000a0 T CTRPluginFramework::QuickMenu::~QuickMenu()
001052dc 000000a0 T CTRPluginFramework::QuickMenu::~QuickMenu()
0010537c 000000b0 t void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct<char*>(char*, char*, std::forward_iterator_tag) [clone .isra.47]
0010537c 000000b0 t void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct<char const*>(char const*, char const*, std::forward_iterator_tag) [clone .isra.66]
0010542c 000000cc T CTRPluginFramework::QuickMenu::QuickMenu(unsigned long)
0010542c 000000cc T CTRPluginFramework::QuickMenu::QuickMenu(unsigned long)
001054f8 000002a8 W void std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::_M_realloc_insert<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&>(__gnu_cxx::__normal_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
001057a0 00000034 t _GLOBAL__sub_I__ZN18CTRPluginFramework13QuickMenuItemC2ERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEENS0_8ItemTypeE
001057d4 00000424 T CTRPluginFramework::KeepThreadMain(void*)
00105bf8 00000038 T onLoadCro
00105c30 00000164 T CTRPluginFramework::Initialize()
00105d94 00000098 T CTRPluginFramework::ThreadExit()
00105e2c 00000060 T abort
00105e8c 00000024 T CTRPluginFramework::ThreadInit(void*)
00105eb0 00000068 T LaunchMainThread
00105f18 0000000c t _GLOBAL__sub_I_g_mainThread
00105f24 00000018 T CTRPluginFramework::Color::Color(unsigned char, unsigned char, unsigned char, unsigned char)
00105f24 00000018 T CTRPluginFramework::Color::Color(unsigned char, unsigned char, unsigned char, unsigned char)
00105f3c 00000020 T CTRPluginFramework::Color::Color(unsigned long)
00105f3c 00000020 T CTRPluginFramework::Color::Color(unsigned long)
00105f5c 00000008 T CTRPluginFramework::Color::ToU32() const
00105f68 00000120 T CTRPluginFramework::Color::Fade(double)
00106088 00000040 T CTRPluginFramework::Color::operator<=(CTRPluginFramework::Color const&) const
001060c8 00000080 T CTRPluginFramework::Color::operator*(CTRPluginFramework::Color const&) const
00106148 000001d8 T CTRPluginFramework::Color::Blend(CTRPluginFramework::Color const&, CTRPluginFramework::Color::BlendMode) const
00106320 000001cc t _GLOBAL__sub_I__ZN18CTRPluginFramework5Color5BlackE
001064ec 00000068 T CTRPluginFramework::Screen::Draw(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned long, unsigned long, CTRPluginFramework::Color const&, CTRPluginFramework::Color const&) const
00106554 00000080 T CTRPluginFramework::OSD::Notify(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, CTRPluginFramework::Color, CTRPluginFramework::Color)
001065d4 00000004 T CTRPluginFramework::OSD::TryLock()
001065d8 00000004 T CTRPluginFramework::OSD::Unlock()
001065dc 000000d8 W void std::vector<bool (*)(CTRPluginFramework::Screen const&), std::allocator<bool (*)(CTRPluginFramework::Screen const&)> >::_M_realloc_insert<bool (* const&)(CTRPluginFramework::Screen const&)>(__gnu_cxx::__normal_iterator<bool (**)(CTRPluginFramework::Screen const&), std::vector<bool (*)(CTRPluginFramework::Screen const&), std::allocator<bool (*)(CTRPluginFramework::Screen const&)> > >, bool (* const&)(CTRPluginFramework::Screen const&))
001066b4 0000007c T CTRPluginFramework::OSD::Run(bool (*)(CTRPluginFramework::Screen const&))
00106730 000000c4 T CTRPluginFramework::ConvertToFloat(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, bool)
001067f4 000000a8 T CTRPluginFramework::stou32(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, unsigned long&)
0010689c 00000050 T CTRPluginFramework::Keyboard::Keyboard(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
0010689c 00000050 T CTRPluginFramework::Keyboard::Keyboard(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
001068ec 00000068 T CTRPluginFramework::Keyboard::Keyboard(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&)
001068ec 00000068 T CTRPluginFramework::Keyboard::Keyboard(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&)
00106954 0000002c T CTRPluginFramework::Keyboard::~Keyboard()
00106954 0000002c T CTRPluginFramework::Keyboard::~Keyboard()
00106980 00000008 T CTRPluginFramework::Keyboard::IsHexadecimal(bool)
00106988 00000008 T CTRPluginFramework::Keyboard::SetCompareCallback(bool (*)(void const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)) const
00106990 0000001c T CTRPluginFramework::Keyboard::Populate(std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&)
001069ac 00000028 T CTRPluginFramework::Keyboard::Open() const
001069d4 00000078 T CTRPluginFramework::Keyboard::Open(float&) const
00106a4c 000000b0 T CTRPluginFramework::Keyboard::Open(float&, float) const
00106afc 00000054 T CTRPluginFramework::Keyboard::Open(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&) const
00106b50 00000068 T CTRPluginFramework::Keyboard::Open(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const
00106bb8 0000009c W unsigned long __gnu_cxx::__stoa<unsigned long, unsigned long, char, int>(unsigned long (*)(char const*, char**, int), char const*, char const*, unsigned int*, int)
00106c54 0000008c T CTRPluginFramework::ConvertToU16(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, bool)
00106ce0 000000a8 T CTRPluginFramework::Keyboard::Open(unsigned short&) const
00106d88 000000e8 T CTRPluginFramework::Keyboard::Open(unsigned short&, unsigned short) const
00106e70 0000008c T CTRPluginFramework::ConvertToU32(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, bool)
00106efc 000000a8 T CTRPluginFramework::Keyboard::Open(unsigned long&) const
00106fa4 000000e8 T CTRPluginFramework::Keyboard::Open(unsigned long&, unsigned long) const
0010708c 0000008c T CTRPluginFramework::ConvertToU8(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, bool)
00107118 000000a8 T CTRPluginFramework::Keyboard::Open(unsigned char&) const
001071c0 000000e8 T CTRPluginFramework::Keyboard::Open(unsigned char&, unsigned char) const
001072a8 0000004c T CTRPluginFramework::MenuEntry::MenuEntry(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, void (*)(CTRPluginFramework::MenuEntry*), std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
001072a8 0000004c T CTRPluginFramework::MenuEntry::MenuEntry(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, void (*)(CTRPluginFramework::MenuEntry*), std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
001072f4 00000030 T CTRPluginFramework::MenuEntry::~MenuEntry()
001072f4 00000030 T CTRPluginFramework::MenuEntry::~MenuEntry()
00107324 00000008 T CTRPluginFramework::MenuEntry::RefreshNote() const
0010732c 00000028 t __tcf_0
00107354 00000078 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(char const*, std::allocator<char> const&) [clone .isra.40]
001073cc 00000008 T CTRPluginFramework::Hotkey::operator=(unsigned long)
001073d4 00000080 T CTRPluginFramework::Hotkey::AskForKeys()
00107454 0000007c T CTRPluginFramework::KeysToString[abi:cxx11](unsigned long)
001074d0 000000d8 T CTRPluginFramework::Hotkey::ToString[abi:cxx11](bool) const
001075a8 0000001c T CTRPluginFramework::HotkeyManager::HotkeyManager(CTRPluginFramework::MenuEntry*)
001075a8 0000001c T CTRPluginFramework::HotkeyManager::HotkeyManager(CTRPluginFramework::MenuEntry*)
001075c4 00000040 T CTRPluginFramework::HotkeyManager::~HotkeyManager()
001075c4 00000040 T CTRPluginFramework::HotkeyManager::~HotkeyManager()
00107604 00000010 T CTRPluginFramework::HotkeyManager::operator[](unsigned long)
00107614 000000c0 T CTRPluginFramework::HotkeyManager::ToString[abi:cxx11]()
001076d4 00000020 T CTRPluginFramework::HotkeyManager::Count()
001076f4 00000134 T CTRPluginFramework::HotkeyManager::AskForKeys()
00107828 00000128 t _GLOBAL__sub_I__ZN18CTRPluginFramework6HotkeyC2Ev
00107950 00000040 T CTRPluginFramework::MenuFolder::MenuFolder(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
00107950 00000040 T CTRPluginFramework::MenuFolder::MenuFolder(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
00107990 00000028 T CTRPluginFramework::MenuFolder::~MenuFolder()
00107990 00000028 T CTRPluginFramework::MenuFolder::~MenuFolder()
001079b8 00000010 T CTRPluginFramework::MenuFolder::Append(CTRPluginFramework::MenuEntry*) const
001079c8 0000006c T CTRPluginFramework::PluginMenu::PluginMenu(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long, unsigned long, unsigned long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)
001079c8 0000006c T CTRPluginFramework::PluginMenu::PluginMenu(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long, unsigned long, unsigned long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)
00107a34 00000014 T CTRPluginFramework::PluginMenu::Append(CTRPluginFramework::MenuFolder*) const
00107a48 00000038 T CTRPluginFramework::PluginMenu::Run() const
00107a80 00000008 T CTRPluginFramework::PluginMenu::IsOpen()
00107a88 00000010 T CTRPluginFramework::PluginMenu::GetRunningInstance()
00107a98 0000000c T CTRPluginFramework::PluginMenu::SynchronizeWithFrame(bool)
00107aa4 00000030 t CTRPluginFramework::GetCurrentTime()
00107ad4 00000014 T CTRPluginFramework::Clock::Clock()
00107ad4 00000014 T CTRPluginFramework::Clock::Clock()
00107ae8 00000038 T CTRPluginFramework::Clock::GetElapsedTime() const
00107b20 00000030 T CTRPluginFramework::Clock::HasTimePassed(CTRPluginFramework::Time) const
00107b50 00000044 T CTRPluginFramework::Clock::Restart()
00107b94 00000014 T CTRPluginFramework::Controller::GetKeysDown()
00107ba8 0000001c T CTRPluginFramework::Controller::IsKeyDown(CTRPluginFramework::Key)
00107bc4 0000001c T CTRPluginFramework::Controller::IsKeyPressed(CTRPluginFramework::Key)
00107be0 0000001c T CTRPluginFramework::Controller::IsKeyReleased(CTRPluginFramework::Key)
00107bfc 0000001c T CTRPluginFramework::Controller::IsKeysDown(unsigned long)
00107c18 0000002c T CTRPluginFramework::Controller::InjectKey(unsigned long)
00107c44 0000002c T CTRPluginFramework::Controller::Update()
00107c70 00000070 t CTRPluginFramework::Directory::_List() const::{lambda(FS_DirectoryEntry const&, FS_DirectoryEntry const&)#1}::operator()(FS_DirectoryEntry const&, FS_DirectoryEntry const&) const [clone .isra.11]
00107ce0 00000128 t void std::__adjust_heap<__gnu_cxx::__normal_iterator<FS_DirectoryEntry*, std::vector<FS_DirectoryEntry, std::allocator<FS_DirectoryEntry> > >, int, FS_DirectoryEntry, __gnu_cxx::__ops::_Iter_comp_iter<CTRPluginFramework::Directory::_List() const::{lambda(FS_DirectoryEntry const&, FS_DirectoryEntry const&)#1}> >(__gnu_cxx::__normal_iterator<FS_DirectoryEntry*, std::vector<FS_DirectoryEntry, std::allocator<FS_DirectoryEntry> > >, int, __gnu_cxx::__normal_iterator<FS_DirectoryEntry*, std::vector<FS_DirectoryEntry, std::allocator<FS_DirectoryEntry> > >, FS_DirectoryEntry, __gnu_cxx::__ops::_Iter_comp_iter<CTRPluginFramework::Directory::_List() const::{lambda(FS_DirectoryEntry const&, FS_DirectoryEntry const&)#1}>) [clone .isra.42]
00107e08 00000084 t void std::__make_heap<__gnu_cxx::__normal_iterator<FS_DirectoryEntry*, std::vector<FS_DirectoryEntry, std::allocator<FS_DirectoryEntry> > >, __gnu_cxx::__ops::_Iter_comp_iter<CTRPluginFramework::Directory::_List() const::{lambda(FS_DirectoryEntry const&, FS_DirectoryEntry const&)#1}> >(__gnu_cxx::__normal_iterator<FS_DirectoryEntry*, std::vector<FS_DirectoryEntry, std::allocator<FS_DirectoryEntry> > >, __gnu_cxx::__ops::_Iter_comp_iter<CTRPluginFramework::Directory::_List() const::{lambda(FS_DirectoryEntry const&, FS_DirectoryEntry const&)#1}>, __gnu_cxx::__ops::_Iter_comp_iter<CTRPluginFramework::Directory::_List() const::{lambda(FS_DirectoryEntry const&, FS_DirectoryEntry const&)#1}>&) [clone .isra.43]
00107e8c 0000007c t void std::__pop_heap<__gnu_cxx::__normal_iterator<FS_DirectoryEntry*, std::vector<FS_DirectoryEntry, std::allocator<FS_DirectoryEntry> > >, __gnu_cxx::__ops::_Iter_comp_iter<CTRPluginFramework::Directory::_List() const::{lambda(FS_DirectoryEntry const&, FS_DirectoryEntry const&)#1}> >(__gnu_cxx::__normal_iterator<FS_DirectoryEntry*, std::vector<FS_DirectoryEntry, std::allocator<FS_DirectoryEntry> > >, __gnu_cxx::__ops::_Iter_comp_iter<CTRPluginFramework::Directory::_List() const::{lambda(FS_DirectoryEntry const&, FS_DirectoryEntry const&)#1}>, __gnu_cxx::__ops::_Iter_comp_iter<CTRPluginFramework::Directory::_List() const::{lambda(FS_DirectoryEntry const&, FS_DirectoryEntry const&)#1}>, __gnu_cxx::__ops::_Iter_comp_iter<CTRPluginFramework::Directory::_List() const::{lambda(FS_DirectoryEntry const&, FS_DirectoryEntry const&)#1}>&) [clone .isra.44]
00107f08 00000078 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(char const*, std::allocator<char> const&) [clone .isra.53]
00107f80 00000064 t void std::__unguarded_linear_insert<__gnu_cxx::__normal_iterator<FS_DirectoryEntry*, std::vector<FS_DirectoryEntry, std::allocator<FS_DirectoryEntry> > >, __gnu_cxx::__ops::_Val_comp_iter<CTRPluginFramework::Directory::_List() const::{lambda(FS_DirectoryEntry const&, FS_DirectoryEntry const&)#1}> >(__gnu_cxx::__normal_iterator<FS_DirectoryEntry*, std::vector<FS_DirectoryEntry, std::allocator<FS_DirectoryEntry> > >, __gnu_cxx::__ops::_Val_comp_iter<CTRPluginFramework::Directory::_List() const::{lambda(FS_DirectoryEntry const&, FS_DirectoryEntry const&)#1}>) [clone .isra.69]
00107fe4 00000090 t void std::__insertion_sort<__gnu_cxx::__normal_iterator<FS_DirectoryEntry*, std::vector<FS_DirectoryEntry, std::allocator<FS_DirectoryEntry> > >, __gnu_cxx::__ops::_Iter_comp_iter<CTRPluginFramework::Directory::_List() const::{lambda(FS_DirectoryEntry const&, FS_DirectoryEntry const&)#1}> >(__gnu_cxx::__normal_iterator<FS_DirectoryEntry*, std::vector<FS_DirectoryEntry, std::allocator<FS_DirectoryEntry> > >, __gnu_cxx::__ops::_Iter_comp_iter<CTRPluginFramework::Directory::_List() const::{lambda(FS_DirectoryEntry const&, FS_DirectoryEntry const&)#1}>, __gnu_cxx::__ops::_Iter_comp_iter<CTRPluginFramework::Directory::_List() const::{lambda(FS_DirectoryEntry const&, FS_DirectoryEntry const&)#1}>) [clone .isra.81]
00108074 00000114 T CTRPluginFramework::_Path::SdmcFixPath(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)
00108188 00000074 T CTRPluginFramework::_Path::SdmcUtf16Path(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)
001081fc 0000008c T CTRPluginFramework::Directory::ChangeWorkingDirectory(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
00108288 00000078 T CTRPluginFramework::Directory::Create(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
00108300 00000078 T CTRPluginFramework::Directory::IsExists(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
00108378 00000034 T CTRPluginFramework::Directory::Close() const
001083ac 00000100 T CTRPluginFramework::Directory::Open(CTRPluginFramework::Directory&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, bool)
001084ac 00000014 T CTRPluginFramework::Directory::GetFullName[abi:cxx11]() const
001084c0 00000008 T CTRPluginFramework::Directory::IsOpen() const
001084c8 0000002c T CTRPluginFramework::Directory::Directory()
001084c8 0000002c T CTRPluginFramework::Directory::Directory()
001084f4 00000034 T CTRPluginFramework::Directory::Directory(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, bool)
001084f4 00000034 T CTRPluginFramework::Directory::Directory(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, bool)
00108528 0000002c T CTRPluginFramework::Directory::~Directory()
00108528 0000002c T CTRPluginFramework::Directory::~Directory()
00108554 00000100 W void std::vector<FS_DirectoryEntry, std::allocator<FS_DirectoryEntry> >::_M_realloc_insert<FS_DirectoryEntry const&>(__gnu_cxx::__normal_iterator<FS_DirectoryEntry*, std::vector<FS_DirectoryEntry, std::allocator<FS_DirectoryEntry> > >, FS_DirectoryEntry const&)
00108654 00000044 W std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::push_back(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
00108698 0000004c W std::enable_if<std::__and_<std::__not_<std::__is_tuple_like<FS_DirectoryEntry> >, std::is_move_constructible<FS_DirectoryEntry>, std::is_move_assignable<FS_DirectoryEntry> >::value, void>::type std::swap<FS_DirectoryEntry>(FS_DirectoryEntry&, FS_DirectoryEntry&)
001086e4 00000184 t void std::__introsort_loop<__gnu_cxx::__normal_iterator<FS_DirectoryEntry*, std::vector<FS_DirectoryEntry, std::allocator<FS_DirectoryEntry> > >, int, __gnu_cxx::__ops::_Iter_comp_iter<CTRPluginFramework::Directory::_List() const::{lambda(FS_DirectoryEntry const&, FS_DirectoryEntry const&)#1}> >(__gnu_cxx::__normal_iterator<FS_DirectoryEntry*, std::vector<FS_DirectoryEntry, std::allocator<FS_DirectoryEntry> > >, __gnu_cxx::__ops::_Iter_comp_iter<CTRPluginFramework::Directory::_List() const::{lambda(FS_DirectoryEntry const&, FS_DirectoryEntry const&)#1}>, int, __gnu_cxx::__ops::_Iter_comp_iter<CTRPluginFramework::Directory::_List() const::{lambda(FS_DirectoryEntry const&, FS_DirectoryEntry const&)#1}>)
00108868 0000010c T CTRPluginFramework::Directory::_List() const
00108974 00000168 T CTRPluginFramework::Directory::ListFiles(std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const
00108adc 00000160 T CTRPluginFramework::Directory::ListDirectories(std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const
00108c3c 00000038 t _GLOBAL__sub_I__ZN18CTRPluginFramework5_Path11SdmcFixPathERNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE
00108c74 000000e0 T CTRPluginFramework::File::Rename(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
00108d54 00000060 T CTRPluginFramework::File::Remove(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
00108db4 00000088 T CTRPluginFramework::File::Exists(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
00108e3c 0000005c T CTRPluginFramework::File::Close() const
00108e98 000000dc T CTRPluginFramework::File::Open(CTRPluginFramework::File&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, int)
00108f74 000000b0 T CTRPluginFramework::File::Read(void*, unsigned long) const
00109024 000000e8 T CTRPluginFramework::File::Write(void const*, unsigned long)
0010910c 0000002c T CTRPluginFramework::File::WriteLine(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)
00109138 000000b0 T CTRPluginFramework::File::Seek(long long, CTRPluginFramework::File::SeekPos) const
001091e8 00000008 T CTRPluginFramework::File::Tell() const
001091f0 00000010 T CTRPluginFramework::File::Rewind() const
00109200 00000008 T CTRPluginFramework::File::Flush() const
00109208 00000044 T CTRPluginFramework::File::GetSize() const
0010924c 00000008 T CTRPluginFramework::File::IsOpen() const
00109254 00000014 T CTRPluginFramework::File::GetFullName[abi:cxx11]() const
00109268 00000034 T CTRPluginFramework::File::File()
00109268 00000034 T CTRPluginFramework::File::File()
0010929c 00000040 T CTRPluginFramework::File::File(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned long)
0010929c 00000040 T CTRPluginFramework::File::File(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned long)
001092dc 00000100 T CTRPluginFramework::FwkSettings::SetThemeDefault()
001093dc 00000010 T CTRPluginFramework::Process::GetHandle()
001093ec 00000010 T CTRPluginFramework::Process::GetTitleID()
001093fc 00000060 T CTRPluginFramework::Process::GetTitleID(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)
0010945c 00000038 T CTRPluginFramework::Process::GetName(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)
00109494 00000024 T CTRPluginFramework::Process::GetTextSize()
001094b8 0000005c T CTRPluginFramework::Process::ProtectMemory(unsigned long, unsigned long, int)
00109514 00000074 T CTRPluginFramework::Process::ProtectRegion(unsigned long, int)
00109588 000000a8 T CTRPluginFramework::Process::CheckAddress(unsigned long, unsigned long)
00109630 000000b8 T CTRPluginFramework::Process::CopyMemory(void*, void const*, unsigned long)
001096e8 000000b0 T CTRPluginFramework::Process::CheckRegion(unsigned long, unsigned long&, unsigned long)
00109798 0000003c T CTRPluginFramework::Process::Write32(unsigned long, unsigned long)
001097d4 00000028 T CTRPluginFramework::Process::Write16(unsigned long, unsigned short)
001097fc 00000020 T CTRPluginFramework::Process::Write8(unsigned long, unsigned char)
0010981c 00000028 T CTRPluginFramework::Process::WriteFloat(unsigned long, float)
00109844 00000040 T CTRPluginFramework::Process::Read32(unsigned long, unsigned long&)
00109884 0000002c T CTRPluginFramework::Process::Read16(unsigned long, unsigned short&)
001098b0 00000024 T CTRPluginFramework::Process::Read8(unsigned long, unsigned char&)
001098d4 00000024 T CTRPluginFramework::Process::ReadFloat(unsigned long, float&)
001098f8 00000048 T CTRPluginFramework::Sleep(CTRPluginFramework::Time)
00109940 00000010 T CTRPluginFramework::System::IsNew3DS()
00109950 00000010 T CTRPluginFramework::System::IsLoaderNTR()
00109960 00000014 T CTRPluginFramework::Time::Time()
00109960 00000014 T CTRPluginFramework::Time::Time()
00109974 00000020 T CTRPluginFramework::Time::AsSeconds() const
00109994 00000018 T CTRPluginFramework::Time::AsMilliseconds() const
001099ac 00000008 T CTRPluginFramework::Time::AsMicroseconds() const
001099b4 00000028 T CTRPluginFramework::Seconds(float)
001099dc 00000010 T CTRPluginFramework::Milliseconds(int)
001099ec 00000008 T CTRPluginFramework::Microseconds(long long)
001099f4 00000014 T CTRPluginFramework::operator<(CTRPluginFramework::Time, CTRPluginFramework::Time)
00109a08 00000014 T CTRPluginFramework::operator>(CTRPluginFramework::Time, CTRPluginFramework::Time)
00109a1c 00000014 T CTRPluginFramework::operator>=(CTRPluginFramework::Time, CTRPluginFramework::Time)
00109a30 00000020 T CTRPluginFramework::operator-(CTRPluginFramework::Time, CTRPluginFramework::Time)
00109a50 0000004c T CTRPluginFramework::operator/(CTRPluginFramework::Time, float)
00109a9c 00000018 t _GLOBAL__sub_I__ZN18CTRPluginFramework4Time4ZeroE
00109ab4 00000064 t void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct<char const*>(char const*, char const*, std::forward_iterator_tag) [clone .isra.17]
00109b18 00000074 T CTRPluginFramework::Utils::Format[abi:cxx11](char const*, ...)
00109b8c 0000005c T CTRPluginFramework::Utils::ToHex[abi:cxx11](unsigned long)
00109be8 00000080 T CTRPluginFramework::Utils::ToString[abi:cxx11](float, int)
00109c68 000000b4 T CTRPluginFramework::Utils::GetSize(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
00109d1c 00000140 T CTRPluginFramework::Utils::RemoveLastChar(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)
00109e5c 00000038 W std::mersenne_twister_engine<unsigned int, 32u, 624u, 397u, 31u, 2567483615u, 11u, 4294967295u, 7u, 2636928640u, 15u, 4022730752u, 18u, 1812433253u>::seed(unsigned int)
00109e94 0000001c T CTRPluginFramework::InitializeRandomEngine()
00109eb0 0000010c W std::mersenne_twister_engine<unsigned int, 32u, 624u, 397u, 31u, 2567483615u, 11u, 4294967295u, 7u, 2636928640u, 15u, 4022730752u, 18u, 1812433253u>::operator()()
00109fbc 00000068 T CTRPluginFramework::Utils::Random(unsigned long, unsigned long)
0010a024 0000001c t _GLOBAL__sub_I__ZN18CTRPluginFramework5Utils6FormatB5cxx11EPKcz
0010a040 00000078 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(char const*, std::allocator<char> const&) [clone .isra.24]
0010a0b8 0000001c W CTRPluginFramework::File::~File()
0010a0b8 0000001c W CTRPluginFramework::File::~File()
0010a0d4 000000a0 W CTRPluginFramework::BMPImage::BMPImage(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
0010a0d4 000000a0 W CTRPluginFramework::BMPImage::BMPImage(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
0010a174 00000060 W CTRPluginFramework::BMPImage::BMPImage(unsigned long, unsigned long)
0010a174 00000060 W CTRPluginFramework::BMPImage::BMPImage(unsigned long, unsigned long)
0010a1d4 00000010 W CTRPluginFramework::BMPImage::DataClear()
0010a1e4 00000134 W CTRPluginFramework::BMPImage::Resample(CTRPluginFramework::BMPImage&, int, int)
0010a318 0000002c T CTRPluginFramework::GetRatio(int, int, int, int)
0010a344 00000138 T CTRPluginFramework::PostProcess(CTRPluginFramework::BMPImage*, int, int)
0010a47c 00000298 T CTRPluginFramework::Preferences::OpenConfigFile(CTRPluginFramework::File&, CTRPluginFramework::Preferences::HeaderV1&)
0010a714 000000d0 T CTRPluginFramework::Preferences::LoadSettings()
0010a7e4 000000b8 T CTRPluginFramework::Preferences::LoadSavedEnabledCheats()
0010a89c 000000b8 T CTRPluginFramework::Preferences::LoadSavedFavorites()
0010a954 0000005c T CTRPluginFramework::Preferences::LoadHotkeysFromFile()
0010a9b0 00000194 T CTRPluginFramework::Preferences::LoadBackgrounds()
0010ab44 00000080 T CTRPluginFramework::Preferences::UnloadBackgrounds()
0010abc4 000001ec T CTRPluginFramework::Preferences::WriteSettings()
0010adb0 00000004 T CTRPluginFramework::Preferences::Initialize()
0010adb4 00000078 t _GLOBAL__sub_I__ZN18CTRPluginFramework11Preferences18topBackgroundImageE
0010ae2c 00000008 t int CTRPluginFramework::BMPImage::ReadFromFile<unsigned int>(CTRPluginFramework::File&, unsigned int&) [clone .isra.9]
0010ae34 00000078 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(char const*, std::allocator<char> const&) [clone .isra.25]
0010aeac 0000000c W CTRPluginFramework::BMPImage::BitmapFileHeader::Clear()
0010aeb8 0000000c W CTRPluginFramework::BMPImage::BitmapInformationHeader::Clear()
0010aec4 00000100 W CTRPluginFramework::BMPImage::ReadBIH(CTRPluginFramework::File&, CTRPluginFramework::BMPImage::BitmapInformationHeader&)
0010afc4 00000030 T CTRPluginFramework::BMPImage::~BMPImage()
0010afc4 00000030 T CTRPluginFramework::BMPImage::~BMPImage()
0010aff4 000000cc T CTRPluginFramework::BMPImage::FillWithImg(CTRPluginFramework::BMPImage const&)
0010b0c0 00000114 T CTRPluginFramework::BMPImage::Draw(int, int)
0010b1d4 00000204 T CTRPluginFramework::BMPImage::Draw(CTRPluginFramework::Rect<int> const&, float)
0010b3d8 00000058 T CTRPluginFramework::BMPImage::CreateBitmap()
0010b430 000004d4 T CTRPluginFramework::BMPImage::LoadBitmap()
0010b904 00000010 T CTRPluginFramework::Glyph::Width() const
0010b914 00000060 T CTRPluginFramework::Font::Initialize()
0010b974 00000354 T CTRPluginFramework::GetOriginalGlyph(unsigned long)
0010bcc8 00000308 T CTRPluginFramework::ShrinkGlyph(unsigned char*, unsigned char*)
0010bfd0 000000f4 T CTRPluginFramework::Font::CacheGlyph(unsigned long)
0010c0c4 00000068 T CTRPluginFramework::Font::GetGlyph(unsigned char*&)
0010c12c 00000020 T CTRPluginFramework::Font::GetGlyph(char)
0010c14c 0000002c W std::__cxx11::list<CTRPluginFramework::OSDImpl::OSDMessage*, std::allocator<CTRPluginFramework::OSDImpl::OSDMessage*> >::~list()
0010c14c 0000002c W std::__cxx11::list<CTRPluginFramework::OSDImpl::OSDMessage*, std::allocator<CTRPluginFramework::OSDImpl::OSDMessage*> >::~list()
0010c178 00000020 W std::vector<bool (*)(CTRPluginFramework::Screen const&), std::allocator<bool (*)(CTRPluginFramework::Screen const&)> >::~vector()
0010c178 00000020 W std::vector<bool (*)(CTRPluginFramework::Screen const&), std::allocator<bool (*)(CTRPluginFramework::Screen const&)> >::~vector()
0010c198 000000b8 t CTRPluginFramework::memsearch(unsigned char*, void const*, unsigned long, unsigned long) [clone .constprop.32]
0010c250 00000054 t CTRPluginFramework::SearchStmfd(unsigned long, unsigned long, unsigned long, bool&) [clone .part.0] [clone .constprop.36]
0010c2a4 0000009c T CTRPluginFramework::OSDImpl::OSDMessage::OSDMessage(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::Color const&, CTRPluginFramework::Color const&)
0010c2a4 0000009c T CTRPluginFramework::OSDImpl::OSDMessage::OSDMessage(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::Color const&, CTRPluginFramework::Color const&)
0010c340 0000000c T CTRPluginFramework::OSDImpl::Lock()
0010c34c 0000001c T CTRPluginFramework::OSDImpl::TryLock()
0010c368 0000000c T CTRPluginFramework::OSDImpl::Unlock()
0010c374 000000e4 T CTRPluginFramework::OSDImpl::Draw()
0010c458 000000d8 T CTRPluginFramework::OSDImpl::UpdateScreens()
0010c530 000001b8 T CTRPluginFramework::InstallOSD()
0010c6e8 00000028 T CTRPluginFramework::OSDImpl::_Initialize()
0010c710 000000e0 t _GLOBAL__sub_I__ZN18CTRPluginFramework7OSDImpl12DrawSaveIconE
0010c7f0 00000108 T CTRPluginFramework::OSDImpl::Update()
0010c8f8 00000618 T CTRPluginFramework::OSDImpl::CallbackGlobal(unsigned long, void*, void*, int, int)
0010cf10 00000068 T CTRPluginFramework::OSDImpl::MainCallback(unsigned long, int, void*, void*, int, int, int)
0010cf78 00000064 T CTRPluginFramework::OSDImpl::MainCallback2(unsigned long, unsigned long*, unsigned long, unsigned long)
0010cfdc 0000002c T CTRPluginFramework::PrivColor::_ReadRGBA8(unsigned char*)
0010d008 00000024 T CTRPluginFramework::PrivColor::_ReadBGR8(unsigned char*)
0010d02c 00000038 T CTRPluginFramework::PrivColor::_ReadRGB565(unsigned char*)
0010d064 00000038 T CTRPluginFramework::PrivColor::_ReadRGB5A1(unsigned char*)
0010d09c 00000030 T CTRPluginFramework::PrivColor::_ReadRGBA4(unsigned char*)
0010d0cc 00000028 T CTRPluginFramework::PrivColor::_WriteRGBA8(unsigned char*, CTRPluginFramework::Color const&)
0010d0f4 00000020 T CTRPluginFramework::PrivColor::_WriteBGR8(unsigned char*, CTRPluginFramework::Color const&)
0010d114 0000003c T CTRPluginFramework::PrivColor::_WriteRGB565(unsigned char*, CTRPluginFramework::Color const&)
0010d150 00000048 T CTRPluginFramework::PrivColor::_WriteRGB5A1(unsigned char*, CTRPluginFramework::Color const&)
0010d198 00000044 T CTRPluginFramework::PrivColor::_WriteRGBA4(unsigned char*, CTRPluginFramework::Color const&)
0010d1dc 00000104 T CTRPluginFramework::PrivColor::SetFormat(GSPGPU_FramebufferFormats)
0010d2e0 0000003c T CTRPluginFramework::PrivColor::UseClamp(bool, CTRPluginFramework::Rect<int>)
0010d31c 00000070 W CTRPluginFramework::Rect<int>::Contains(int, int) const
0010d38c 00000084 T CTRPluginFramework::PrivColor::_WriteRGBA8Clamp(unsigned char*, CTRPluginFramework::Color const&)
0010d410 00000078 T CTRPluginFramework::PrivColor::_WriteBGR8Clamp(unsigned char*, CTRPluginFramework::Color const&)
0010d488 00000098 T CTRPluginFramework::PrivColor::_WriteRGB565Clamp(unsigned char*, CTRPluginFramework::Color const&)
0010d520 000000a4 T CTRPluginFramework::PrivColor::_WriteRGB5A1Clamp(unsigned char*, CTRPluginFramework::Color const&)
0010d5c4 000000a0 T CTRPluginFramework::PrivColor::_WriteRGBA4Clamp(unsigned char*, CTRPluginFramework::Color const&)
0010d664 00000020 t _GLOBAL__sub_I__ZN18CTRPluginFramework9PrivColor15FromFramebufferE
0010d684 0000003c T CTRPluginFramework::Renderer::SetTarget(CTRPluginFramework::Target)
0010d6c0 00000278 T CTRPluginFramework::Renderer::MenuSelector(int, int, int, int)
0010d938 00000120 T CTRPluginFramework::Renderer::EndFrame(bool)
0010da58 0000001c t _GLOBAL__sub_I__ZN18CTRPluginFramework8Renderer7_targetE
0010da74 00000044 t CTRPluginFramework::Line<int>* std::__uninitialized_move_if_noexcept_a<CTRPluginFramework::Line<int>*, CTRPluginFramework::Line<int>*, std::allocator<CTRPluginFramework::Line<int> > >(CTRPluginFramework::Line<int>*, CTRPluginFramework::Line<int>*, CTRPluginFramework::Line<int>*, std::allocator<CTRPluginFramework::Line<int> >&) [clone .isra.41]
0010dab8 000000a8 T CTRPluginFramework::Renderer::DrawLine(int, int, int, CTRPluginFramework::Color const&, int)
0010db60 000000a8 T CTRPluginFramework::Renderer::DrawLine(CTRPluginFramework::Vector<int>&, CTRPluginFramework::Vector<int>&, CTRPluginFramework::Color const&)
0010dc08 000000c0 T CTRPluginFramework::Renderer::DrawStippledLine(int, int, int, CTRPluginFramework::Color const&, int)
0010dcc8 00000094 T CTRPluginFramework::Renderer::DrawRect(int, int, int, int, CTRPluginFramework::Color const&, bool, int)
0010dd5c 000000a8 T CTRPluginFramework::Renderer::DrawRect(CTRPluginFramework::Rect<int> const&, CTRPluginFramework::Color const&, bool)
0010de04 00000054 T CTRPluginFramework::Renderer::DrawRect2(CTRPluginFramework::Rect<int> const&, CTRPluginFramework::Color const&, CTRPluginFramework::Color const&)
0010de58 00000044 W std::_Deque_base<CTRPluginFramework::Vector<int>, std::allocator<CTRPluginFramework::Vector<int> > >::~_Deque_base()
0010de58 00000044 W std::_Deque_base<CTRPluginFramework::Vector<int>, std::allocator<CTRPluginFramework::Vector<int> > >::~_Deque_base()
0010de9c 00000054 W std::deque<CTRPluginFramework::Vector<int>, std::allocator<CTRPluginFramework::Vector<int> > >::pop_front()
0010def0 00000194 W void std::deque<CTRPluginFramework::Vector<int>, std::allocator<CTRPluginFramework::Vector<int> > >::emplace_back<CTRPluginFramework::Vector<int> >(CTRPluginFramework::Vector<int>&&)
0010e084 000000b0 W void std::vector<CTRPluginFramework::Line<int>, std::allocator<CTRPluginFramework::Line<int> > >::_M_realloc_insert<CTRPluginFramework::Line<int> >(__gnu_cxx::__normal_iterator<CTRPluginFramework::Line<int>*, std::vector<CTRPluginFramework::Line<int>, std::allocator<CTRPluginFramework::Line<int> > > >, CTRPluginFramework::Line<int>&&)
0010e134 00000044 W void std::vector<CTRPluginFramework::Line<int>, std::allocator<CTRPluginFramework::Line<int> > >::emplace_back<CTRPluginFramework::Line<int> >(CTRPluginFramework::Line<int>&&)
0010e178 0000068c T CTRPluginFramework::Renderer::ComputeRoundedRectangle(std::vector<CTRPluginFramework::Line<int>, std::allocator<CTRPluginFramework::Line<int> > >&, CTRPluginFramework::Rect<int> const&, float, int)
0010e804 0000003c T CTRPluginFramework::Renderer::DrawPixel(int, int, CTRPluginFramework::Color const&)
0010e840 00000140 T CTRPluginFramework::Renderer::DrawCharacter(int, int, int, CTRPluginFramework::Color const&)
0010e980 00000144 T CTRPluginFramework::Renderer::DrawCharacter(int, int, int, CTRPluginFramework::Color const&, CTRPluginFramework::Color const&)
0010eac4 000000c8 T CTRPluginFramework::Renderer::DrawString(char const*, int, int&, CTRPluginFramework::Color)
0010eb8c 000001c4 T CTRPluginFramework::Renderer::DrawString(char const*, int, int&, CTRPluginFramework::Color, CTRPluginFramework::Color)
0010ed50 00000030 T CTRPluginFramework::Renderer::LinuxFontSize(char const*)
0010ed80 00000130 T CTRPluginFramework::Renderer::FontCalcGlyphPos(fontGlyphPos_s*, charWidthInfo_s**, int, float, float)
0010eeb0 000000d4 T CTRPluginFramework::Renderer::GetTextSize(char const*)
0010ef84 0000014c T CTRPluginFramework::Renderer::GetTextInfos(char const*, int&, float&, float)
0010f0d0 00000104 T CTRPluginFramework::Renderer::DrawGlyph(CTRPluginFramework::Glyph*, int, int, CTRPluginFramework::Color)
0010f1d4 00000154 T CTRPluginFramework::Renderer::DrawGlyph(CTRPluginFramework::Glyph*, int, int, float&, CTRPluginFramework::Color)
0010f328 00000198 T CTRPluginFramework::Renderer::DrawSysStringReturn(unsigned char const*, int, int&, int, CTRPluginFramework::Color, int)
0010f4c0 000001ec T CTRPluginFramework::Renderer::DrawSysString(char const*, int, int&, int, CTRPluginFramework::Color, float, char const*)
0010f6ac 00000070 T CTRPluginFramework::Renderer::DrawSysCheckBox(char const*, int, int&, int, CTRPluginFramework::Color, bool, float)
0010f71c 0000006c T CTRPluginFramework::Renderer::DrawSysFolder(char const*, int, int&, int, CTRPluginFramework::Color, float)
0010f788 00000024 t _GLOBAL__sub_I__ZN18CTRPluginFramework8Renderer16FontCalcGlyphPosEP14fontGlyphPos_sPP15charWidthInfo_siff
0010f7ac 00000028 T CTRPluginFramework::Window::~Window()
0010f7ac 00000028 T CTRPluginFramework::Window::~Window()
0010f7d4 00000004 W CTRPluginFramework::IconButton<CTRPluginFramework::Window, void>::~IconButton()
0010f7d4 00000004 W CTRPluginFramework::IconButton<CTRPluginFramework::Window, void>::~IconButton()
0010f7d8 0000001c W CTRPluginFramework::IconButton<CTRPluginFramework::Window, void>::Draw()
0010f7f4 00000014 W CTRPluginFramework::IconButton<CTRPluginFramework::Window, void>::~IconButton()
0010f808 00000064 W CTRPluginFramework::IconButton<CTRPluginFramework::Window, void>::operator()()
0010f86c 000000c8 T CTRPluginFramework::Window::Window(unsigned long, unsigned long, unsigned long, unsigned long, bool, CTRPluginFramework::BMPImage*)
0010f86c 000000c8 T CTRPluginFramework::Window::Window(unsigned long, unsigned long, unsigned long, unsigned long, bool, CTRPluginFramework::BMPImage*)
0010f934 00000064 T CTRPluginFramework::Window::Draw() const
0010f998 000000d8 T CTRPluginFramework::Window::Draw(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const
0010fa70 00000018 T CTRPluginFramework::Window::Update(bool, CTRPluginFramework::Vector<int> const&) const
0010fa88 00000018 T CTRPluginFramework::Window::MustClose() const
0010faa0 00000014 T CTRPluginFramework::Window::Close() const
0010fab4 00000004 T CTRPluginFramework::Window::GetRect() const
0010fab8 0000002c T CTRPluginFramework::Window::Initialize()
0010fae4 00000080 W CTRPluginFramework::IconButton<CTRPluginFramework::Window, void>::Update(bool, CTRPluginFramework::Vector<int> const&)
0010fb64 000000a8 t _GLOBAL__sub_I__ZN18CTRPluginFramework6Window12BottomWindowE
0010fc0c 000001b0 W CTRPluginFramework::Icon::DrawImg(unsigned char*, int, int, int, int)
0010fdbc 0000002c T CTRPluginFramework::Icon::DrawAbout(int, int)
0010fde8 0000003c T CTRPluginFramework::Icon::DrawCapsLockOn(int, int, bool)
0010fe24 0000003c T CTRPluginFramework::Icon::DrawCheckBox(int, int, bool)
0010fe60 0000003c T CTRPluginFramework::Icon::DrawClearSymbol(int, int, bool)
0010fe9c 0000003c T CTRPluginFramework::Icon::DrawClipboard(int, int, bool)
0010fed8 0000003c T CTRPluginFramework::Icon::DrawClose(int, int, bool)
0010ff14 0000002c T CTRPluginFramework::Icon::DrawController(int, int)
0010ff40 0000003c T CTRPluginFramework::Icon::DrawCut(int, int, bool)
0010ff7c 0000003c T CTRPluginFramework::Icon::DrawDuplicate(int, int, bool)
0010ffb8 0000003c T CTRPluginFramework::Icon::DrawEdit(int, int, bool)
0010fff4 0000003c T CTRPluginFramework::Icon::DrawEnterKey(int, int, bool)
00110030 0000002c T CTRPluginFramework::Icon::DrawFolder(int, int)
0011005c 0000003c T CTRPluginFramework::Icon::DrawAddFavorite(int, int, bool)
00110098 0000002c T CTRPluginFramework::Icon::DrawFavorite(int, int)
001100c4 0000002c T CTRPluginFramework::Icon::DrawFile(int, int)
001100f0 0000002c T CTRPluginFramework::Icon::DrawGameController(int, int)
0011011c 0000003c T CTRPluginFramework::Icon::DrawGameController(int, int, bool)
00110158 0000002c T CTRPluginFramework::Icon::DrawGrid(int, int)
00110184 0000003c T CTRPluginFramework::Icon::DrawInfo(int, int, bool)
001101c0 0000002c T CTRPluginFramework::Icon::DrawGuide(int, int)
001101ec 00000034 T CTRPluginFramework::Icon::DrawHandCursor(int, int)
00110220 0000003c T CTRPluginFramework::Icon::DrawKeyboard(int, int, bool)
0011025c 0000002c T CTRPluginFramework::Icon::DrawMore(int, int)
00110288 0000003c T CTRPluginFramework::Icon::DrawPlus(int, int, bool)
001102c4 0000002c T CTRPluginFramework::Icon::DrawRAM(int, int)
001102f0 0000002c T CTRPluginFramework::Icon::DrawRestart(int, int)
0011031c 0000002c T CTRPluginFramework::Icon::DrawRocket(int, int)
00110348 0000002c T CTRPluginFramework::Icon::DrawSave(int, int)
00110374 0000002c T CTRPluginFramework::Icon::DrawSearch(int, int)
001103a0 0000002c T CTRPluginFramework::Icon::DrawSettings(int, int)
001103cc 0000002c T CTRPluginFramework::Icon::DrawShutdown(int, int)
001103f8 0000002c T CTRPluginFramework::Icon::DrawTools(int, int)
00110424 0000003c T CTRPluginFramework::Icon::DrawTrash(int, int, bool)
00110460 0000001c W CTRPluginFramework::IconButton<CTRPluginFramework::CheckBox, void>::Draw()
0011047c 00000004 W CTRPluginFramework::IconButton<CTRPluginFramework::CheckBox, void>::~IconButton()
0011047c 00000004 W CTRPluginFramework::IconButton<CTRPluginFramework::CheckBox, void>::~IconButton()
00110480 00000014 W CTRPluginFramework::IconButton<CTRPluginFramework::CheckBox, void>::~IconButton()
00110494 00000064 W CTRPluginFramework::IconButton<CTRPluginFramework::CheckBox, void>::operator()()
001104f8 00000084 t void __gnu_cxx::new_allocator<CTRPluginFramework::CheckBox>::construct<CTRPluginFramework::CheckBox, CTRPluginFramework::CheckBox>(CTRPluginFramework::CheckBox*, CTRPluginFramework::CheckBox&&) [clone .isra.16]
0011057c 000000c8 t CTRPluginFramework::CheckBox* std::__uninitialized_move_if_noexcept_a<CTRPluginFramework::CheckBox*, CTRPluginFramework::CheckBox*, std::allocator<CTRPluginFramework::CheckBox> >(CTRPluginFramework::CheckBox*, CTRPluginFramework::CheckBox*, CTRPluginFramework::CheckBox*, std::allocator<CTRPluginFramework::CheckBox>&) [clone .isra.41]
00110644 00000090 T CTRPluginFramework::HotkeysModifier::_DrawTop() const
001106d4 0000011c T CTRPluginFramework::HotkeysModifier::_DrawBottom()
001107f0 00000070 T CTRPluginFramework::HotkeysModifier::_Update()
00110860 000000a0 T CTRPluginFramework::HotkeysModifier::operator()()
00110900 0000002c W void std::_Destroy_aux<false>::__destroy<CTRPluginFramework::CheckBox*>(CTRPluginFramework::CheckBox*, CTRPluginFramework::CheckBox*)
0011092c 00000030 T CTRPluginFramework::HotkeysModifier::~HotkeysModifier()
0011092c 00000030 T CTRPluginFramework::HotkeysModifier::~HotkeysModifier()
0011095c 000000d4 W void std::vector<CTRPluginFramework::CheckBox, std::allocator<CTRPluginFramework::CheckBox> >::_M_realloc_insert<CTRPluginFramework::CheckBox>(__gnu_cxx::__normal_iterator<CTRPluginFramework::CheckBox*, std::vector<CTRPluginFramework::CheckBox, std::allocator<CTRPluginFramework::CheckBox> > >, CTRPluginFramework::CheckBox&&)
00110a30 0000003c W void std::vector<CTRPluginFramework::CheckBox, std::allocator<CTRPluginFramework::CheckBox> >::emplace_back<CTRPluginFramework::CheckBox>(CTRPluginFramework::CheckBox&&)
00110a6c 0000011c T CTRPluginFramework::HotkeysModifier::HotkeysModifier(unsigned long&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
00110a6c 0000011c T CTRPluginFramework::HotkeysModifier::HotkeysModifier(unsigned long&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
00110b88 00000080 W CTRPluginFramework::IconButton<CTRPluginFramework::CheckBox, void>::Update(bool, CTRPluginFramework::Vector<int> const&)
00110c08 00000078 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(char const*, std::allocator<char> const&) [clone .isra.47]
00110c80 000000a4 t CTRPluginFramework::TouchKey* std::__uninitialized_move_if_noexcept_a<CTRPluginFramework::TouchKey*, CTRPluginFramework::TouchKey*, std::allocator<CTRPluginFramework::TouchKey> >(CTRPluginFramework::TouchKey*, CTRPluginFramework::TouchKey*, CTRPluginFramework::TouchKey*, std::allocator<CTRPluginFramework::TouchKey>&) [clone .isra.69]
00110d24 00000144 T CTRPluginFramework::KeyboardImpl::KeyboardImpl(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
00110d24 00000144 T CTRPluginFramework::KeyboardImpl::KeyboardImpl(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
00110e68 00000148 T CTRPluginFramework::KeyboardImpl::KeyboardImpl(CTRPluginFramework::Keyboard*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
00110e68 00000148 T CTRPluginFramework::KeyboardImpl::KeyboardImpl(CTRPluginFramework::Keyboard*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
00110fb0 00000064 T CTRPluginFramework::KeyboardImpl::~KeyboardImpl()
00110fb0 00000064 T CTRPluginFramework::KeyboardImpl::~KeyboardImpl()
00111014 00000008 T CTRPluginFramework::KeyboardImpl::IsHexadecimal() const
0011101c 00000008 T CTRPluginFramework::KeyboardImpl::SetMaxInput(int)
00111024 00000008 T CTRPluginFramework::KeyboardImpl::GetInput[abi:cxx11]()
0011102c 00000008 T CTRPluginFramework::KeyboardImpl::SetConvertCallback(void* (*)(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, bool))
00111034 00000008 T CTRPluginFramework::KeyboardImpl::SetCompareCallback(bool (*)(void const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&))
0011103c 00000164 T CTRPluginFramework::KeyboardImpl::_RenderTop()
001111a0 00000494 T CTRPluginFramework::KeyboardImpl::_RenderBottom()
00111634 00000064 T CTRPluginFramework::UnitsToNextChar(char const*, int)
00111698 00000090 T CTRPluginFramework::UnitsToPreviousChar(char const*, int)
00111728 00000080 T CTRPluginFramework::KeyboardImpl::_ScrollUp()
001117a8 00000084 T CTRPluginFramework::KeyboardImpl::_ScrollDown()
0011182c 00000160 T CTRPluginFramework::KeyboardImpl::_UpdateScrollInfos()
0011198c 00000280 T CTRPluginFramework::KeyboardImpl::_Update(float)
00111c0c 0000057c T CTRPluginFramework::KeyboardImpl::_CheckKeys()
00112188 00000068 T CTRPluginFramework::KeyboardImpl::_CheckInput()
001121f0 00000050 T CTRPluginFramework::KeyboardImpl::_CheckButtons(int&)
00112240 00000070 T CTRPluginFramework::KeyboardImpl::operator()(int&)
001122b0 00000008 T CTRPluginFramework::KeyboardImpl::CanChangeLayout(bool)
001122b8 00000044 W std::_Deque_base<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >::~_Deque_base()
001122b8 00000044 W std::_Deque_base<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >::~_Deque_base()
001122fc 00000030 W std::vector<CTRPluginFramework::TouchKey, std::allocator<CTRPluginFramework::TouchKey> >::_M_range_check(unsigned int) const
0011232c 000000d8 W void std::vector<CTRPluginFramework::TouchKeyString*, std::allocator<CTRPluginFramework::TouchKeyString*> >::_M_realloc_insert<CTRPluginFramework::TouchKeyString*>(__gnu_cxx::__normal_iterator<CTRPluginFramework::TouchKeyString**, std::vector<CTRPluginFramework::TouchKeyString*, std::allocator<CTRPluginFramework::TouchKeyString*> > >, CTRPluginFramework::TouchKeyString*&&)
00112404 000001cc T CTRPluginFramework::KeyboardImpl::Populate(std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&)
001125d0 0000002c W void std::_Destroy_aux<false>::__destroy<CTRPluginFramework::TouchKey*>(CTRPluginFramework::TouchKey*, CTRPluginFramework::TouchKey*)
001125fc 00000028 W std::vector<CTRPluginFramework::TouchKey, std::allocator<CTRPluginFramework::TouchKey> >::~vector()
001125fc 00000028 W std::vector<CTRPluginFramework::TouchKey, std::allocator<CTRPluginFramework::TouchKey> >::~vector()
00112624 0000011c W void std::vector<CTRPluginFramework::TouchKey, std::allocator<CTRPluginFramework::TouchKey> >::_M_realloc_insert<CTRPluginFramework::TouchKey>(__gnu_cxx::__normal_iterator<CTRPluginFramework::TouchKey*, std::vector<CTRPluginFramework::TouchKey, std::allocator<CTRPluginFramework::TouchKey> > >, CTRPluginFramework::TouchKey&&)
00112740 00000090 W void std::vector<CTRPluginFramework::TouchKey, std::allocator<CTRPluginFramework::TouchKey> >::emplace_back<CTRPluginFramework::TouchKey>(CTRPluginFramework::TouchKey&&)
001127d0 000008f4 T CTRPluginFramework::KeyboardImpl::_QwertyLowCase()
001130c4 000008f4 T CTRPluginFramework::KeyboardImpl::_QwertyUpCase()
001139b8 00001344 T CTRPluginFramework::KeyboardImpl::_QwertySymbols()
00114cfc 00001740 T CTRPluginFramework::KeyboardImpl::_QwertyNintendo()
0011643c 00000044 T CTRPluginFramework::KeyboardImpl::_Qwerty()
00116480 00000254 T CTRPluginFramework::KeyboardImpl::_DigitKeyboard(std::vector<CTRPluginFramework::TouchKey, std::allocator<CTRPluginFramework::TouchKey> >&)
001166d4 00000050 T CTRPluginFramework::KeyboardImpl::_Decimal()
00116724 00000068 T CTRPluginFramework::KeyboardImpl::_Hexadecimal()
0011678c 00000048 T CTRPluginFramework::KeyboardImpl::SetLayout(CTRPluginFramework::Layout)
001167d4 00000324 T CTRPluginFramework::KeyboardImpl::_ProcessEvent(CTRPluginFramework::Event&)
00116af8 00000250 T CTRPluginFramework::KeyboardImpl::Run()
00116d48 00000078 t _GLOBAL__sub_I__ZN18CTRPluginFramework12KeyboardImpl12_DecimalKeysE
00116dc0 00000008 W CTRPluginFramework::MenuItem::GetNote[abi:cxx11]()
00116dc8 00000014 T CTRPluginFramework::MenuEntryImpl::Disable()
00116ddc 00000028 W CTRPluginFramework::MenuItem::~MenuItem()
00116ddc 00000028 W CTRPluginFramework::MenuItem::~MenuItem()
00116e04 00000028 T CTRPluginFramework::MenuEntryImpl::~MenuEntryImpl()
00116e04 00000028 T CTRPluginFramework::MenuEntryImpl::~MenuEntryImpl()
00116e2c 0000001c W CTRPluginFramework::MenuItem::~MenuItem()
00116e48 0000001c T CTRPluginFramework::MenuEntryImpl::~MenuEntryImpl()
00116e64 00000118 T CTRPluginFramework::MenuEntryImpl::GetNote[abi:cxx11]()
00116f7c 000000d8 T CTRPluginFramework::MenuEntryImpl::MenuEntryImpl(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::MenuEntry*)
00116f7c 000000d8 T CTRPluginFramework::MenuEntryImpl::MenuEntryImpl(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::MenuEntry*)
00117054 000000dc T CTRPluginFramework::MenuEntryImpl::MenuEntryImpl(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, void (*)(CTRPluginFramework::MenuEntry*), std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::MenuEntry*)
00117054 000000dc T CTRPluginFramework::MenuEntryImpl::MenuEntryImpl(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, void (*)(CTRPluginFramework::MenuEntry*), std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::MenuEntry*)
00117130 00000008 T CTRPluginFramework::MenuEntryImpl::GetArg() const
00117138 0000000c T CTRPluginFramework::MenuEntryImpl::IsActivated() const
00117144 00000008 T CTRPluginFramework::MenuEntryImpl::AsMenuEntry() const
0011714c 00000024 T CTRPluginFramework::MenuEntryImpl::_TriggerState()
00117170 00000030 T CTRPluginFramework::MenuEntryImpl::Enable()
001171a0 0000001c T CTRPluginFramework::MenuEntryImpl::_MustBeRemoved() const
001171bc 00000068 T CTRPluginFramework::MenuEntryImpl::_Execute()
00117224 000000cc T CTRPluginFramework::MenuFolderImpl::~MenuFolderImpl()
00117224 000000cc T CTRPluginFramework::MenuFolderImpl::~MenuFolderImpl()
001172f0 0000001c T CTRPluginFramework::MenuFolderImpl::~MenuFolderImpl()
0011730c 000000bc T CTRPluginFramework::MenuFolderImpl::MenuFolderImpl(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
0011730c 000000bc T CTRPluginFramework::MenuFolderImpl::MenuFolderImpl(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
001173c8 000000c0 T CTRPluginFramework::MenuFolderImpl::MenuFolderImpl(CTRPluginFramework::MenuFolder*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
001173c8 000000c0 T CTRPluginFramework::MenuFolderImpl::MenuFolderImpl(CTRPluginFramework::MenuFolder*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
00117488 00000014 T CTRPluginFramework::MenuFolderImpl::ItemsCount() const
0011749c 00000050 T CTRPluginFramework::MenuFolderImpl::GetItem(unsigned long)
001174ec 00000018 T CTRPluginFramework::MenuFolderImpl::operator[](int)
00117504 00000024 T CTRPluginFramework::MenuFolderImpl::HasParent()
00117528 00000010 T CTRPluginFramework::MenuFolderImpl::_Open(CTRPluginFramework::MenuFolderImpl*, int, bool)
00117538 00000024 T CTRPluginFramework::MenuFolderImpl::_Close(int&, bool)
0011755c 000000d8 W void std::vector<CTRPluginFramework::MenuItem*, std::allocator<CTRPluginFramework::MenuItem*> >::_M_realloc_insert<CTRPluginFramework::MenuItem* const&>(__gnu_cxx::__normal_iterator<CTRPluginFramework::MenuItem**, std::vector<CTRPluginFramework::MenuItem*, std::allocator<CTRPluginFramework::MenuItem*> > >, CTRPluginFramework::MenuItem* const&)
00117634 00000060 T CTRPluginFramework::MenuFolderImpl::Append(CTRPluginFramework::MenuItem*, bool)
00117694 00000010 T CTRPluginFramework::MenuItem::NoteChanged()
001176a4 00000010 T CTRPluginFramework::MenuItem::HasNoteChanged() const
001176b4 00000010 T CTRPluginFramework::MenuItem::HandledNoteChanges()
001176c4 00000004 W CTRPluginFramework::ToggleButton<CTRPluginFramework::PluginMenuActionReplay, void>::~ToggleButton()
001176c4 00000004 W CTRPluginFramework::ToggleButton<CTRPluginFramework::PluginMenuActionReplay, void>::~ToggleButton()
001176c8 00000004 W CTRPluginFramework::IconButton<CTRPluginFramework::PluginMenuActionReplay, void>::~IconButton()
001176c8 00000004 W CTRPluginFramework::IconButton<CTRPluginFramework::PluginMenuActionReplay, void>::~IconButton()
001176cc 0000001c W CTRPluginFramework::ToggleButton<CTRPluginFramework::PluginMenuActionReplay, void>::Draw()
001176e8 0000001c W CTRPluginFramework::IconButton<CTRPluginFramework::PluginMenuActionReplay, void>::Draw()
00117704 00000014 W CTRPluginFramework::ToggleButton<CTRPluginFramework::PluginMenuActionReplay, void>::~ToggleButton()
00117718 00000014 W CTRPluginFramework::IconButton<CTRPluginFramework::PluginMenuActionReplay, void>::~IconButton()
0011772c 00000028 T CTRPluginFramework::PluginMenuActionReplay::_PasteBtn_OnClick()
00117754 00000064 W CTRPluginFramework::ToggleButton<CTRPluginFramework::PluginMenuActionReplay, void>::operator()()
001177b8 00000064 W CTRPluginFramework::IconButton<CTRPluginFramework::PluginMenuActionReplay, void>::operator()()
0011781c 00000028 t CTRPluginFramework::ActionReplay_GetInput(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)::{lambda(void const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)#1}::_FUN(void const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)
00117844 00000024 T CTRPluginFramework::PluginMenuActionReplay::_CutBtn_OnClick()
00117868 00000078 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(char const*, std::allocator<char> const&) [clone .isra.55]
001178e0 0000006c t CTRPluginFramework::ActionReplay_GetInput(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)
0011794c 000000d4 T CTRPluginFramework::PluginMenuActionReplay::_TrashBtn_OnClick()
00117a20 000000a0 t void std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::_M_range_initialize<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const*>(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const*, std::forward_iterator_tag) [clone .isra.65]
00117ac0 00000268 T CTRPluginFramework::PluginMenuActionReplay::PluginMenuActionReplay()
00117ac0 00000268 T CTRPluginFramework::PluginMenuActionReplay::PluginMenuActionReplay()
00117d28 00000014 T CTRPluginFramework::PluginMenuActionReplay::Initialize()
00117d3c 00000058 T CTRPluginFramework::PluginMenuActionReplay::_DrawBottom()
00117d94 00000054 T CTRPluginFramework::PluginMenuActionReplay::_ProcessEvent(std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >&)
00117de8 00000120 T CTRPluginFramework::PluginMenuActionReplay::SaveCodes()
00117f08 0000003c W std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::~vector()
00117f08 0000003c W std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::~vector()
00117f44 00000174 T CTRPluginFramework::PluginMenuActionReplay::_NewBtn_OnClick()
001180b8 00000080 W CTRPluginFramework::ToggleButton<CTRPluginFramework::PluginMenuActionReplay, void>::Update(bool, CTRPluginFramework::Vector<int> const&)
00118138 00000080 W CTRPluginFramework::IconButton<CTRPluginFramework::PluginMenuActionReplay, void>::Update(bool, CTRPluginFramework::Vector<int> const&)
001181b8 00000160 T CTRPluginFramework::PluginMenuActionReplay::_Update(CTRPluginFramework::Time const&)
00118318 000000a8 T CTRPluginFramework::PluginMenuActionReplay::operator()(std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >&, CTRPluginFramework::Time const&)
001183c0 00000184 W void std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::_M_realloc_insert<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >(__gnu_cxx::__normal_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&&)
00118544 00000188 T CTRPluginFramework::PluginMenuActionReplay::_EditorBtn_OnClick()
001186cc 0000000c W void std::_Destroy<CTRPluginFramework::ARCode>(CTRPluginFramework::ARCode*)
001186d8 00000184 W void std::vector<CTRPluginFramework::ARCode, std::allocator<CTRPluginFramework::ARCode> >::_M_realloc_insert<CTRPluginFramework::ARCode>(__gnu_cxx::__normal_iterator<CTRPluginFramework::ARCode*, std::vector<CTRPluginFramework::ARCode, std::allocator<CTRPluginFramework::ARCode> > >, CTRPluginFramework::ARCode&&)
0011885c 00000044 W void std::vector<CTRPluginFramework::ARCode, std::allocator<CTRPluginFramework::ARCode> >::emplace_back<CTRPluginFramework::ARCode>(CTRPluginFramework::ARCode&&)
001188a0 00000030 W unsigned long* std::__copy_move<false, true, std::random_access_iterator_tag>::__copy_m<unsigned long>(unsigned long const*, unsigned long const*, unsigned long*)
001188d0 000000d4 W std::vector<unsigned long, std::allocator<unsigned long> >::operator=(std::vector<unsigned long, std::allocator<unsigned long> > const&)
001189a4 00000088 W CTRPluginFramework::ARCode* std::__copy_move<false, false, std::random_access_iterator_tag>::__copy_m<CTRPluginFramework::ARCode const*, CTRPluginFramework::ARCode*>(CTRPluginFramework::ARCode const*, CTRPluginFramework::ARCode const*, CTRPluginFramework::ARCode*)
00118a2c 00000174 W std::vector<CTRPluginFramework::ARCode, std::allocator<CTRPluginFramework::ARCode> >::operator=(std::vector<CTRPluginFramework::ARCode, std::allocator<CTRPluginFramework::ARCode> > const&)
00118ba0 00000070 T CTRPluginFramework::PluginMenuActionReplay::_DuplicateBtn_OnClick()
00118c10 00000030 W CTRPluginFramework::ARCode::~ARCode()
00118c10 00000030 W CTRPluginFramework::ARCode::~ARCode()
00118c40 00000144 T CTRPluginFramework::PluginMenuActionReplay::NewARCode(unsigned char, unsigned long, unsigned long)
00118d84 0000001c W CTRPluginFramework::ARCode::~ARCode()
00118da0 00000058 t CTRPluginFramework::PluginMenuExecuteLoop::Add(CTRPluginFramework::MenuEntryImpl*)::{lambda(CTRPluginFramework::MenuEntryImpl*)#1}::operator()(CTRPluginFramework::MenuEntryImpl*) const [clone .isra.4]
00118df8 0000002c T CTRPluginFramework::PluginMenuExecuteLoop::PluginMenuExecuteLoop()
00118df8 0000002c T CTRPluginFramework::PluginMenuExecuteLoop::PluginMenuExecuteLoop()
00118e24 0000000c T CTRPluginFramework::PluginMenuExecuteLoop::Lock()
00118e30 0000000c T CTRPluginFramework::PluginMenuExecuteLoop::Unlock()
00118e3c 0000011c T CTRPluginFramework::PluginMenuExecuteLoop::RemoveAR(CTRPluginFramework::MenuEntryActionReplay*)
00118f58 0000003c T CTRPluginFramework::PluginMenuExecuteLoop::ExecuteAR()
00118f94 0000000c T CTRPluginFramework::PluginMenuExecuteLoop::LockAR()
00118fa0 0000000c T CTRPluginFramework::PluginMenuExecuteLoop::UnlockAR()
00118fac 00000020 T CTRPluginFramework::PluginMenuExecuteLoop::InitLocks()
00118fcc 000000d8 W void std::vector<unsigned long, std::allocator<unsigned long> >::_M_realloc_insert<unsigned long const&>(__gnu_cxx::__normal_iterator<unsigned long*, std::vector<unsigned long, std::allocator<unsigned long> > >, unsigned long const&)
001190a4 0000019c T CTRPluginFramework::PluginMenuExecuteLoop::WriteEnabledCheatsToFile(CTRPluginFramework::Preferences::HeaderV1&, CTRPluginFramework::File&)
00119240 00000054 W std::vector<CTRPluginFramework::MenuEntryImpl*, std::allocator<CTRPluginFramework::MenuEntryImpl*> >::_M_erase(__gnu_cxx::__normal_iterator<CTRPluginFramework::MenuEntryImpl**, std::vector<CTRPluginFramework::MenuEntryImpl*, std::allocator<CTRPluginFramework::MenuEntryImpl*> > >, __gnu_cxx::__normal_iterator<CTRPluginFramework::MenuEntryImpl**, std::vector<CTRPluginFramework::MenuEntryImpl*, std::allocator<CTRPluginFramework::MenuEntryImpl*> > >)
00119294 00000160 T CTRPluginFramework::PluginMenuExecuteLoop::operator()()
001193f4 00000018 T CTRPluginFramework::PluginMenuExecuteLoop::ExecuteBuiltin()
0011940c 00000124 T CTRPluginFramework::PluginMenuExecuteLoop::Remove(CTRPluginFramework::MenuEntryImpl*)
00119530 000000d8 W void std::vector<CTRPluginFramework::MenuEntryImpl*, std::allocator<CTRPluginFramework::MenuEntryImpl*> >::_M_realloc_insert<CTRPluginFramework::MenuEntryImpl* const&>(__gnu_cxx::__normal_iterator<CTRPluginFramework::MenuEntryImpl**, std::vector<CTRPluginFramework::MenuEntryImpl*, std::allocator<CTRPluginFramework::MenuEntryImpl*> > >, CTRPluginFramework::MenuEntryImpl* const&)
00119608 000001bc T CTRPluginFramework::PluginMenuExecuteLoop::Add(CTRPluginFramework::MenuEntryImpl*)
001197c4 000000d8 W void std::vector<CTRPluginFramework::MenuEntryActionReplay*, std::allocator<CTRPluginFramework::MenuEntryActionReplay*> >::_M_realloc_insert<CTRPluginFramework::MenuEntryActionReplay* const&>(__gnu_cxx::__normal_iterator<CTRPluginFramework::MenuEntryActionReplay**, std::vector<CTRPluginFramework::MenuEntryActionReplay*, std::allocator<CTRPluginFramework::MenuEntryActionReplay*> > >, CTRPluginFramework::MenuEntryActionReplay* const&)
0011989c 00000084 T CTRPluginFramework::PluginMenuExecuteLoop::AddAR(CTRPluginFramework::MenuEntryActionReplay*)
00119920 00000214 W CTRPluginFramework::Button<CTRPluginFramework::PluginMenuHome, void>::Draw()
00119b34 00000204 W CTRPluginFramework::CheckedButton<CTRPluginFramework::PluginMenuHome, void>::Draw()
00119d38 00000204 W CTRPluginFramework::CheckedButton<CTRPluginFramework::PluginMenuSearch, void>::Draw()
00119f3c 00000214 W CTRPluginFramework::Button<CTRPluginFramework::PluginMenuSearch, void>::Draw()
0011a150 00000058 W CTRPluginFramework::CheckedButton<CTRPluginFramework::PluginMenuSearch, void>::operator()()
0011a1a8 00000074 W CTRPluginFramework::Button<CTRPluginFramework::PluginMenuSearch, void>::operator()()
0011a21c 00000074 W CTRPluginFramework::Button<CTRPluginFramework::PluginMenuHome, void>::operator()()
0011a290 00000058 W CTRPluginFramework::CheckedButton<CTRPluginFramework::PluginMenuHome, void>::operator()()
0011a2e8 00000088 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(char const*, std::allocator<char> const&) [clone .isra.115]
0011a370 0000000c t std::_Vector_base<CTRPluginFramework::Line<int>, std::allocator<CTRPluginFramework::Line<int> > >::_M_deallocate(CTRPluginFramework::Line<int>*, unsigned int) [clone .isra.118]
0011a37c 00000028 W CTRPluginFramework::Button<CTRPluginFramework::PluginMenuSearch, void>::~Button()
0011a37c 00000028 W CTRPluginFramework::Button<CTRPluginFramework::PluginMenuSearch, void>::~Button()
0011a3a4 0000001c W CTRPluginFramework::Button<CTRPluginFramework::PluginMenuSearch, void>::~Button()
0011a3c0 00000094 t CTRPluginFramework::Preferences::HotkeysInfos* std::__uninitialized_move_if_noexcept_a<CTRPluginFramework::Preferences::HotkeysInfos*, CTRPluginFramework::Preferences::HotkeysInfos*, std::allocator<CTRPluginFramework::Preferences::HotkeysInfos> >(CTRPluginFramework::Preferences::HotkeysInfos*, CTRPluginFramework::Preferences::HotkeysInfos*, CTRPluginFramework::Preferences::HotkeysInfos*, std::allocator<CTRPluginFramework::Preferences::HotkeysInfos>&) [clone .isra.174]
0011a454 00000028 W CTRPluginFramework::CheckedButton<CTRPluginFramework::PluginMenuSearch, void>::~CheckedButton()
0011a454 00000028 W CTRPluginFramework::CheckedButton<CTRPluginFramework::PluginMenuSearch, void>::~CheckedButton()
0011a47c 0000001c W CTRPluginFramework::CheckedButton<CTRPluginFramework::PluginMenuSearch, void>::~CheckedButton()
0011a498 00000028 W CTRPluginFramework::CheckedButton<CTRPluginFramework::PluginMenuHome, void>::~CheckedButton()
0011a498 00000028 W CTRPluginFramework::CheckedButton<CTRPluginFramework::PluginMenuHome, void>::~CheckedButton()
0011a4c0 0000001c W CTRPluginFramework::CheckedButton<CTRPluginFramework::PluginMenuHome, void>::~CheckedButton()
0011a4dc 00000028 W CTRPluginFramework::Button<CTRPluginFramework::PluginMenuHome, void>::~Button()
0011a4dc 00000028 W CTRPluginFramework::Button<CTRPluginFramework::PluginMenuHome, void>::~Button()
0011a504 0000001c W CTRPluginFramework::Button<CTRPluginFramework::PluginMenuHome, void>::~Button()
0011a520 00000020 W CTRPluginFramework::KeySequenceImpl::~KeySequenceImpl()
0011a520 00000020 W CTRPluginFramework::KeySequenceImpl::~KeySequenceImpl()
0011a540 00000030 W CTRPluginFramework::TextBox::~TextBox()
0011a540 00000030 W CTRPluginFramework::TextBox::~TextBox()
0011a570 0000001c W CTRPluginFramework::TextBox::~TextBox()
0011a58c 000000f0 T CTRPluginFramework::PluginMenuImpl::PluginMenuImpl(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)
0011a58c 000000f0 T CTRPluginFramework::PluginMenuImpl::PluginMenuImpl(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)
0011a67c 00000008 T CTRPluginFramework::PluginMenuImpl::Append(CTRPluginFramework::MenuItem*) const
0011a684 00000094 W CTRPluginFramework::KeySequenceImpl::KeySequenceImpl(std::vector<CTRPluginFramework::Key, std::allocator<CTRPluginFramework::Key> >)
0011a684 00000094 W CTRPluginFramework::KeySequenceImpl::KeySequenceImpl(std::vector<CTRPluginFramework::Key, std::allocator<CTRPluginFramework::Key> >)
0011a718 00000020 T CTRPluginFramework::PluginMenuImpl::Close(CTRPluginFramework::MenuFolderImpl*)
0011a738 0000018c T CTRPluginFramework::PluginMenuImpl::LoadHotkeysFromFile(CTRPluginFramework::Preferences::HeaderV1 const&, CTRPluginFramework::File&)
0011a8c4 00000020 T CTRPluginFramework::PluginMenuImpl::GetRegionsList(std::vector<CTRPluginFramework::Region, std::allocator<CTRPluginFramework::Region> >&)
0011a8e4 0000001c T CTRPluginFramework::PluginMenuImpl::ForceExit()
0011a900 0000001c T CTRPluginFramework::PluginMenuImpl::ForceOpen()
0011a91c 00000008 T CTRPluginFramework::PluginMenuImpl::IsOpen() const
0011a924 00000008 T CTRPluginFramework::PluginMenuImpl::AddPluginVersion(unsigned long) const
0011a92c 00000020 W std::_Vector_base<unsigned long, std::allocator<unsigned long> >::~_Vector_base()
0011a92c 00000020 W std::_Vector_base<unsigned long, std::allocator<unsigned long> >::~_Vector_base()
0011a94c 000000f4 W void std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >::_M_realloc_insert<CTRPluginFramework::Event const&>(__gnu_cxx::__normal_iterator<CTRPluginFramework::Event*, std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> > >, CTRPluginFramework::Event const&)
0011aa40 0000075c T CTRPluginFramework::PluginMenuImpl::Run()
0011b19c 00000058 W std::vector<unsigned long, std::allocator<unsigned long> >::_M_check_len(unsigned int, char const*) const
0011b1f4 00000030 W unsigned long* std::__copy_move<true, true, std::random_access_iterator_tag>::__copy_m<unsigned long>(unsigned long const*, unsigned long const*, unsigned long*)
0011b224 000000c4 W std::vector<unsigned long, std::allocator<unsigned long> >::_M_default_append(unsigned int)
0011b2e8 00000034 W std::vector<unsigned long, std::allocator<unsigned long> >::resize(unsigned int)
0011b31c 00000130 T CTRPluginFramework::PluginMenuImpl::LoadEnabledCheatsFromFile(CTRPluginFramework::Preferences::HeaderV1 const&, CTRPluginFramework::File&)
0011b44c 0000013c T CTRPluginFramework::PluginMenuImpl::LoadFavoritesFromFile(CTRPluginFramework::Preferences::HeaderV1 const&, CTRPluginFramework::File&)
0011b588 000000c4 W std::vector<unsigned long, std::allocator<unsigned long> >::push_back(unsigned long const&)
0011b64c 00000108 T CTRPluginFramework::PluginMenuImpl::WriteFavoritesToFile(CTRPluginFramework::Preferences::HeaderV1&, CTRPluginFramework::File&)
0011b754 00000068 W std::vector<unsigned long, std::allocator<unsigned long> >::vector(std::vector<unsigned long, std::allocator<unsigned long> > const&)
0011b754 00000068 W std::vector<unsigned long, std::allocator<unsigned long> >::vector(std::vector<unsigned long, std::allocator<unsigned long> > const&)
0011b7bc 000000fc W void std::vector<CTRPluginFramework::Preferences::HotkeysInfos, std::allocator<CTRPluginFramework::Preferences::HotkeysInfos> >::_M_realloc_insert<CTRPluginFramework::Preferences::HotkeysInfos const&>(__gnu_cxx::__normal_iterator<CTRPluginFramework::Preferences::HotkeysInfos*, std::vector<CTRPluginFramework::Preferences::HotkeysInfos, std::allocator<CTRPluginFramework::Preferences::HotkeysInfos> > >, CTRPluginFramework::Preferences::HotkeysInfos const&)
0011b8b8 00000140 T CTRPluginFramework::PluginMenuImpl::ExtractHotkeys(std::vector<CTRPluginFramework::Preferences::HotkeysInfos, std::allocator<CTRPluginFramework::Preferences::HotkeysInfos> >&, CTRPluginFramework::MenuFolderImpl*, unsigned long&)
0011b9f8 00000198 T CTRPluginFramework::PluginMenuImpl::WriteHotkeysToFile(CTRPluginFramework::Preferences::HeaderV1&, CTRPluginFramework::File&)
0011bb90 00000080 W CTRPluginFramework::Button<CTRPluginFramework::PluginMenuHome, void>::Update(bool, CTRPluginFramework::Vector<int> const&)
0011bc10 00000074 W CTRPluginFramework::CheckedButton<CTRPluginFramework::PluginMenuHome, void>::Update(bool, CTRPluginFramework::Vector<int> const&)
0011bc84 00000074 W CTRPluginFramework::CheckedButton<CTRPluginFramework::PluginMenuSearch, void>::Update(bool, CTRPluginFramework::Vector<int> const&)
0011bcf8 00000080 W CTRPluginFramework::Button<CTRPluginFramework::PluginMenuSearch, void>::Update(bool, CTRPluginFramework::Vector<int> const&)
0011bd78 00000078 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(char const*, std::allocator<char> const&) [clone .isra.57]
0011bdf0 00000044 T CTRPluginFramework::PluginMenuSearch::_ProcessEvent(CTRPluginFramework::Event&)
0011be34 0000013c T CTRPluginFramework::PluginMenuSearch::_RenderBottom()
0011bf70 00000068 T CTRPluginFramework::PluginMenuSearch::_Update(CTRPluginFramework::Time)
0011bfd8 0000016c T CTRPluginFramework::PluginMenuSearch::_PopulateSearchType(bool)
0011c144 00000050 T CTRPluginFramework::PluginMenuSearch::_cancelBtn_OnClick()
0011c194 000000ac W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > __gnu_cxx::__to_xstring<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, char>(int (*)(char*, unsigned int, char const*, std::__va_list), unsigned int, char const*, ...)
0011c240 000004cc T CTRPluginFramework::PluginMenuSearch::_ShowProgressWindow() const
0011c70c 00000070 T CTRPluginFramework::PluginMenuSearch::_RenderTop()
0011c77c 000000f4 t CTRPluginFramework::ClearSearchFolder()
0011c870 00000158 W CTRPluginFramework::Button<CTRPluginFramework::PluginMenuSearch, void>::Button(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::PluginMenuSearch&, void (CTRPluginFramework::PluginMenuSearch::*)(), CTRPluginFramework::Rect<int>, int (*)(int, int))
0011c870 00000158 W CTRPluginFramework::Button<CTRPluginFramework::PluginMenuSearch, void>::Button(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::PluginMenuSearch&, void (CTRPluginFramework::PluginMenuSearch::*)(), CTRPluginFramework::Rect<int>, int (*)(int, int))
0011c9c8 0000005c W CTRPluginFramework::Button<CTRPluginFramework::PluginMenuSearch, void>::UseSysFont(bool)
0011ca24 00000640 T CTRPluginFramework::PluginMenuSearch::PluginMenuSearch(CTRPluginFramework::HexEditor&)
0011ca24 00000640 T CTRPluginFramework::PluginMenuSearch::PluginMenuSearch(CTRPluginFramework::HexEditor&)
0011d064 00000034 W std::__cxx11::list<CTRPluginFramework::Search*, std::allocator<CTRPluginFramework::Search*> >::push_back(CTRPluginFramework::Search* const&)
0011d098 00000220 T CTRPluginFramework::PluginMenuSearch::RestoreSearchState()
0011d2b8 00000028 W std::__cxx11::list<CTRPluginFramework::Search*, std::allocator<CTRPluginFramework::Search*> >::pop_back()
0011d2e0 00000068 T CTRPluginFramework::PluginMenuSearch::_undoBtn_OnClick()
0011d348 00000030 W CTRPluginFramework::Region* std::__copy_move<false, true, std::random_access_iterator_tag>::__copy_m<CTRPluginFramework::Region>(CTRPluginFramework::Region const*, CTRPluginFramework::Region const*, CTRPluginFramework::Region*)
0011d378 000000d4 W std::vector<CTRPluginFramework::Region, std::allocator<CTRPluginFramework::Region> >::operator=(std::vector<CTRPluginFramework::Region, std::allocator<CTRPluginFramework::Region> > const&)
0011d44c 000000ac W void std::vector<CTRPluginFramework::Region, std::allocator<CTRPluginFramework::Region> >::_M_realloc_insert<CTRPluginFramework::Region const&>(__gnu_cxx::__normal_iterator<CTRPluginFramework::Region*, std::vector<CTRPluginFramework::Region, std::allocator<CTRPluginFramework::Region> > >, CTRPluginFramework::Region const&)
0011d4f8 00000040 W std::vector<CTRPluginFramework::Region, std::allocator<CTRPluginFramework::Region> >::push_back(CTRPluginFramework::Region const&)
0011d538 0000026c T CTRPluginFramework::PluginMenuSearch::_ListRegion()
0011d7a4 00000388 T CTRPluginFramework::PluginMenuSearch::operator()(std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >&, CTRPluginFramework::Time&)
0011db2c 000000dc T CTRPluginFramework::PluginMenuSearch::_resetBtn_OnClick()
0011dc08 00000038 T CTRPluginFramework::PluginMenuSearch::GetRegionsList(std::vector<CTRPluginFramework::Region, std::allocator<CTRPluginFramework::Region> >&)
0011dc40 0000027c T CTRPluginFramework::PluginMenuSearch::_searchBtn_OnClick()
0011debc 00000014 t CTRPluginFramework::PluginMenuTools::InitMenu()::{lambda()#1}::_FUN()
0011ded0 00000014 t CTRPluginFramework::PluginMenuTools::InitMenu()::{lambda()#2}::_FUN()
0011dee4 00000014 t CTRPluginFramework::PluginMenuTools::InitMenu()::{lambda()#3}::_FUN()
0011def8 00000114 t CTRPluginFramework::FsTryOpenFileCallback(unsigned long, unsigned short*, unsigned long)
0011e00c 00000004 t CTRPluginFramework::PluginMenuTools::InitMenu()::{lambda()#13}::_FUN()
0011e010 00000004 t CTRPluginFramework::PluginMenuTools::InitMenu()::{lambda()#14}::_FUN()
0011e014 00000018 t CTRPluginFramework::PluginMenuTools::InitMenu()::{lambda()#4}::_FUN()
0011e02c 00000018 t CTRPluginFramework::PluginMenuTools::InitMenu()::{lambda()#5}::_FUN()
0011e044 00000018 t CTRPluginFramework::PluginMenuTools::InitMenu()::{lambda()#6}::_FUN()
0011e05c 00000018 t CTRPluginFramework::PluginMenuTools::InitMenu()::{lambda()#7}::_FUN()
0011e074 00000018 t CTRPluginFramework::PluginMenuTools::InitMenu()::{lambda()#8}::_FUN()
0011e08c 00000018 t CTRPluginFramework::PluginMenuTools::InitMenu()::{lambda()#9}::_FUN()
0011e0a4 00000018 t CTRPluginFramework::PluginMenuTools::InitMenu()::{lambda()#10}::_FUN()
0011e0bc 00000018 t CTRPluginFramework::PluginMenuTools::InitMenu()::{lambda()#11}::_FUN()
0011e0d4 00000018 t CTRPluginFramework::PluginMenuTools::InitMenu()::{lambda()#12}::_FUN()
0011e0ec 00000078 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(char const*, std::allocator<char> const&) [clone .isra.49]
0011e164 00000064 t CTRPluginFramework::MenuHotkeyModifier()
0011e1c8 00000120 t CTRPluginFramework::ConfirmBeforeProceed(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
0011e2e8 0000005c t CTRPluginFramework::Reboot()
0011e344 00000064 t CTRPluginFramework::Shutdown()
0011e3a8 000000f8 t CTRPluginFramework::FindFunction(unsigned long&) [clone .constprop.62]
0011e4a0 00000140 t CTRPluginFramework::_DisplayLoadedFiles(CTRPluginFramework::MenuEntryTools*)
0011e5e0 000001c8 t CTRPluginFramework::_WriteLoadedFiles(CTRPluginFramework::MenuEntryTools*)
0011e7a8 000001f4 T CTRPluginFramework::PluginMenuTools::UpdateSettings()
0011e99c 000007fc T CTRPluginFramework::PluginMenuTools::InitMenu()
0011f198 00000154 T CTRPluginFramework::PluginMenuTools::PluginMenuTools(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, CTRPluginFramework::HexEditor&)
0011f198 00000154 T CTRPluginFramework::PluginMenuTools::PluginMenuTools(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, CTRPluginFramework::HexEditor&)
0011f2ec 0000010c T CTRPluginFramework::PluginMenuTools::_ProcessEvent(CTRPluginFramework::Event&)
0011f3f8 000000a4 T CTRPluginFramework::PluginMenuTools::_RenderBottom()
0011f49c 00000040 T CTRPluginFramework::PluginMenuTools::_Update(CTRPluginFramework::Time)
0011f4dc 0000003c t _GLOBAL__sub_I__ZN18CTRPluginFramework15PluginMenuToolsC2ERNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERNS_9HexEditorE
0011f518 0000003c T CTRPluginFramework::PluginMenuTools::_RenderTop()
0011f554 00000108 T CTRPluginFramework::PluginMenuTools::operator()(std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >&, CTRPluginFramework::Time&)
0011f65c 00000088 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(char const*, std::allocator<char> const&) [clone .isra.35]
0011f6e4 000000a0 t void std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::_M_range_initialize<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const*>(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const*, std::forward_iterator_tag) [clone .isra.48]
0011f784 0000007c T CTRPluginFramework::SearchMenu::_OpenExportFile()
0011f800 000000b4 T CTRPluginFramework::SearchMenu::_NewCheat()
0011f8b4 0000018c T CTRPluginFramework::SearchMenu::_Edit()
0011fa40 00000048 T CTRPluginFramework::SearchMenu::_JumpInEditor()
0011fa88 0000014c T CTRPluginFramework::SearchMenu::_Export()
0011fbd4 0000015c T CTRPluginFramework::SearchMenu::_ExportAll()
0011fd30 000001ac T CTRPluginFramework::SearchMenu::_ShowGame()
0011fedc 00000030 W std::__cxx11::to_string(unsigned long)
0011ff0c 00000084 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > std::operator+<char, std::char_traits<char>, std::allocator<char> >(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&&)
0011ff90 00000584 T CTRPluginFramework::SearchMenu::Draw()
00120514 000000b4 T CTRPluginFramework::SearchMenu::SearchMenu(CTRPluginFramework::Search*&, CTRPluginFramework::HexEditor&, bool&, bool&)
00120514 000000b4 T CTRPluginFramework::SearchMenu::SearchMenu(CTRPluginFramework::Search*&, CTRPluginFramework::HexEditor&, bool&, bool&)
001205c8 00000030 W std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::clear()
001205f8 00000230 T CTRPluginFramework::SearchMenu::Update()
00120828 0000050c T CTRPluginFramework::SearchMenu::ProcessEvent(std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >&, CTRPluginFramework::Time&)
00120d34 00000064 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >* std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const*, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >(__gnu_cxx::__normal_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const*, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >, __gnu_cxx::__normal_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const*, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >&) [clone .isra.29]
00120d98 00000094 T CTRPluginFramework::SubMenu::SubMenu(std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&)
00120d98 00000094 T CTRPluginFramework::SubMenu::SubMenu(std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&)
00120e2c 0000001c T CTRPluginFramework::SubMenu::operator()()
00120e48 00000214 T CTRPluginFramework::SubMenu::Draw()
0012105c 000000bc T CTRPluginFramework::SubMenu::ProcessEvent(CTRPluginFramework::Event const&)
00121118 00000008 T CTRPluginFramework::SubMenu::IsOpen()
00121120 0000001c T CTRPluginFramework::SubMenu::OptionsCount()
0012113c 00000198 W std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::operator=(std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&)
001212d4 00000048 T CTRPluginFramework::SubMenu::ChangeOptions(std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&)
0012131c 000000c4 T CTRPluginFramework::Search32::FirstSearchUnknown()
001213e0 000000c0 T CTRPluginFramework::Search32::FirstSearchSpecified()
001214a0 0000003c t CTRPluginFramework::Results32WithOld* std::__uninitialized_default_n_a<CTRPluginFramework::Results32WithOld*, unsigned int, IAllocator<CTRPluginFramework::Results32WithOld> >(CTRPluginFramework::Results32WithOld*, unsigned int, IAllocator<CTRPluginFramework::Results32WithOld>&) [clone .isra.79]
001214dc 00000078 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(char const*, std::allocator<char> const&) [clone .isra.92]
00121554 000002a0 T CTRPluginFramework::Search32::SecondSearchUnknown()
001217f4 000002bc T CTRPluginFramework::Search32::SecondSearchSpecified()
00121ab0 00000040 W CTRPluginFramework::Search::~Search()
00121ab0 00000040 W CTRPluginFramework::Search::~Search()
00121af0 00000044 T CTRPluginFramework::Search32::~Search32()
00121af0 00000044 T CTRPluginFramework::Search32::~Search32()
00121b34 0000001c T CTRPluginFramework::Search32::~Search32()
00121b50 0000001c W CTRPluginFramework::Search::~Search()
00121b6c 00000228 T CTRPluginFramework::Search32::Search32(CTRPluginFramework::SearchParameters&)
00121b6c 00000228 T CTRPluginFramework::Search32::Search32(CTRPluginFramework::SearchParameters&)
00121d94 00000020 T CTRPluginFramework::Search32::Search32(CTRPluginFramework::Search*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
00121d94 00000020 T CTRPluginFramework::Search32::Search32(CTRPluginFramework::Search*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
00121db4 0000005c W std::vector<CTRPluginFramework::Results32WithOld, IAllocator<CTRPluginFramework::Results32WithOld> >::vector(unsigned int, IAllocator<CTRPluginFramework::Results32WithOld> const&)
00121db4 0000005c W std::vector<CTRPluginFramework::Results32WithOld, IAllocator<CTRPluginFramework::Results32WithOld> >::vector(unsigned int, IAllocator<CTRPluginFramework::Results32WithOld> const&)
00121e10 00000138 W std::vector<CTRPluginFramework::Results32WithOld, IAllocator<CTRPluginFramework::Results32WithOld> >::_M_default_append(unsigned int)
00121f48 00000048 W std::vector<CTRPluginFramework::Results32WithOld, IAllocator<CTRPluginFramework::Results32WithOld> >::resize(unsigned int)
00121f90 00000144 T CTRPluginFramework::Search32::SubsidiarySearchSpecified()
001220d4 00000144 T CTRPluginFramework::Search32::SubsidiarySearchUnknown()
00122218 00000044 W void std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::emplace_back<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&&)
0012225c 0000002c W CTRPluginFramework::Results32* std::__uninitialized_default_n_1<true>::__uninit_default_n<CTRPluginFramework::Results32*, unsigned int>(CTRPluginFramework::Results32*, unsigned int)
00122288 000000ec W std::vector<CTRPluginFramework::Results32, std::allocator<CTRPluginFramework::Results32> >::_M_default_append(unsigned int)
00122374 00000034 W std::vector<CTRPluginFramework::Results32, std::allocator<CTRPluginFramework::Results32> >::resize(unsigned int)
001223a8 00000034 W CTRPluginFramework::Results32WithOld* std::__uninitialized_default_n_1<true>::__uninit_default_n<CTRPluginFramework::Results32WithOld*, unsigned int>(CTRPluginFramework::Results32WithOld*, unsigned int)
001223dc 0000010c W std::vector<CTRPluginFramework::Results32WithOld, std::allocator<CTRPluginFramework::Results32WithOld> >::_M_default_append(unsigned int)
001224e8 00000048 W std::vector<CTRPluginFramework::Results32WithOld, std::allocator<CTRPluginFramework::Results32WithOld> >::resize(unsigned int)
00122530 00000318 T CTRPluginFramework::Search32::ReadResults(unsigned long, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >&, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >&, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >&)
00122848 00000260 T CTRPluginFramework::Search32::FirstSearchSpecifiedU8(unsigned long, CTRPluginFramework::SearchFlags, CTRPluginFramework::Results32*)
00122aa8 00000278 T CTRPluginFramework::Search32::FirstSearchSpecifiedU16(unsigned long, CTRPluginFramework::SearchFlags, CTRPluginFramework::Results32*)
00122d20 00000260 T CTRPluginFramework::Search32::FirstSearchSpecifiedU32(unsigned long, CTRPluginFramework::SearchFlags, CTRPluginFramework::Results32*)
00122f80 00000034 T CTRPluginFramework::AlmostEqualRelative(float, float, float)
00122fb4 00000324 T CTRPluginFramework::Search32::FirstSearchSpecifiedFloat(unsigned long, CTRPluginFramework::SearchFlags, CTRPluginFramework::Results32*)
001232d8 0000082c T CTRPluginFramework::Search32::SecondSearchSpecifiedU8(std::vector<CTRPluginFramework::Results32, IAllocator<CTRPluginFramework::Results32> >&, CTRPluginFramework::SearchFlags, CTRPluginFramework::Results32WithOld*)
00123b04 000008cc T CTRPluginFramework::Search32::SecondSearchSpecifiedU16(std::vector<CTRPluginFramework::Results32, IAllocator<CTRPluginFramework::Results32> >&, CTRPluginFramework::SearchFlags, CTRPluginFramework::Results32WithOld*)
001243d0 000008ac T CTRPluginFramework::Search32::SecondSearchSpecifiedU32(std::vector<CTRPluginFramework::Results32, IAllocator<CTRPluginFramework::Results32> >&, CTRPluginFramework::SearchFlags, CTRPluginFramework::Results32WithOld*)
00124c7c 00000db0 T CTRPluginFramework::Search32::SecondSearchSpecifiedFloat(std::vector<CTRPluginFramework::Results32, IAllocator<CTRPluginFramework::Results32> >&, CTRPluginFramework::SearchFlags, CTRPluginFramework::Results32WithOld*)
00125a2c 00000bb4 T CTRPluginFramework::Search32::SecondSearchUnknownU8(std::vector<unsigned long, IAllocator<unsigned long> >&, CTRPluginFramework::SearchFlags, CTRPluginFramework::Results32WithOld*)
001265e0 000006f4 T CTRPluginFramework::Search32::SecondSearchUnknownU16(std::vector<unsigned long, IAllocator<unsigned long> >&, CTRPluginFramework::SearchFlags, CTRPluginFramework::Results32WithOld*)
00126cd4 000003e0 T CTRPluginFramework::Search32::SecondSearchUnknownU32(std::vector<unsigned long, IAllocator<unsigned long> >&, CTRPluginFramework::SearchFlags, CTRPluginFramework::Results32WithOld*)
001270b4 0000079c T CTRPluginFramework::Search32::SecondSearchUnknownFloat(std::vector<unsigned long, IAllocator<unsigned long> >&, CTRPluginFramework::SearchFlags, CTRPluginFramework::Results32WithOld*)
00127850 00000444 T CTRPluginFramework::Search32::SubsidiarySearchSpecifiedU8(std::vector<CTRPluginFramework::Results32WithOld, IAllocator<CTRPluginFramework::Results32WithOld> >&, CTRPluginFramework::SearchFlags, CTRPluginFramework::Results32WithOld*)
00127c94 00000448 T CTRPluginFramework::Search32::SubsidiarySearchSpecifiedU16(std::vector<CTRPluginFramework::Results32WithOld, IAllocator<CTRPluginFramework::Results32WithOld> >&, CTRPluginFramework::SearchFlags, CTRPluginFramework::Results32WithOld*)
001280dc 00000444 T CTRPluginFramework::Search32::SubsidiarySearchSpecifiedU32(std::vector<CTRPluginFramework::Results32WithOld, IAllocator<CTRPluginFramework::Results32WithOld> >&, CTRPluginFramework::SearchFlags, CTRPluginFramework::Results32WithOld*)
00128520 00000630 T CTRPluginFramework::Search32::SubsidiarySearchSpecifiedFloat(std::vector<CTRPluginFramework::Results32WithOld, IAllocator<CTRPluginFramework::Results32WithOld> >&, CTRPluginFramework::SearchFlags, CTRPluginFramework::Results32WithOld*)
00128b50 000008bc T CTRPluginFramework::Search32::SubsidiarySearchUnknownU8(std::vector<CTRPluginFramework::Results32WithOld, IAllocator<CTRPluginFramework::Results32WithOld> >&, CTRPluginFramework::SearchFlags, CTRPluginFramework::Results32WithOld*)
0012940c 000008c0 T CTRPluginFramework::Search32::SubsidiarySearchUnknownU16(std::vector<CTRPluginFramework::Results32WithOld, IAllocator<CTRPluginFramework::Results32WithOld> >&, CTRPluginFramework::SearchFlags, CTRPluginFramework::Results32WithOld*)
00129ccc 000008bc T CTRPluginFramework::Search32::SubsidiarySearchUnknownU32(std::vector<CTRPluginFramework::Results32WithOld, IAllocator<CTRPluginFramework::Results32WithOld> >&, CTRPluginFramework::SearchFlags, CTRPluginFramework::Results32WithOld*)
0012a588 00000c50 T CTRPluginFramework::Search32::SubsidiarySearchUnknownFloat(std::vector<CTRPluginFramework::Results32WithOld, IAllocator<CTRPluginFramework::Results32WithOld> >&, CTRPluginFramework::SearchFlags, CTRPluginFramework::Results32WithOld*)
0012b1d8 00000044 T CTRPluginFramework::Search::UpdateProgress()
0012b21c 00000194 T CTRPluginFramework::Search::CheckNextRegion()
0012b3b0 00000078 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(char const*, std::allocator<char> const&) [clone .isra.27]
0012b428 00000008 T CTRPluginFramework::Search::GetHeader() const
0012b430 00000058 T CTRPluginFramework::Search::GetTotalResults(CTRPluginFramework::Header const&) const
0012b488 0000000c T CTRPluginFramework::Search::GetType() const
0012b494 00000018 T CTRPluginFramework::Search::IsFirstUnknownSearch() const
0012b4ac 00000070 T CTRPluginFramework::Search::WriteHeader()
0012b51c 00000058 T CTRPluginFramework::Search::WriteResults()
0012b574 0000004c T CTRPluginFramework::Search::GetRegionIndex(unsigned long)
0012b5c0 00000220 T CTRPluginFramework::Search::ExtractPreviousHits(void*, unsigned long, unsigned long, unsigned long&, bool)
0012b7e0 00000240 T CTRPluginFramework::Search::Search(CTRPluginFramework::Search*)
0012b7e0 00000240 T CTRPluginFramework::Search::Search(CTRPluginFramework::Search*)
0012ba20 000000d8 W void std::vector<CTRPluginFramework::Search::RegionIndex, std::allocator<CTRPluginFramework::Search::RegionIndex> >::_M_realloc_insert<CTRPluginFramework::Search::RegionIndex const&>(__gnu_cxx::__normal_iterator<CTRPluginFramework::Search::RegionIndex*, std::vector<CTRPluginFramework::Search::RegionIndex, std::allocator<CTRPluginFramework::Search::RegionIndex> > >, CTRPluginFramework::Search::RegionIndex const&)
0012baf8 0000008c T CTRPluginFramework::Search::CreateIndexTable()
0012bb84 000001a8 T CTRPluginFramework::Search::Search(CTRPluginFramework::Search*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
0012bb84 000001a8 T CTRPluginFramework::Search::Search(CTRPluginFramework::Search*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
0012bd2c 00000080 T CTRPluginFramework::Search::Cancel()
0012bdac 00000118 T CTRPluginFramework::Search::ExecuteSearch()
0012bec4 00000090 T CTRPluginFramework::EventManager::EventManager()
0012bec4 00000090 T CTRPluginFramework::EventManager::EventManager()
0012bf54 00000168 W void std::deque<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >::_M_push_back_aux<CTRPluginFramework::Event const&>(CTRPluginFramework::Event const&)
0012c0bc 00000044 W std::deque<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >::push_back(CTRPluginFramework::Event const&)
0012c100 0000028c T CTRPluginFramework::EventManager::ProcessEvents()
0012c38c 00000104 T CTRPluginFramework::EventManager::PopEvent(CTRPluginFramework::Event&, bool)
0012c490 00000008 T CTRPluginFramework::EventManager::PollEvent(CTRPluginFramework::Event&)
0012c498 00000024 t addrMapNodeComparator(rbtree_node const*, rbtree_node const*)
0012c4bc 00000004 t addrMapNodeDestructor(rbtree_node*)
0012c4c0 00000110 T CTRPluginFramework::Heap::MemAlign(unsigned int, unsigned int)
0012c5d0 00000008 T CTRPluginFramework::Heap::Alloc(unsigned int)
0012c5d8 00000050 T CTRPluginFramework::Heap::Free(void*)
0012c628 0000000c T CTRPluginFramework::Heap::SpaceFree()
0012c634 00000128 T CTRPluginFramework::ProcessImpl::Initialize()
0012c75c 0000004c T CTRPluginFramework::ProcessImpl::UpdateThreadHandle()
0012c7a8 00000018 T CTRPluginFramework::ProcessImpl::IsPaused()
0012c7c0 00000018 T IsPaused
0012c7d8 00000188 T CTRPluginFramework::ProcessImpl::Pause(bool)
0012c960 00000158 T CTRPluginFramework::ProcessImpl::Play(bool)
0012cab8 00000060 T CTRPluginFramework::FromPhysicalToVirtual(unsigned long)
0012cb18 00000018 T CTRPluginFramework::GetBPP(GSPGPU_FramebufferFormats)
0012cb30 00000030 T CTRPluginFramework::ScreenImpl::ScreenImpl(unsigned long, unsigned long, bool)
0012cb30 00000030 T CTRPluginFramework::ScreenImpl::ScreenImpl(unsigned long, unsigned long, bool)
0012cb60 00000060 T CTRPluginFramework::ScreenImpl::Initialize()
0012cbc0 000000a8 T CTRPluginFramework::ScreenImpl::Fade(float, bool)
0012cc68 00000068 T CTRPluginFramework::ScreenImpl::Acquire(unsigned long, unsigned long, unsigned long, unsigned long)
0012ccd0 000000b4 T CTRPluginFramework::ScreenImpl::Copy()
0012cd84 000000b8 T CTRPluginFramework::ScreenImpl::Acquire()
0012ce3c 00000008 T CTRPluginFramework::ScreenImpl::IsTopScreen()
0012ce44 0000005c T CTRPluginFramework::ScreenImpl::Is3DEnabled()
0012cea0 00000118 T CTRPluginFramework::ScreenImpl::Flush()
0012cfb8 00000118 T CTRPluginFramework::ScreenImpl::Invalidate()
0012d0d0 00000058 T CTRPluginFramework::ScreenImpl::Flash(CTRPluginFramework::Color&)
0012d128 00000078 T CTRPluginFramework::ScreenImpl::Clean()
0012d1a0 00000074 T CTRPluginFramework::ScreenImpl::SwapBuffer(bool, bool)
0012d214 00000008 T CTRPluginFramework::ScreenImpl::GetFormat()
0012d21c 00000008 T CTRPluginFramework::ScreenImpl::GetStride()
0012d224 00000008 T CTRPluginFramework::ScreenImpl::GetBytesPerPixel()
0012d22c 0000001c T CTRPluginFramework::ScreenImpl::GetFramebufferInfos(int&, int&, GSPGPU_FramebufferFormats&)
0012d248 0000001c T CTRPluginFramework::ScreenImpl::GetLeftFramebuffer(bool)
0012d264 00000054 T CTRPluginFramework::ScreenImpl::GetLeftFramebuffer(int, int)
0012d2b8 00000030 T CTRPluginFramework::ScreenImpl::GetRightFramebuffer(bool)
0012d2e8 00000058 T CTRPluginFramework::ScreenImpl::GetRightFramebuffer(int, int)
0012d340 00000074 T CTRPluginFramework::ScreenImpl::GetPosFromAddress(unsigned long, int&, int&)
0012d3b4 000000f0 T CTRPluginFramework::SystemImpl::Initialize()
0012d4a4 00000010 T CTRPluginFramework::SystemImpl::GetIOBaseLCD()
0012d4b4 00000010 T CTRPluginFramework::SystemImpl::GetIOBasePDC()
0012d4c4 00000028 T CTRPluginFramework::ARCode::ToString[abi:cxx11]() const
0012d4ec 00000020 W std::vector<unsigned char, std::allocator<unsigned char> >::~vector()
0012d4ec 00000020 W std::vector<unsigned char, std::allocator<unsigned char> >::~vector()
0012d50c 00000088 T CTRPluginFramework::ActionReplayPriv::Str2U32(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, bool&)
0012d594 00000138 T CTRPluginFramework::ARCode::ARCode(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, bool&)
0012d594 00000138 T CTRPluginFramework::ARCode::ARCode(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, bool&)
0012d6cc 00000104 T CTRPluginFramework::ARCode::Update(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
0012d7d0 0000006c T CTRPluginFramework::ARCode::Update()
0012d83c 000000c4 T CTRPluginFramework::ARCode::ARCode(CTRPluginFramework::ARCode const&)
0012d83c 000000c4 T CTRPluginFramework::ARCode::ARCode(CTRPluginFramework::ARCode const&)
0012d900 00000040 T CTRPluginFramework::ARCode::ARCode(unsigned char, unsigned long, unsigned long)
0012d900 00000040 T CTRPluginFramework::ARCode::ARCode(unsigned char, unsigned long, unsigned long)
0012d940 00000040 T CTRPluginFramework::ARCodeContext::Update()
0012d980 00000048 T CTRPluginFramework::ARCodeContext::Clear()
0012d9c8 00000074 t _GLOBAL__sub_I__ZN18CTRPluginFramework11g_codeTypesE
0012da3c 00000060 t CTRPluginFramework::GetCond32Str(unsigned long, unsigned long, char const*)
0012da9c 000000cc t CTRPluginFramework::GetCond16Str(unsigned long, unsigned long, char const*)
0012db68 0000000c t void __gnu_cxx::new_allocator<CTRPluginFramework::ARCode>::construct<CTRPluginFramework::ARCode, CTRPluginFramework::ARCode const&>(CTRPluginFramework::ARCode*, CTRPluginFramework::ARCode const&) [clone .isra.29]
0012db68 0000000c t void __gnu_cxx::new_allocator<CTRPluginFramework::ARCode>::construct<CTRPluginFramework::ARCode, CTRPluginFramework::ARCode>(CTRPluginFramework::ARCode*, CTRPluginFramework::ARCode&&) [clone .isra.51]
0012db74 00000088 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(char const*, std::allocator<char> const&) [clone .isra.85]
0012dbfc 0000005c t CTRPluginFramework::ColorToString(CTRPluginFramework::Color const&)
0012dc58 00000770 t CTRPluginFramework::ColorCodeLine(CTRPluginFramework::ARCode const&)
0012e3c8 00000080 T CTRPluginFramework::ARCodeEditor::CodeLine::CodeLine(CTRPluginFramework::ARCode&)
0012e3c8 00000080 T CTRPluginFramework::ARCodeEditor::CodeLine::CodeLine(CTRPluginFramework::ARCode&)
0012e448 00000050 T CTRPluginFramework::ARCodeEditor::CodeLine::CodeLine(CTRPluginFramework::ARCodeEditor::CodeLine&&)
0012e448 00000050 T CTRPluginFramework::ARCodeEditor::CodeLine::CodeLine(CTRPluginFramework::ARCodeEditor::CodeLine const&)
0012e448 00000050 T CTRPluginFramework::ARCodeEditor::CodeLine::CodeLine(CTRPluginFramework::ARCodeEditor::CodeLine&&)
0012e448 00000050 T CTRPluginFramework::ARCodeEditor::CodeLine::CodeLine(CTRPluginFramework::ARCodeEditor::CodeLine const&)
0012e498 00000b10 T CTRPluginFramework::ARCodeEditor::CodeLine::Update()
0012efa8 000001a0 T CTRPluginFramework::ARCodeEditor::ARCodeEditor()
0012efa8 000001a0 T CTRPluginFramework::ARCodeEditor::ARCodeEditor()
0012f148 000002e4 T CTRPluginFramework::ARCodeEditor::_RenderTop()
0012f42c 0000001c T CTRPluginFramework::ARCodeEditor::_RenderBottom()
0012f448 00000088 T CTRPluginFramework::ARCodeEditor::_Update()
0012f4d0 00000038 W std::vector<CTRPluginFramework::ARCodeEditor::CodeLine, std::allocator<CTRPluginFramework::ARCodeEditor::CodeLine> >::clear()
0012f508 00000184 W void std::vector<CTRPluginFramework::ARCodeEditor::CodeLine, std::allocator<CTRPluginFramework::ARCodeEditor::CodeLine> >::_M_realloc_insert<CTRPluginFramework::ARCodeEditor::CodeLine>(__gnu_cxx::__normal_iterator<CTRPluginFramework::ARCodeEditor::CodeLine*, std::vector<CTRPluginFramework::ARCodeEditor::CodeLine, std::allocator<CTRPluginFramework::ARCodeEditor::CodeLine> > >, CTRPluginFramework::ARCodeEditor::CodeLine&&)
0012f68c 00000044 W void std::vector<CTRPluginFramework::ARCodeEditor::CodeLine, std::allocator<CTRPluginFramework::ARCodeEditor::CodeLine> >::emplace_back<CTRPluginFramework::ARCodeEditor::CodeLine>(CTRPluginFramework::ARCodeEditor::CodeLine&&)
0012f6d0 00000064 W std::vector<CTRPluginFramework::ARCode, std::allocator<CTRPluginFramework::ARCode> >::_M_check_len(unsigned int, char const*) const
0012f734 0000002c W void std::_Destroy_aux<false>::__destroy<CTRPluginFramework::ARCode*>(CTRPluginFramework::ARCode*, CTRPluginFramework::ARCode*)
0012f760 00000028 W std::vector<CTRPluginFramework::ARCode, std::allocator<CTRPluginFramework::ARCode> >::~vector()
0012f760 00000028 W std::vector<CTRPluginFramework::ARCode, std::allocator<CTRPluginFramework::ARCode> >::~vector()
0012f788 0000004c W CTRPluginFramework::ARCode::operator=(CTRPluginFramework::ARCode const&)
0012f7d4 00000064 W CTRPluginFramework::ARCode* std::__uninitialized_copy<false>::__uninit_copy<CTRPluginFramework::ARCode const*, CTRPluginFramework::ARCode*>(CTRPluginFramework::ARCode const*, CTRPluginFramework::ARCode const*, CTRPluginFramework::ARCode*)
0012f838 000000bc W std::vector<CTRPluginFramework::ARCode, std::allocator<CTRPluginFramework::ARCode> >::_M_insert_rval(__gnu_cxx::__normal_iterator<CTRPluginFramework::ARCode const*, std::vector<CTRPluginFramework::ARCode, std::allocator<CTRPluginFramework::ARCode> > >, CTRPluginFramework::ARCode&&)
0012f8f4 00000328 T CTRPluginFramework::ARCodeEditor::_ReloadCodeLines()
0012fc1c 000004c0 T CTRPluginFramework::ARCodeEditor::CodeLine::Edit(unsigned long, unsigned long)
001300dc 00000468 T CTRPluginFramework::ARCodeEditor::_ProcessEvent(CTRPluginFramework::Event&)
00130544 000004bc T CTRPluginFramework::ARCodeEditor::operator()(std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >&)
00130a00 000000f0 T CTRPluginFramework::ARCodeEditor::Edit(CTRPluginFramework::ARCodeContext&)
00130af0 00000020 t std::vector<CTRPluginFramework::ActionReplay_ProcessString(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, bool)::PColor, std::allocator<CTRPluginFramework::ActionReplay_ProcessString(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, bool)::PColor> >::~vector()
00130af0 00000020 t std::vector<CTRPluginFramework::ActionReplay_ProcessString(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, bool)::PColor, std::allocator<CTRPluginFramework::ActionReplay_ProcessString(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, bool)::PColor> >::~vector()
00130b10 0000001c t bool __gnu_cxx::__ops::_Iter_pred<CTRPluginFramework::Rtrim(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)::{lambda(char)#1}>::operator()<std::reverse_iterator<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >(std::reverse_iterator<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >) [clone .isra.63]
00130b2c 00000114 t CTRPluginFramework::Rtrim(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)
00130c40 00000078 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(char const*, std::allocator<char> const&) [clone .isra.85]
00130cb8 00000018 t bool __gnu_cxx::__ops::_Iter_pred<CTRPluginFramework::Ltrim(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)::{lambda(char)#1}>::operator()<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >(__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >) [clone .isra.59]
00130cd0 000000f4 t CTRPluginFramework::Ltrim(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)
00130dc4 00000010 t CTRPluginFramework::Trim(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)
00130dd4 000000d8 T CTRPluginFramework::ActionReplay_OpenCheatsFile(CTRPluginFramework::File&, bool)
00130eac 00000054 T CTRPluginFramework::ActionReplay_CheckCodeTypeValidity(unsigned long)
00130f00 00000044 T CTRPluginFramework::ActionReplay_IsHexCode(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
00130f44 00000048 T CTRPluginFramework::ActionReplay_IsValidCode(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
00130f8c 000004d8 T CTRPluginFramework::ActionReplay_ProcessString(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, bool)
00131464 00000044 W std::_Deque_base<CTRPluginFramework::MenuFolderImpl*, std::allocator<CTRPluginFramework::MenuFolderImpl*> >::~_Deque_base()
00131464 00000044 W std::_Deque_base<CTRPluginFramework::MenuFolderImpl*, std::allocator<CTRPluginFramework::MenuFolderImpl*> >::~_Deque_base()
001314a8 00000014 W std::deque<CTRPluginFramework::MenuFolderImpl*, std::allocator<CTRPluginFramework::MenuFolderImpl*> >::~deque()
001314a8 00000014 W std::deque<CTRPluginFramework::MenuFolderImpl*, std::allocator<CTRPluginFramework::MenuFolderImpl*> >::~deque()
001314bc 00000020 W std::deque<CTRPluginFramework::MenuFolderImpl*, std::allocator<CTRPluginFramework::MenuFolderImpl*> >::back()
001314dc 0000018c W void std::vector<CTRPluginFramework::ARCode, std::allocator<CTRPluginFramework::ARCode> >::_M_realloc_insert<CTRPluginFramework::ARCode const&>(__gnu_cxx::__normal_iterator<CTRPluginFramework::ARCode*, std::vector<CTRPluginFramework::ARCode, std::allocator<CTRPluginFramework::ARCode> > >, CTRPluginFramework::ARCode const&)
00131668 00000168 W void std::deque<CTRPluginFramework::MenuFolderImpl*, std::allocator<CTRPluginFramework::MenuFolderImpl*> >::_M_push_back_aux<CTRPluginFramework::MenuFolderImpl* const&>(CTRPluginFramework::MenuFolderImpl* const&)
001317d0 00000820 T CTRPluginFramework::ActionReplay_LoadCodes(CTRPluginFramework::MenuFolderImpl*)
00131ff0 000000c4 t CTRPluginFramework::RemoveFormat(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
001320b4 00000078 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(char const*, std::allocator<char> const&) [clone .isra.25]
0013212c 00000344 T CTRPluginFramework::ActionReplay_WriteToFile(CTRPluginFramework::LineWriter&, CTRPluginFramework::MenuItem*)
00132470 00000054 t CTRPluginFramework::ActionReplay_ExecuteCode(CTRPluginFramework::MenuEntryImpl*)
001324c4 00000060 T CTRPluginFramework::MenuEntryActionReplay::~MenuEntryActionReplay()
001324c4 00000060 T CTRPluginFramework::MenuEntryActionReplay::~MenuEntryActionReplay()
00132524 0000001c T CTRPluginFramework::MenuEntryActionReplay::~MenuEntryActionReplay()
00132540 00000050 T CTRPluginFramework::MenuEntryActionReplay::MenuEntryActionReplay(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
00132540 00000050 T CTRPluginFramework::MenuEntryActionReplay::MenuEntryActionReplay(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
00132590 0000009c T CTRPluginFramework::MenuEntryActionReplay::Update()
0013262c 0000002c W MemBlock::Create(unsigned char*, unsigned long)
00132658 00000034 W MemPool::DelBlock(MemBlock*)
0013268c 0000005c T MemPool::CoalesceRight(MemBlock*)
001326e8 0000011c T MemPool::Allocate(MemChunk&, unsigned long, int)
00132804 00000100 T MemPool::Deallocate(MemChunk const&)
00132904 00000020 T MemPool::GetFreeSpace()
00132924 00000124 T __system_allocateHeaps
00132a48 00000034 T arm11kSetKProcessId
00132a7c 00000028 T arm11kGetCurrentKProcess
00132aa4 00000024 T arm11kMemcpy
00132ac8 00000064 T arm11kSvcControlMemory
00132b2c 00000018 T getKernelObjectPtr
00132b44 000000a0 T cfguInit
00132be4 00000034 T cfguExit
00132c18 00000044 T CFGU_GetConfigInfoBlk2
00132c5c 00000014 T CFGU_GetSystemLanguage
00132c70 000000a8 T fontEnsureMapped
00132d18 0000011c T fontGlyphIndexFromCodePoint
00132e34 00000074 T fontGetCharWidthInfo
00132ea8 00000050 T srvExit
00132ef8 00000034 T srvRegisterClient
00132f2c 00000064 T srvInit
00132f90 00000068 T srvGetServiceHandleDirect
00132ff8 00000004 T srvGetServiceHandle
00132ffc 00000034 T srvPublishToSubscriber
00133030 0000000c T __sync_init
0013303c 00000018 T __sync_fini
00133054 00000018 T LightLock_Init
0013306c 0000008c T LightLock_Lock
001330f8 00000034 T LightLock_TryLock
0013312c 00000050 T LightLock_Unlock
0013317c 00000018 T RecursiveLock_Init
00133194 00000030 T RecursiveLock_Lock
001331c4 00000044 T RecursiveLock_TryLock
00133208 00000034 T RecursiveLock_Unlock
0013323c 00000030 T LightEvent_Init
0013326c 00000060 T LightEvent_Clear
001332cc 00000060 T LightEvent_Pulse
0013332c 000000b4 T LightEvent_Signal
001333e0 000000a8 T LightEvent_Wait
00133488 00000168 T threadCreate
001335f0 0000001c T threadFree
0013360c 00000024 T threadJoin
00133630 00000030 T threadGetCurrent
00133660 0000003c T threadExit
0013369c 0000003c t _thread_begin
001336d8 00000088 T acInit
00133760 00000034 T acExit
00133794 000000a0 T amInit
00133834 00000034 T amExit
00133868 00000128 T aptSendCommand
00133990 0000006c T APT_CheckNew3DS
001339fc 00000048 T APT_GetSharedFont
00133a44 00000028 t fsSession
00133a6c 00000040 t fsSessionForArchive
00133aac 00000038 T fsExit
00133ae4 00000028 T FSUSER_Initialize
00133b0c 000000b0 T fsInit
00133bbc 00000080 T FSUSER_OpenFile
00133c3c 00000068 T FSUSER_DeleteFile
00133ca4 000000a4 T FSUSER_RenameFile
00133d48 00000070 T FSUSER_CreateDirectory
00133db8 0000006c T FSUSER_OpenDirectory
00133e24 00000074 T FSUSER_OpenArchive
00133e98 00000058 T FSFILE_Read
00133ef0 00000060 T FSFILE_Write
00133f50 00000038 T FSFILE_GetSize
00133f88 00000028 T FSFILE_SetSize
00133fb0 0000003c T FSFILE_Close
00133fec 00000024 T FSFILE_Flush
00134010 00000050 T FSDIR_Read
00134060 0000003c T FSDIR_Close
0013409c 000000e8 t gspEventThreadMain
00134184 00000098 T gspInitEventHandler
0013421c 00000040 T gspExitEventHandler
0013425c 0000008c T gspExit
001342e8 0000005c T gspWaitForEvent
00134344 00000044 T GSPGPU_FlushDataCache
00134388 00000044 T GSPGPU_InvalidateDataCache
001343cc 00000064 T GSPGPU_RegisterInterruptRelayQueue
00134430 000000dc T gspInit
0013450c 0000002c T GSPGPU_SaveVramSysArea
00134538 0000002c T GSPGPU_RestoreVramSysArea
00134564 000000bc T hidExit
00134620 00000034 T hidCheckSectionUpdateTime
00134654 0000016c T hidScanInput
001347c0 00000010 T hidKeysHeld
001347d0 00000010 T hidKeysDown
001347e0 00000010 T hidKeysUp
001347f0 00000018 T hidTouchRead
00134808 00000090 T HIDUSER_GetHandles
00134898 00000174 T hidInit
00134a0c 00000034 T irrstCheckSectionUpdateTime
00134a40 00000070 T irrstScanInput
00134ab0 0000001c T irrstKeysHeld
00134acc 00000050 T IRRST_GetHandles
00134b1c 00000034 T IRRST_Initialize
00134b50 00000124 T irrstInit
00134c74 0000002c T IRRST_Shutdown
00134ca0 000000a8 T irrstExit
00134d48 0000002c t __ctru_get_reent
00134d74 000000f0 T __system_initSyscalls
00134e64 0000005c T decode_utf16
00134ec0 00000138 T decode_utf8
00134ff8 00000054 T encode_utf16
0013504c 000000e0 T encode_utf8
0013512c 000000d4 T utf16_to_utf8
00135200 000000ac T utf8_to_utf16
001352ac 00000054 T rbtree_find
00135300 00000010 T rbtree_init
00135310 00000174 t do_insert
00135484 00000008 T rbtree_insert
0013548c 00000014 t is_black
001354a0 000002c8 T rbtree_remove
00135768 00000094 T rbtree_rotate
001357fc T loadCROHooked
00135818 T svcControlMemory
00135838 T svcQueryMemory
00135868 T svcCreateThread
00135888 T svcExitThread
00135890 T svcSleepThread
00135898 T svcSetThreadPriority
001358a0 T svcReleaseMutex
001358a8 T svcCreateEvent
001358bc T svcSignalEvent
001358c4 T svcClearEvent
001358cc T svcMapMemoryBlock
001358d4 T svcUnmapMemoryBlock
001358dc T svcCreateAddressArbiter
001358f0 T svcArbitrateAddress
00135908 T svcCloseHandle
00135910 T svcWaitSynchronization
00135918 T svcGetSystemTick
00135920 T svcGetSystemInfo
00135938 T svcGetProcessInfo
00135950 T svcConnectToPort
00135964 T svcSendSyncRequest
0013596c T svcOpenProcess
00135980 T svcBreak
00135988 T svcInvalidateProcessDataCache
00135990 T svcFlushProcessDataCache
00135998 T svcControlProcessMemory
001359b0 T svcBackdoor
001359b8 T svcKernelSetState
001359c0 T svcQueryProcessMemory
001359e4 0000004c T Hook::Hook()
001359e4 0000004c T Hook::Hook()
00135a30 000000c8 T Hook::Initialize(unsigned long, unsigned long, bool)
00135af8 00000060 T Hook::Enable()
00135b58 00000060 T Hook::Disable()
00135bb8 0000003c T CTRPluginFramework::MessageBox::MessageBox(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::DialogType)
00135bb8 0000003c T CTRPluginFramework::MessageBox::MessageBox(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::DialogType)
00135bf4 00000034 T CTRPluginFramework::MessageBox::MessageBox(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::DialogType)
00135bf4 00000034 T CTRPluginFramework::MessageBox::MessageBox(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::DialogType)
00135c28 0000003c T CTRPluginFramework::MessageBox::~MessageBox()
00135c28 0000003c T CTRPluginFramework::MessageBox::~MessageBox()
00135c64 00000008 T CTRPluginFramework::MessageBox::operator()() const
00135c6c 00000014 T CTRPluginFramework::Touch::IsDown()
00135c80 00000028 T CTRPluginFramework::Touch::GetPosition()
00135ca8 0000002c T CTRPluginFramework::LineReader::LineReader(CTRPluginFramework::File&)
00135ca8 0000002c T CTRPluginFramework::LineReader::LineReader(CTRPluginFramework::File&)
00135cd4 00000018 T CTRPluginFramework::LineReader::~LineReader()
00135cd4 00000018 T CTRPluginFramework::LineReader::~LineReader()
00135cec 00000114 T CTRPluginFramework::LineReader::operator()(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)
00135e00 00000028 T CTRPluginFramework::LineWriter::LineWriter(CTRPluginFramework::File&)
00135e00 00000028 T CTRPluginFramework::LineWriter::LineWriter(CTRPluginFramework::File&)
00135e28 00000080 T CTRPluginFramework::LineWriter::endl[abi:cxx11]()
00135ea8 00000048 T CTRPluginFramework::LineWriter::Flush()
00135ef0 0000001c T CTRPluginFramework::LineWriter::~LineWriter()
00135ef0 0000001c T CTRPluginFramework::LineWriter::~LineWriter()
00135f0c 00000070 T CTRPluginFramework::LineWriter::operator<<(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
00135f7c 00000018 T CTRPluginFramework::LineWriter::Close()
00135f94 0000003c T CTRPluginFramework::ResetColor[abi:cxx11]()
00135fd0 00000024 T CTRPluginFramework::operator<<(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, char const*)
00135ff4 00000024 T CTRPluginFramework::operator<<(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
00136018 0000009c T CTRPluginFramework::operator<<(CTRPluginFramework::Color const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
001360b4 00000004 T CTRPluginFramework::CheckBox::~CheckBox()
001360b4 00000004 T CTRPluginFramework::CheckBox::~CheckBox()
001360b8 00000014 T CTRPluginFramework::CheckBox::~CheckBox()
001360cc 000000e4 T CTRPluginFramework::CheckBox::Update(bool, CTRPluginFramework::Vector<int> const&)
001361b0 00000060 T CTRPluginFramework::CheckBox::CheckBox(int, int)
001361b0 00000060 T CTRPluginFramework::CheckBox::CheckBox(int, int)
00136210 00000008 T CTRPluginFramework::CheckBox::IsChecked() const
00136218 000000ac T CTRPluginFramework::ComboBox::Draw()
001362c4 000000ac T CTRPluginFramework::ComboBox::operator()()
00136370 0000004c W CTRPluginFramework::ComboBox::~ComboBox()
00136370 0000004c W CTRPluginFramework::ComboBox::~ComboBox()
001363bc 0000001c W CTRPluginFramework::ComboBox::~ComboBox()
001363d8 00000050 T CTRPluginFramework::ComboBox::ComboBox(int, int, int, int)
001363d8 00000050 T CTRPluginFramework::ComboBox::ComboBox(int, int, int, int)
00136428 00000038 T CTRPluginFramework::ComboBox::Clear()
00136460 00000058 T CTRPluginFramework::ComboBox::Add(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
001364b8 00000090 T CTRPluginFramework::ComboBox::Update(bool, CTRPluginFramework::Vector<int> const&)
00136548 00000004 T CTRPluginFramework::FloatingButton::~FloatingButton()
00136548 00000004 T CTRPluginFramework::FloatingButton::~FloatingButton()
0013654c 00000014 T CTRPluginFramework::FloatingButton::Draw()
00136560 00000014 T CTRPluginFramework::FloatingButton::operator()()
00136574 00000014 T CTRPluginFramework::FloatingButton::~FloatingButton()
00136588 000001c0 T CTRPluginFramework::FloatingButton::Update(bool, CTRPluginFramework::Vector<int> const&)
00136748 00000044 T CTRPluginFramework::FloatingButton::FloatingButton(CTRPluginFramework::Rect<int> const&, int (*)(int, int))
00136748 00000044 T CTRPluginFramework::FloatingButton::FloatingButton(CTRPluginFramework::Rect<int> const&, int (*)(int, int))
0013678c 000001d8 T CTRPluginFramework::MessageBoxImpl::MessageBoxImpl(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::DialogType)
0013678c 000001d8 T CTRPluginFramework::MessageBoxImpl::MessageBoxImpl(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::DialogType)
00136964 00000170 T CTRPluginFramework::MessageBoxImpl::MessageBoxImpl(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::DialogType)
00136964 00000170 T CTRPluginFramework::MessageBoxImpl::MessageBoxImpl(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::DialogType)
00136ad4 00000078 T CTRPluginFramework::MessageBoxImpl::_ProcessEvent(CTRPluginFramework::Event&)
00136b4c 000002bc T CTRPluginFramework::MessageBoxImpl::_Draw()
00136e08 00000104 T CTRPluginFramework::MessageBoxImpl::operator()()
00136f0c 00000020 W CTRPluginFramework::NumericTextBox::~NumericTextBox()
00136f0c 00000020 W CTRPluginFramework::NumericTextBox::~NumericTextBox()
00136f2c 0000001c W CTRPluginFramework::NumericTextBox::~NumericTextBox()
00136f48 00000094 T CTRPluginFramework::NumericTextBox::Draw()
00136fdc 00000038 t CTRPluginFramework::NumericTextBox::_UpdateVal() [clone .part.16]
00137014 00000068 T CTRPluginFramework::NumericTextBox::_UpdateVal()
0013707c 000000f8 T CTRPluginFramework::NumericTextBox::operator()()
00137174 00000010 T CTRPluginFramework::NumericTextBox::SetValue(unsigned long)
00137184 00000010 T CTRPluginFramework::NumericTextBox::SetValue(float)
00137194 00000008 T CTRPluginFramework::NumericTextBox::UseHexadecimal(bool)
0013719c 0000000c T CTRPluginFramework::NumericTextBox::Clear()
001371a8 00000068 T CTRPluginFramework::NumericTextBox::NumericTextBox(int, int, int, int)
001371a8 00000068 T CTRPluginFramework::NumericTextBox::NumericTextBox(int, int, int, int)
00137210 00000080 T CTRPluginFramework::NumericTextBox::Update(bool, CTRPluginFramework::Vector<int> const&)
00137290 00000008 W CTRPluginFramework::Drawable::operator()()
00137298 00000004 T CTRPluginFramework::TextBox::Update(bool, CTRPluginFramework::Vector<int> const&)
0013729c 000002e0 T CTRPluginFramework::TextBox::Draw()
0013757c 000000ec T CTRPluginFramework::TextBox::TextBox()
0013757c 000000ec T CTRPluginFramework::TextBox::TextBox()
00137668 0000000c T CTRPluginFramework::TextBox::Open() const
00137674 0000000c T CTRPluginFramework::TextBox::Close() const
00137680 00000008 T CTRPluginFramework::TextBox::IsOpen() const
00137688 0000024c T CTRPluginFramework::TextBox::ProcessEvent(CTRPluginFramework::Event&)
001378d4 0000000c T CTRPluginFramework::TextBox::DrawConst() const
001378e0 00000098 T CTRPluginFramework::TextBox::_GetWordWidth(unsigned char*, float&)
00137978 000000b4 T CTRPluginFramework::CutWordWidth(unsigned char*, float&, float)
00137a2c 000000d8 W void std::vector<unsigned char*, std::allocator<unsigned char*> >::_M_realloc_insert<unsigned char* const&>(__gnu_cxx::__normal_iterator<unsigned char**, std::vector<unsigned char*, std::allocator<unsigned char*> > >, unsigned char* const&)
00137b04 0000003c W std::vector<unsigned char*, std::allocator<unsigned char*> >::push_back(unsigned char* const&)
00137b40 000001e8 T CTRPluginFramework::TextBox::_GetTextInfos()
00137d28 00000198 T CTRPluginFramework::TextBox::TextBox(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::Rect<int> const&)
00137d28 00000198 T CTRPluginFramework::TextBox::TextBox(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::Rect<int> const&)
00137ec0 000000e8 T CTRPluginFramework::TextBox::Update(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)
00137fa8 00000004 T CTRPluginFramework::TouchKey::~TouchKey()
00137fa8 00000004 T CTRPluginFramework::TouchKey::~TouchKey()
00137fac 00000014 T CTRPluginFramework::TouchKey::~TouchKey()
00137fc0 000000a0 T CTRPluginFramework::TouchKey::Update(bool, CTRPluginFramework::Vector<int> const&)
00138060 0000005c T CTRPluginFramework::TouchKey::TouchKey(int, CTRPluginFramework::Rect<int>, bool)
00138060 0000005c T CTRPluginFramework::TouchKey::TouchKey(int, CTRPluginFramework::Rect<int>, bool)
001380bc 000000a0 T CTRPluginFramework::TouchKey::TouchKey(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::Rect<int>, int, bool)
001380bc 000000a0 T CTRPluginFramework::TouchKey::TouchKey(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::Rect<int>, int, bool)
0013815c 0000005c T CTRPluginFramework::TouchKey::TouchKey(int, int (*)(int, int, bool), CTRPluginFramework::Rect<int>, bool)
0013815c 0000005c T CTRPluginFramework::TouchKey::TouchKey(int, int (*)(int, int, bool), CTRPluginFramework::Rect<int>, bool)
001381b8 00000008 T CTRPluginFramework::TouchKey::Enable(bool)
001381c0 00000128 T CTRPluginFramework::TouchKey::DrawCharacter(CTRPluginFramework::Rect<int> const&, CTRPluginFramework::Color const&)
001382e8 00000088 T CTRPluginFramework::TouchKey::Draw()
00138370 00000098 T CTRPluginFramework::TouchKey::operator()(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)
00138408 000000ac T CTRPluginFramework::TouchKeyString::TouchKeyString(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::Rect<int>, bool)
00138408 000000ac T CTRPluginFramework::TouchKeyString::TouchKeyString(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::Rect<int>, bool)
001384b4 000000b0 T CTRPluginFramework::TouchKeyString::Draw()
00138564 000000a0 T CTRPluginFramework::TouchKeyString::Update(bool, CTRPluginFramework::Vector<int> const&)
00138604 00000018 T CTRPluginFramework::TouchKeyString::Scroll(float)
0013861c 00000030 T CTRPluginFramework::TouchKeyString::operator()()
0013864c 00000014 T CTRPluginFramework::UIContainer::UIContainer()
0013864c 00000014 T CTRPluginFramework::UIContainer::UIContainer()
00138660 00000024 T CTRPluginFramework::UIContainer::Draw()
00138684 00000034 T CTRPluginFramework::UIContainer::Update(bool, CTRPluginFramework::Vector<int> const&)
001386b8 00000024 T CTRPluginFramework::UIContainer::ExecuteAll()
001386dc 000000d8 W void std::vector<CTRPluginFramework::Drawable*, std::allocator<CTRPluginFramework::Drawable*> >::_M_realloc_insert<CTRPluginFramework::Drawable* const&>(__gnu_cxx::__normal_iterator<CTRPluginFramework::Drawable**, std::vector<CTRPluginFramework::Drawable*, std::allocator<CTRPluginFramework::Drawable*> > >, CTRPluginFramework::Drawable* const&)
001387b4 00000044 T CTRPluginFramework::UIContainer::operator+=(CTRPluginFramework::Drawable*)
001387f8 000000e4 T CTRPluginFramework::Converter::Converter()
001387f8 000000e4 T CTRPluginFramework::Converter::Converter()
001388dc 00000010 T CTRPluginFramework::Converter::Instance()
001388ec 00000108 T CTRPluginFramework::Converter::_Draw()
001389f4 00000014 W std::deque<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >::~deque()
001389f4 00000014 W std::deque<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >::~deque()
00138a08 000001e0 T CTRPluginFramework::Converter::operator()()
00138be8 00000078 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(char const*, std::allocator<char> const&) [clone .isra.26]
00138c60 0000004c T CTRPluginFramework::GatewayRAMDumper::GatewayRAMDumper()
00138c60 0000004c T CTRPluginFramework::GatewayRAMDumper::GatewayRAMDumper()
00138cac 000000bc T CTRPluginFramework::GatewayRAMDumper::_WriteHeader()
00138d68 000000e8 T CTRPluginFramework::GatewayRAMDumper::_DrawProgress()
00138e50 00000064 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > std::operator+<char, std::char_traits<char>, std::allocator<char> >(char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
00138eb4 00000314 T CTRPluginFramework::GatewayRAMDumper::_SelectRegion()
001391c8 000000f8 W __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > std::__remove_if<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, __gnu_cxx::__ops::_Iter_equals_val<char const> >(__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, __gnu_cxx::__ops::_Iter_equals_val<char const>)
001392c0 00000248 T CTRPluginFramework::GatewayRAMDumper::_OpenFile()
00139508 00000280 T CTRPluginFramework::GatewayRAMDumper::operator()()
00139788 00000004 W CTRPluginFramework::IconButton<CTRPluginFramework::GuideReader, void>::~IconButton()
00139788 00000004 W CTRPluginFramework::IconButton<CTRPluginFramework::GuideReader, void>::~IconButton()
0013978c 0000001c W CTRPluginFramework::IconButton<CTRPluginFramework::GuideReader, void>::Draw()
001397a8 00000014 W CTRPluginFramework::IconButton<CTRPluginFramework::GuideReader, void>::~IconButton()
001397bc 00000064 W CTRPluginFramework::IconButton<CTRPluginFramework::GuideReader, void>::operator()()
00139820 00000078 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(char const*, std::allocator<char> const&) [clone .isra.36]
00139898 000000c0 T CTRPluginFramework::GuideReader::_LoadBMP()
00139958 000002bc t CTRPluginFramework::CreateFolder(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)
00139c14 00000228 T CTRPluginFramework::GuideReader::GuideReader()
00139c14 00000228 T CTRPluginFramework::GuideReader::GuideReader()
00139e3c 00000414 t CTRPluginFramework::GuideReader::_ProcessEvent(CTRPluginFramework::Event&) [clone .part.41]
0013a250 00000018 T CTRPluginFramework::GuideReader::_ProcessEvent(CTRPluginFramework::Event&)
0013a268 00000080 W CTRPluginFramework::IconButton<CTRPluginFramework::GuideReader, void>::Update(bool, CTRPluginFramework::Vector<int> const&)
0013a2e8 00000154 T CTRPluginFramework::GuideReader::Draw()
0013a43c 00000070 T CTRPluginFramework::GuideReader::operator()(std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >&, CTRPluginFramework::Time&)
0013a4ac 00000004 W CTRPluginFramework::IconButton<CTRPluginFramework::HexEditor, void>::~IconButton()
0013a4ac 00000004 W CTRPluginFramework::IconButton<CTRPluginFramework::HexEditor, void>::~IconButton()
0013a4b0 0000001c W CTRPluginFramework::IconButton<CTRPluginFramework::HexEditor, void>::Draw()
0013a4cc 00000014 W CTRPluginFramework::IconButton<CTRPluginFramework::HexEditor, void>::~IconButton()
0013a4e0 00000064 W CTRPluginFramework::IconButton<CTRPluginFramework::HexEditor, void>::operator()()
0013a544 00000078 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(char const*, std::allocator<char> const&) [clone .isra.48]
0013a5bc 0000001c T CTRPluginFramework::HexEditor::_RenderBottom()
0013a5d8 0000002c T CTRPluginFramework::HexEditor::_GetCursorAddress() const
0013a604 00000080 T CTRPluginFramework::HexEditor::_CreateCheat()
0013a684 00000118 T CTRPluginFramework::HexEditor::Goto(unsigned long, bool)
0013a79c 00000030 T CTRPluginFramework::HexEditor::_MoveBackward()
0013a7cc 00000044 T CTRPluginFramework::HexEditor::_MoveForward()
0013a810 00000044 T CTRPluginFramework::HexEditor::_ApplyChanges()
0013a854 00000034 T CTRPluginFramework::HexEditor::_DiscardChanges()
0013a888 00000054 T CTRPluginFramework::HexEditor::_GotoPreviousRegion()
0013a8dc 00000054 T CTRPluginFramework::HexEditor::_GotoNextRegion()
0013a930 00000280 T CTRPluginFramework::HexEditor::_ProcessEvent(CTRPluginFramework::Event&)
0013abb0 00000038 T CTRPluginFramework::HexEditor::_GetChar(unsigned char*, int)
0013abe8 000005e4 T CTRPluginFramework::HexEditor::_RenderTop()
0013b1cc 0000022c T CTRPluginFramework::HexEditor::HexEditor(unsigned long)
0013b1cc 0000022c T CTRPluginFramework::HexEditor::HexEditor(unsigned long)
0013b3f8 00000044 W std::vector<CTRPluginFramework::TouchKey, std::allocator<CTRPluginFramework::TouchKey> >::at(unsigned int)
0013b43c 000001e8 T CTRPluginFramework::HexEditor::_PromptForAddress(int)
0013b624 00000058 T CTRPluginFramework::HexEditor::_SaveThisAddress()
0013b67c 000000e8 T CTRPluginFramework::HexEditor::_JumpTo(int)
0013b764 00000080 W CTRPluginFramework::IconButton<CTRPluginFramework::HexEditor, void>::Update(bool, CTRPluginFramework::Vector<int> const&)
0013b7e4 00000044 T CTRPluginFramework::HexEditor::_Update()
0013b828 00000150 T CTRPluginFramework::HexEditor::_BrowseHistory()
0013b978 000002b0 T CTRPluginFramework::HexEditor::operator()(std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >&)
0013bc28 00000078 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(char const*, std::allocator<char> const&) [clone .isra.36]
0013bca0 000000dc T CTRPluginFramework::Menu::Menu(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, int (*)(int, int))
0013bca0 000000dc T CTRPluginFramework::Menu::Menu(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, int (*)(int, int))
0013bd7c 00000118 T CTRPluginFramework::Menu::Menu(CTRPluginFramework::MenuFolderImpl*, int (*)(int, int))
0013bd7c 00000118 T CTRPluginFramework::Menu::Menu(CTRPluginFramework::MenuFolderImpl*, int (*)(int, int))
0013be94 0000003c T CTRPluginFramework::Menu::Open(CTRPluginFramework::MenuFolderImpl*, int)
0013bed0 00000030 T CTRPluginFramework::Menu::~Menu()
0013bed0 00000030 T CTRPluginFramework::Menu::~Menu()
0013bf00 0000000c T CTRPluginFramework::Menu::Append(CTRPluginFramework::MenuItem*) const
0013bf0c 00000008 T CTRPluginFramework::Menu::GetFolder() const
0013bf14 00000008 T CTRPluginFramework::Menu::GetRootFolder() const
0013bf1c 00000028 T CTRPluginFramework::Menu::GetSelectedItem() const
0013bf44 000003a4 T CTRPluginFramework::Menu::Draw() const
0013c2e8 00000084 T CTRPluginFramework::Menu::_ScrollUp(int)
0013c36c 00000084 T CTRPluginFramework::Menu::_ScrollDown(int)
0013c3f0 00000230 T CTRPluginFramework::Menu::ProcessEvent(CTRPluginFramework::Event&, CTRPluginFramework::MenuItem**)
0013c620 00000170 T CTRPluginFramework::Menu::Update(CTRPluginFramework::Time const&)
0013c790 00000068 T CTRPluginFramework::Menu::ShowNote()
0013c7f8 00000008 T CTRPluginFramework::Menu::CloseNote()
0013c800 00000008 T CTRPluginFramework::Menu::IsNoteOpen()
0013c808 00000040 W std::vector<CTRPluginFramework::MenuItem*, std::allocator<CTRPluginFramework::MenuItem*> >::_M_erase(__gnu_cxx::__normal_iterator<CTRPluginFramework::MenuItem**, std::vector<CTRPluginFramework::MenuItem*, std::allocator<CTRPluginFramework::MenuItem*> > >)
0013c848 00000044 T CTRPluginFramework::Menu::Pop()
0013c88c 000000bc T CTRPluginFramework::Menu::Insert(CTRPluginFramework::MenuItem*)
0013c948 00000020 W CTRPluginFramework::MenuEntryTools::~MenuEntryTools()
0013c948 00000020 W CTRPluginFramework::MenuEntryTools::~MenuEntryTools()
0013c968 0000001c W CTRPluginFramework::MenuEntryTools::~MenuEntryTools()
0013c984 00000094 T CTRPluginFramework::MenuEntryTools::MenuEntryTools(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, void (*)(), int (*)(int, int), void*)
0013c984 00000094 T CTRPluginFramework::MenuEntryTools::MenuEntryTools(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, void (*)(), int (*)(int, int), void*)
0013ca18 00000060 T CTRPluginFramework::MenuEntryTools::MenuEntryTools(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, void (*)(), bool, bool, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
0013ca18 00000060 T CTRPluginFramework::MenuEntryTools::MenuEntryTools(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, void (*)(), bool, bool, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
0013ca78 00000060 T CTRPluginFramework::MenuEntryTools::MenuEntryTools(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, void (*)(CTRPluginFramework::MenuEntryTools*), bool, bool, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
0013ca78 00000060 T CTRPluginFramework::MenuEntryTools::MenuEntryTools(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, void (*)(CTRPluginFramework::MenuEntryTools*), bool, bool, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
0013cad8 00000004 T CTRPluginFramework::MenuEntryTools::TriggerState()
0013cadc 0000000c T CTRPluginFramework::PluginMenuHome::_actionReplayBtn_OnClick()
0013cae8 0000000c T CTRPluginFramework::PluginMenuHome::_gameGuideBtn_OnClick()
0013caf4 0000000c T CTRPluginFramework::PluginMenuHome::_searchBtn_OnClick()
0013cb00 0000000c T CTRPluginFramework::PluginMenuHome::_toolsBtn_OnClick()
0013cb0c 00000004 W CTRPluginFramework::IconButton<CTRPluginFramework::PluginMenuHome, void>::~IconButton()
0013cb0c 00000004 W CTRPluginFramework::IconButton<CTRPluginFramework::PluginMenuHome, void>::~IconButton()
0013cb10 00000004 W CTRPluginFramework::ToggleButton<CTRPluginFramework::PluginMenuHome, void>::~ToggleButton()
0013cb10 00000004 W CTRPluginFramework::ToggleButton<CTRPluginFramework::PluginMenuHome, void>::~ToggleButton()
0013cb14 0000001c W CTRPluginFramework::ToggleButton<CTRPluginFramework::PluginMenuHome, void>::Draw()
0013cb30 0000001c W CTRPluginFramework::IconButton<CTRPluginFramework::PluginMenuHome, void>::Draw()
0013cb4c 00000014 W CTRPluginFramework::IconButton<CTRPluginFramework::PluginMenuHome, void>::~IconButton()
0013cb60 00000014 W CTRPluginFramework::ToggleButton<CTRPluginFramework::PluginMenuHome, void>::~ToggleButton()
0013cb74 000000e8 T CTRPluginFramework::PluginMenuHome::_showStarredBtn_OnClick()
0013cc5c 0000003c T CTRPluginFramework::PluginMenuHome::_keyboardBtn_OnClick()
0013cc98 00000058 t CTRPluginFramework::SelectableEntryCount(CTRPluginFramework::MenuFolderImpl&)
0013ccf0 000000b4 t CTRPluginFramework::ScrollUp(int&, CTRPluginFramework::MenuFolderImpl&, int)
0013cda4 000000e0 t CTRPluginFramework::ScrollDown(int&, CTRPluginFramework::MenuFolderImpl&, int)
0013ce84 0000008c T CTRPluginFramework::PluginMenuHome::_controllerBtn_OnClick()
0013cf10 0000002c T CTRPluginFramework::PluginMenuHome::_InfoBtn_OnClick()
0013cf3c 00000064 W CTRPluginFramework::ToggleButton<CTRPluginFramework::PluginMenuHome, void>::operator()()
0013cfa0 00000064 W CTRPluginFramework::IconButton<CTRPluginFramework::PluginMenuHome, void>::operator()()
0013d004 00000078 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(char const*, std::allocator<char> const&) [clone .isra.38]
0013d07c 00000044 T CTRPluginFramework::decoder(char*, unsigned long const*, int)
0013d0c0 0000000c T CTRPluginFramework::PluginMenuHome::Append(CTRPluginFramework::MenuItem*) const
0013d0cc 0000032c T CTRPluginFramework::PluginMenuHome::_RenderTop()
0013d3f8 00000104 T CTRPluginFramework::PluginMenuHome::_RenderBottom()
0013d4fc 00000260 T CTRPluginFramework::PluginMenuHome::_Update(CTRPluginFramework::Time)
0013d75c 00000104 T CTRPluginFramework::PluginMenuHome::_TriggerEntry()
0013d860 000003dc T CTRPluginFramework::PluginMenuHome::_ProcessEvent(CTRPluginFramework::Event&)
0013dc3c 000000d0 T CTRPluginFramework::PluginMenuHome::UnStar(CTRPluginFramework::MenuItem*)
0013dd0c 00000080 T CTRPluginFramework::PluginMenuHome::_StarItem()
0013dd8c 0000006c T CTRPluginFramework::PluginMenuHome::Init()
0013ddf8 00000084 T CTRPluginFramework::PluginMenuHome::AddPluginVersion(unsigned long)
0013de7c 0000005c T CTRPluginFramework::PluginMenuHome::Close(CTRPluginFramework::MenuFolderImpl*)
0013ded8 00000158 W CTRPluginFramework::Button<CTRPluginFramework::PluginMenuHome, void>::Button(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::PluginMenuHome&, void (CTRPluginFramework::PluginMenuHome::*)(), CTRPluginFramework::Rect<int>, int (*)(int, int))
0013ded8 00000158 W CTRPluginFramework::Button<CTRPluginFramework::PluginMenuHome, void>::Button(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::PluginMenuHome&, void (CTRPluginFramework::PluginMenuHome::*)(), CTRPluginFramework::Rect<int>, int (*)(int, int))
0013e030 00000038 W CTRPluginFramework::Button<CTRPluginFramework::PluginMenuHome, void>::RoundedRatio(unsigned long)
0013e068 0000071c T CTRPluginFramework::PluginMenuHome::PluginMenuHome(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)
0013e068 0000071c T CTRPluginFramework::PluginMenuHome::PluginMenuHome(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)
0013e784 00000078 W CTRPluginFramework::Rect<int>::Contains(CTRPluginFramework::Vector<int> const&) const
0013e7fc 00000080 W CTRPluginFramework::IconButton<CTRPluginFramework::PluginMenuHome, void>::Update(bool, CTRPluginFramework::Vector<int> const&)
0013e87c 00000080 W CTRPluginFramework::ToggleButton<CTRPluginFramework::PluginMenuHome, void>::Update(bool, CTRPluginFramework::Vector<int> const&)
0013e8fc 0000010c T CTRPluginFramework::PluginMenuHome::operator()(std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >&, int&, CTRPluginFramework::Time&)
0013ea08 00000008 T CTRPluginFramework::ActionReplay_IsValidAddress(unsigned long, bool)
0013ea10 00000024 T CTRPluginFramework::Write32(unsigned long, unsigned long)
0013ea34 00000024 T CTRPluginFramework::Write16(unsigned long, unsigned short)
0013ea58 00000024 T CTRPluginFramework::Write8(unsigned long, unsigned char)
0013ea7c 00000028 T CTRPluginFramework::Read32(unsigned long, unsigned long&)
0013eaa4 00000028 T CTRPluginFramework::Read16(unsigned long, unsigned short&)
0013eacc 00000028 T CTRPluginFramework::Read8(unsigned long, unsigned char&)
0013eaf4 00000020 W std::vector<CTRPluginFramework::ARCode, std::allocator<CTRPluginFramework::ARCode> >::clear()
0013eb14 00001444 T CTRPluginFramework::ARHandler::_Execute(std::vector<CTRPluginFramework::ARCode, std::allocator<CTRPluginFramework::ARCode> > const&)
0013ff58 00000064 T CTRPluginFramework::ARHandler::Execute(std::vector<CTRPluginFramework::ARCode, std::allocator<CTRPluginFramework::ARCode> > const&, unsigned long (&) [2])
0013ffbc 00000020 t _GLOBAL__sub_I__ZN18CTRPluginFramework9ARHandler6OffsetE
0013ffdc 00000024 t addrMapNodeComparator(rbtree_node const*, rbtree_node const*)
00140000 00000004 t addrMapNodeDestructor(rbtree_node*)
00140004 000000d8 T mappableAlloc
001400dc 00000050 T mappableFree
0014012c 00000008 T envGetHandle
00140134 0000005c t getSysTime
00140190 000000fc T __libctru_gtod
0014028c 00000014 W __appExit
001402a0 00000078 W __libctru_exit
00140318 00000050 T rbtree_node_next
00140368 00000004 T operator delete[](void*)
0014036c 00000004 T operator new[](unsigned int)
00140370 0000005c T __cxa_guard_acquire
001403cc 0000000c T __cxa_guard_release
001403d8 00000060 t __gxx_exception_cleanup(_Unwind_Reason_Code, _Unwind_Control_Block*)
00140438 00000070 T __cxa_init_primary_exception
001404a8 00000054 T __cxa_throw
001404fc 000000b0 T __cxa_rethrow
001405ac 00000020 T __gnu_cxx::recursive_init_error::~recursive_init_error()
001405ac 00000020 T __gnu_cxx::recursive_init_error::~recursive_init_error()
001405cc 0000002c T __gnu_cxx::recursive_init_error::~recursive_init_error()
001405f8 00000004 T std::exception::~exception()
001405f8 00000004 T std::exception::~exception()
001405fc 00000004 T std::bad_exception::~bad_exception()
001405fc 00000004 T std::bad_exception::~bad_exception()
00140600 0000000c T transaction clone for std::exception::what() const
00140600 0000000c T std::exception::what() const
0014060c 0000000c T transaction clone for std::bad_exception::what() const
0014060c 0000000c T std::bad_exception::what() const
00140618 00000018 T std::bad_exception::~bad_exception()
00140630 00000020 T __cxxabiv1::__si_class_type_info::~__si_class_type_info()
00140630 00000020 T __cxxabiv1::__si_class_type_info::~__si_class_type_info()
00140650 0000002c T __cxxabiv1::__si_class_type_info::~__si_class_type_info()
0014067c 0000006c T __cxxabiv1::__si_class_type_info::__do_find_public_src(int, void const*, __cxxabiv1::__class_type_info const*, void const*) const
001406e8 000000d4 T __cxxabiv1::__si_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const
001407bc 00000044 T __cxxabiv1::__si_class_type_info::__do_upcast(__cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__upcast_result&) const
00140800 0000000c T __cxa_get_globals_fast
0014080c 0000000c T __cxa_get_globals
00140818 00000004 T operator delete(void*, unsigned int)
0014081c 000000d0 T __cxa_begin_catch
001408ec 000000d8 T __cxa_end_catch
001409c4 00000004 T std::type_info::~type_info()
001409c4 00000004 T std::type_info::~type_info()
001409c8 00000008 T std::type_info::__is_pointer_p() const
001409c8 00000008 T std::type_info::__is_function_p() const
001409d0 0000004c T std::type_info::operator==(std::type_info const&) const
00140a1c 00000008 T __cxa_pure_virtual
00140a24 00000168 t read_encoded_value_with_base(unsigned char, unsigned int, unsigned char const*, unsigned int*)
00140b8c 00000060 t base_of_encoded_value(unsigned char, _Unwind_Context*) [clone .part.3]
00140bec 000000e0 t parse_lsda_header(_Unwind_Context*, unsigned char const*, lsda_header_info*)
00140ccc 0000074c T __gxx_personality_v0
00141418 00000004 T operator delete(void*)
0014141c 0000005c T operator new(unsigned int)
00141478 00000010 T __aeabi_atexit
00141488 000000d0 t (anonymous namespace)::pool::free(void*) [clone .constprop.4]
00141558 000000b4 t (anonymous namespace)::pool::allocate(unsigned int) [clone .constprop.5]
0014160c 00000044 T __cxa_allocate_exception
00141650 00000030 T __cxa_free_exception
00141680 00000040 t _GLOBAL__sub_I__ZN9__gnu_cxx9__freeresEv
001416c0 0000005c T __cxxabiv1::__class_type_info::__do_upcast(__cxxabiv1::__class_type_info const*, void**) const
0014171c 00000014 T __cxxabiv1::__class_type_info::__do_find_public_src(int, void const*, __cxxabiv1::__class_type_info const*, void const*) const
00141730 00000020 T __cxxabiv1::__class_type_info::~__class_type_info()
00141730 00000020 T __cxxabiv1::__class_type_info::~__class_type_info()
00141750 0000002c T __cxxabiv1::__class_type_info::~__class_type_info()
0014177c 00000068 T __cxxabiv1::__class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const
001417e4 0000002c T __cxxabiv1::__class_type_info::__do_upcast(__cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__upcast_result&) const
00141810 00000044 T __cxxabiv1::__class_type_info::__do_catch(std::type_info const*, void**, unsigned int) const
00141854 00000018 T std::__detail::_List_node_base::_M_hook(std::__detail::_List_node_base*)
0014186c 00000014 T std::__detail::_List_node_base::_M_unhook()
00141880 0000002c T std::__throw_bad_alloc()
001418ac 00000040 T std::__throw_logic_error(char const*)
001418ec 00000040 T std::__throw_invalid_argument(char const*)
0014192c 00000040 T std::__throw_length_error(char const*)
0014196c 00000040 T std::__throw_out_of_range(char const*)
001419ac 0000007c T std::__throw_out_of_range_fmt(char const*, ...)
00141a28 00000038 T std::logic_error::logic_error(char const*)
00141a28 00000038 T std::logic_error::logic_error(char const*)
00141a60 00000020 T std::invalid_argument::invalid_argument(char const*)
00141a60 00000020 T std::invalid_argument::invalid_argument(char const*)
00141a80 00000020 T std::length_error::length_error(char const*)
00141a80 00000020 T std::length_error::length_error(char const*)
00141aa0 00000020 T std::out_of_range::out_of_range(char const*)
00141aa0 00000020 T std::out_of_range::out_of_range(char const*)
00141ac0 00000084 W std::string::_Rep::_S_create(unsigned int, unsigned int, std::allocator<char> const&)
00141b44 00000004 W std::string::_Rep::_M_destroy(std::allocator<char> const&)
00141b48 000000b0 W char* std::string::_S_construct<char const*>(char const*, char const*, std::allocator<char> const&, std::forward_iterator_tag)
00141bf8 00000040 W std::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(char const*, std::allocator<char> const&)
00141bf8 00000040 W std::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(char const*, std::allocator<char> const&)
00141c38 00000054 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_create(unsigned int&, unsigned int)
00141c8c 00000014 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_dispose()
00141ca0 00000024 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_S_copy_chars(char*, char*, char*)
00141cc4 00000024 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_S_copy_chars(char*, char const*, char const*)
00141ce8 000000b8 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_assign(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
00141da0 00000110 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_mutate(unsigned int, unsigned int, char const*, unsigned int)
00141eb0 00000074 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_erase(unsigned int, unsigned int)
00141f24 0000006c W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&&)
00141f24 0000006c W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&&)
00141f90 00000024 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::~basic_string()
00141f90 00000024 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::~basic_string()
00141fb4 00000090 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::operator=(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&&)
00142044 00000114 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::reserve(unsigned int)
00142158 0000006c W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::push_back(char)
001421c4 0000006c W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::erase(unsigned int, unsigned int)
00142230 00000028 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::erase(__gnu_cxx::__normal_iterator<char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >)
00142258 00000044 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::erase(__gnu_cxx::__normal_iterator<char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, __gnu_cxx::__normal_iterator<char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >)
0014229c 00000018 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::pop_back()
001422b4 00000104 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_replace_aux(unsigned int, unsigned int, unsigned int, char)
001423b8 00000048 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::insert(unsigned int, unsigned int, char)
00142400 00000288 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_replace(unsigned int, unsigned int, char const*, unsigned int)
00142688 00000038 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::operator=(char const*)
001426c0 0000004c W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::insert(unsigned int, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
0014270c 00000060 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::insert(unsigned int, char const*)
0014276c 00000094 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_append(char const*, unsigned int)
00142800 00000010 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::append(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
00142810 00000010 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::operator+=(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
00142820 0000002c W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::append(char const*, unsigned int)
0014284c 00000048 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::append(char const*)
00142894 00000048 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::operator+=(char const*)
001428dc 000000a8 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::find(char const*, unsigned int, unsigned int) const
00142984 00000010 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::find(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned int) const
00142994 00000070 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::rfind(char const*, unsigned int, unsigned int) const
00142a04 00000030 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::rfind(char const*, unsigned int) const
00142a34 0000004c W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::compare(char const*) const
00142a80 000000b0 W void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct<char*>(char*, char*, std::forward_iterator_tag)
00142b30 00000030 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
00142b30 00000030 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
00142b60 000000b0 W void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct<char const*>(char const*, char const*, std::forward_iterator_tag)
00142c10 00000078 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::substr(unsigned int, unsigned int) const
00142c88 00000070 T __gnu_cxx::__throw_insufficient_space(char const*, char const*)
00142cf8 00000078 T __gnu_cxx::__concat_size_t(char*, unsigned int, unsigned int)
00142d70 00000100 T __gnu_cxx::__snprintf_lite(char*, unsigned int, char const*, std::__va_list)
00142e70 00000014 T std::get_new_handler()
00142e84 00000034 T __cxxabiv1::__terminate(void (*)())
00142eb8 00000018 T std::terminate()
00142ed0 0000000c T __cxxabiv1::__unexpected(void (*)())
00142edc 00000018 T std::unexpected()
00142ef4 00000014 T std::get_terminate()
00142f08 00000014 T std::get_unexpected()
00142f1c 0000000c T std::bad_alloc::what() const
00142f28 00000020 T std::bad_alloc::~bad_alloc()
00142f28 00000020 T std::bad_alloc::~bad_alloc()
00142f48 0000002c T std::bad_alloc::~bad_alloc()
00142f74 T __cxa_end_cleanup
00142f84 00000138 T __cxa_type_match
001430bc 000000b4 T __cxa_begin_cleanup
00143170 000000b4 T __gnu_end_cleanup
00143224 00000070 t __cxxabiv1::__is_gxx_exception_class(char*)
00143294 0000002c T __cxa_call_terminate
001432c0 0000013c T __cxa_call_unexpected
001433fc 00000008 T std::logic_error::what() const
00143404 00000064 T std::logic_error::~logic_error()
00143404 00000064 T std::logic_error::~logic_error()
00143468 0000001c T std::logic_error::~logic_error()
00143484 00000020 T std::invalid_argument::~invalid_argument()
00143484 00000020 T std::invalid_argument::~invalid_argument()
001434a4 00000028 T std::invalid_argument::~invalid_argument()
001434cc 00000020 T std::length_error::~length_error()
001434cc 00000020 T std::length_error::~length_error()
001434ec 00000028 T std::length_error::~length_error()
00143514 00000020 T std::out_of_range::~out_of_range()
00143514 00000020 T std::out_of_range::~out_of_range()
00143534 00000028 T std::out_of_range::~out_of_range()
00143560 00000174 T ceil
001436d4 000000b8 T ceilf
00143790 00000174 T floor
00143904 00000088 T roundf
00143990 00000020 T log2
001439b0 0000015c T log
00143b10 000002c4 T __ieee754_log
00143dd4 00000008 T matherr
00143de0 00000010 T nan
00143df0 0000002c t __aeabi_f2lz
00143df0 0000002c T __fixsfdi
00143e20 00000050 t __aeabi_f2ulz
00143e20 00000050 T __fixunssfdi
00143e70 00000158 t __udivmoddi4
00143fc8 00000018 t selfrel_offset31
00143fe0 0000008c t search_EIT_table
0014406c 00000040 t __gnu_unwind_get_pr_addr
001440ac 00000118 t get_eit_entry
001441c4 00000088 t restore_non_core_regs
0014424c 00000014 t _Unwind_decode_typeinfo_ptr.isra.0
00144260 00000004 t _Unwind_DebugHook
00144264 00000068 t unwind_phase2
001442cc 00000134 t unwind_phase2_forced
00144400 000000a8 t __gnu_Unwind_RaiseException
001444a8 00000024 t __gnu_Unwind_ForcedUnwind
001444cc 00000074 t __gnu_Unwind_Resume
00144540 00000020 t __gnu_Unwind_Resume_or_Rethrow
00144560 00000004 t _Unwind_Complete
00144564 00000018 t _Unwind_DeleteException
0014457c 00000068 t _Unwind_VRS_Get
001445e4 0000002c t _Unwind_GetGR
00144610 00000068 t _Unwind_VRS_Set
00144678 0000002c t _Unwind_SetGR
001446a4 000000c0 t __gnu_Unwind_Backtrace
00144764 0000044c t __gnu_unwind_pr_common
00144bb0 00000008 T __aeabi_unwind_cpp_pr0
00144bb8 00000008 W __aeabi_unwind_cpp_pr1
00144bc0 00000008 W __aeabi_unwind_cpp_pr2
00144bc8 00000418 t _Unwind_VRS_Pop
00144fe0 00000060 t next_unwind_byte
00145040 0000002c t _Unwind_GetGR.constprop.0
0014506c 00000004 t unwind_UCB_from_context
00145070 000003c8 t __gnu_unwind_execute
00145438 00000048 t __gnu_unwind_frame
00145480 00000010 t _Unwind_GetRegionStart
00145490 0000001c t _Unwind_GetLanguageSpecificData
001454ac 00000008 t _Unwind_GetDataRelBase
001454b4 00000008 t _Unwind_GetTextRelBase
001454bc 00000010 T ctime
001454cc 00000014 T __cxa_atexit
001454e0 0000000c T __errno
001454ec 00000034 T exit
00145520 00000040 T __libc_fini_array
00145560 0000007c T __libc_init_array
001455dc 0000001c T isspace
001455f8 0000001c T isxdigit
00145614 0000001c T localtime
00145630 00000364 T localtime_r
00145994 00000024 T __locale_mb_cur_max
001459b8 00000008 T __locale_ctype_ptr_l
001459c0 00000024 T __locale_ctype_ptr
001459e4 00000018 T malloc
001459fc 00000018 T free
00145a14 000007a8 T _malloc_r
001461bc 000002fc T __utf8_mbtowc
001464b8 00000100 T memchr
001465b8 000000fc T memcmp
001466b4 0000010c T memcpy
001467c0 0000013c T memmove
001468fc 00000110 T memset
00146a0c 0000000c T __malloc_lock
00146a18 0000000c T __malloc_unlock
00146a24 00000064 T sprintf
00146a88 00000008 T __seofread
00146a90 000000f0 T strcpy
00146b80 00000158 t iso_year_adjust
00146cd8 00001024 t __strftime
00147cfc 00000050 T strftime
00147d4c 0000005c T strlen
00147da8 000000f8 T strncmp
00147ea0 000000d8 T strncpy
00147f78 00000054 t sulp
00147fd0 00001464 T _strtod_l
00149438 000000b8 T strtof
001494f0 000001bc t _strtol_l.isra.0
001496ac 00000050 T _strtol_r
00149700 00000260 t _strtoull_l.isra.0
00149960 00000050 T _strtoull_r
001499b0 000001d0 t _strtoul_l.isra.0
00149b80 00000050 T _strtoul_r
00149bd0 00000054 T strtoul
00149c24 000074a0 t get_arg
001510c8 00003e2c T _svfprintf_r
00154ef4 00000038 T time
00154f2c 00000218 T __tzcalc_limits
00155144 0000000c T __tz_lock
00155150 0000000c T __tz_unlock
0015515c 00000010 T _tzset_unlocked
0015516c 0000049c T _tzset_unlocked_r
00155608 000000a0 T _vsnprintf_r
001556a8 00000038 T vsnprintf
001556e0 000000a0 T _wcrtomb_r
00155780 00000020 T _wcsrtombs_r
001557a0 000000e8 T __utf8_wctomb
00155888 0000000c T abs
00155894 0000001c T asctime
001558b0 00000078 T asctime_r
00155928 000000f4 T __register_exitproc
00155a1c 00000170 T __call_exitprocs
00155b8c 000001bc t quorem
00155d48 00001224 T _dtoa_r
00156f6c 000000f8 T _malloc_trim_r
00157064 000002e4 T _free_r
00157348 00000104 t rshift
0015744c 000007f8 T __gethex
00157c44 00000060 T __match
00157ca4 00000254 T __hexnan
00157ef8 000000c8 T _findenv_r
00157fc0 00000018 T _getenv_r
00157fd8 0000000c T __gettzinfo
00157fe4 00000280 T gmtime_r
00158264 0000000c T labs
00158270 00000008 T __localeconv_l
00158278 00000024 T _localeconv_r
0015829c 00000088 T _Balloc
00158324 0000001c T _Bfree
00158340 000000d0 T __multadd
00158410 000000e0 T __s2b
001584f0 00000058 T __hi0bits
00158548 0000009c T __lo0bits
001585e4 00000020 T __i2b
00158604 000001d4 T __multiply
001587d8 00000100 T __pow5mult
001588d8 000000e8 T __lshift
001589c0 0000005c T __mcmp
00158a1c 00000168 T __mdiff
00158b84 00000078 T __ulp
00158bfc 000000d0 T __b2d
00158ccc 00000104 T __d2b
00158dd0 00000084 T __ratio
00158e54 00000088 T __copybits
00158edc 00000078 T __any_on
00158f54 0000000c T nanf
00158f60 0000009c T frexp
00158ffc 00000064 T siprintf
00159060 00000074 T siscanf
001590d4 000000c8 T sniprintf
0015919c 000074a0 t get_arg
0016063c 00000188 T __ssprint_r
001607c4 0000295c T _svfiprintf_r
00163120 000000dc T _sungetc_r
001631fc 0000006c T __ssrefill_r
00163268 000000c8 T _sfread_r
00163330 00001d84 T __ssvfiscanf_r
001650b4 000000a4 T __submore
00165158 00000170 T _wcsnrtombs_l
001652c8 00000064 T _wcsnrtombs_r
0016532c 00000090 T _calloc_r
001653bc 0000000c T __env_lock
001653c8 0000000c T __env_unlock
001653d4 00000074 T iswspace
00165448 000001e0 t __jp2uc
00165628 000000c4 T _jp2uc
001656ec 000000b4 T _mbrtowc_r
001657a0 000004d0 T _realloc_r
00165c70 000000cc T __sccl
00165d3c 00000274 t _strtoll_l.isra.0
00165fb0 00000050 T _strtoll_r
00166000 0000002c T _gettimeofday_r
0016602c 00000070 T _sbrk_r
0016609c 00000024 T _exit
001660c0 00000018 T __libc_lock_acquire
001660d8 00000018 T __libc_lock_release
001660f0 00000018 T __libc_lock_acquire_recursive
00166108 00000018 T __libc_lock_release_recursive
00166120 00000028 T __getreent
00166148 T _fini
00166198 000001e8 r CTRPluginFramework::eliminationMode(CTRPluginFramework::MenuEntry*)::buffer1
00166380 0000000c r CTRPluginFramework::eliminationMode(CTRPluginFramework::MenuEntry*)::buffer2
0016638c 00000014 r CTRPluginFramework::eliminationMode(CTRPluginFramework::MenuEntry*)::buffer3
001663a0 0000001c r CTRPluginFramework::eliminationMode(CTRPluginFramework::MenuEntry*)::buffer4
001663c8 00000030 r ._184
00166400 00000058 r CTRPluginFramework::g_OSDPattern
00166458 00000a00 r font
00166e58 00000038 r CTRPluginFramework::stable
00166e90 00000038 r CTRPluginFramework::ktable
00166ec8 0000001c R vtable for CTRPluginFramework::MenuEntryImpl
00166ee4 00000014 R vtable for CTRPluginFramework::MenuFolderImpl
00166ef8 00000030 r ._184
00166f48 00000038 R vtable for CTRPluginFramework::Search32
00166f80 00000038 R vtable for CTRPluginFramework::Search
00166fb8 00000005 r CSWTCH.47
00166fc0 00000014 R vtable for CTRPluginFramework::ARCode
00166fd4 0000002d r ._89
00167004 00000080 r CTRPluginFramework::KeysToString(unsigned long)::keysText
00167084 0000000c r CTRPluginFramework::CommentCodeLine(CTRPluginFramework::ARCode const&)::condstr
00167090 00000008 r CTRPluginFramework::CommentCodeLine(CTRPluginFramework::ARCode const&)::offsets
00167098 00000008 r CTRPluginFramework::CommentCodeLine(CTRPluginFramework::ARCode const&)::data
001670a0 00000008 r CTRPluginFramework::CommentCodeLine(CTRPluginFramework::ARCode const&)::storage
001670a8 0000001c R vtable for CTRPluginFramework::MenuEntryActionReplay
001670c4 00000004 R About15_array_length
001670c8 00000384 r About15_array
0016744c 00000004 R AddFavorite25_array_length
00167450 000009c4 r AddFavorite25_array
00167e14 00000004 R AddFavoriteFilled25_array_length
00167e18 000009c4 r AddFavoriteFilled25_array
001687dc 00000004 R CapsLockOn15_array_length
001687e0 00000384 r CapsLockOn15_array
00168b64 00000004 R CapsLockOnFilled15_array_length
00168b68 00000384 r CapsLockOnFilled15_array
00168eec 00000004 R CheckedCheckbox_array_length
00168ef0 00000384 r CheckedCheckbox_array
00169274 00000004 R ClearSymbol15_array_length
00169278 00000384 r ClearSymbol15_array
001695fc 00000004 R ClearSymbolFilled15_array_length
00169600 00000384 r ClearSymbolFilled15_array
00169984 00000004 R Clipboard25_array_length
00169988 000009c4 r Clipboard25_array
0016a34c 00000004 R ClipboardFilled25_array_length
0016a350 000009c4 r ClipboardFilled25_array
0016ad14 00000004 R CloseWindow20_array_length
0016ad18 00000640 r CloseWindow20_array
0016b358 00000004 R CloseWindowFilled20_array_length
0016b35c 00000640 r CloseWindowFilled20_array
0016b99c 00000004 R Controller15_array_length
0016b9a0 00000384 r Controller15_array
0016bd24 00000004 R Cut25_array_length
0016bd28 000009c4 r Cut25_array
0016c6ec 00000004 R CutFilled25_array_length
0016c6f0 000009c4 r CutFilled25_array
0016d0b4 00000004 R Duplicate25_array_length
0016d0b8 000009c4 r Duplicate25_array
0016da7c 00000004 R DuplicateFilled25_array_length
0016da80 000009c4 r DuplicateFilled25_array
0016e444 00000004 R Edit25_array_length
0016e448 000009c4 r Edit25_array
0016ee0c 00000004 R EditFilled25_array_length
0016ee10 000009c4 r EditFilled25_array
0016f7d4 00000004 R EnterKey15_array_length
0016f7d8 00000384 r EnterKey15_array
0016fb5c 00000004 R EnterKeyFilled15_array_length
0016fb60 00000384 r EnterKeyFilled15_array
0016fee4 00000004 R File15_array_length
0016fee8 00000384 r File15_array
0017026c 00000004 R FolderFilled_array_length
00170270 00000384 r FolderFilled_array
001705f4 00000004 R GameController15_array_length
001705f8 00000384 r GameController15_array
0017097c 00000004 R GameController25_array_length
00170980 000009c4 r GameController25_array
00171344 00000004 R GameControllerFilled25_array_length
00171348 000009c4 r GameControllerFilled25_array
00171d0c 00000004 R Grid15_array_length
00171d10 00000384 r Grid15_array
00172094 00000004 R HandCursor15_array_length
00172098 00000384 r HandCursor15_array
0017241c 00000004 R Info25_array_length
00172420 000009c4 r Info25_array
00172de4 00000004 R InfoFilled25_array_length
00172de8 000009c4 r InfoFilled25_array
001737ac 00000004 R Keyboard25_array_length
001737b0 000009c4 r Keyboard25_array
00174174 00000004 R KeyboardFilled25_array_length
00174178 000009c4 r KeyboardFilled25_array
00174b3c 00000004 R Maintenance15_array_length
00174b40 00000384 r Maintenance15_array
00174ec4 00000004 R More15_array_length
00174ec8 00000384 r More15_array
0017524c 00000004 R Plus25_array_length
00175250 000009c4 r Plus25_array
00175c14 00000004 R PlusFilled25_array_length
00175c18 000009c4 r PlusFilled25_array
001765dc 00000004 R RAM15_array_length
001765e0 00000384 r RAM15_array
00176964 00000004 R Restart15_array_length
00176968 00000384 r Restart15_array
00176cec 00000004 R Rocket40_array_length
00176cf0 00001900 r Rocket40_array
001785f0 00000004 R Save25_array_length
001785f4 000009c4 r Save25_array
00178fb8 00000004 R Search15_array_length
00178fbc 00000384 r Search15_array
00179340 00000004 R Settings15_array_length
00179344 00000384 r Settings15_array
001796c8 00000004 R Shutdown15_array_length
001796cc 00000384 r Shutdown15_array
00179a50 00000004 R Star15_array_length
00179a54 00000384 r Star15_array
00179dd8 00000004 R Trash25_array_length
00179ddc 000009c4 r Trash25_array
0017a7a0 00000004 R TrashFilled25_array_length
0017a7a4 000009c4 r TrashFilled25_array
0017b168 00000004 R UnCheckedCheckbox_array_length
0017b16c 00000384 r UnCheckedCheckbox_array
0017b4f0 00000004 R UserManualFilled15_array_length
0017b4f4 00000384 r UserManualFilled15_array
0017b878 0000001c R vtable for CTRPluginFramework::CheckBox
0017b894 0000001c R vtable for CTRPluginFramework::ComboBox
0017b8b0 0000001c R vtable for CTRPluginFramework::FloatingButton
0017b8cc 0000001c R vtable for CTRPluginFramework::NumericTextBox
0017b8e8 0000001c R vtable for CTRPluginFramework::TextBox
0017b904 0000001c R vtable for CTRPluginFramework::TouchKey
0017b920 00000020 r CTRPluginFramework::HexEditor::_RenderTop()::bytePos
0017b940 00000280 r CTRPluginFramework::_cursorPositions
0017bbc0 00000008 r CTRPluginFramework::HexEditor::_PromptForAddress(int)::msg
0017bbc8 00000048 r CTRPluginFramework::g_ctrpf
0017bc10 00000030 r CTRPluginFramework::g_byme
0017d988 0000001c V vtable for CTRPluginFramework::IconButton<CTRPluginFramework::Window, void>
0017d9a4 0000001c V vtable for CTRPluginFramework::IconButton<CTRPluginFramework::CheckBox, void>
0017db0c 00000014 V vtable for CTRPluginFramework::MenuItem
0017db20 0000001c V vtable for CTRPluginFramework::ToggleButton<CTRPluginFramework::PluginMenuActionReplay, void>
0017db3c 0000001c V vtable for CTRPluginFramework::IconButton<CTRPluginFramework::PluginMenuActionReplay, void>
0017dbac 0000001c V vtable for CTRPluginFramework::CheckedButton<CTRPluginFramework::PluginMenuHome, void>
0017dbc8 0000001c V vtable for CTRPluginFramework::Button<CTRPluginFramework::PluginMenuHome, void>
0017dbe4 0000001c V vtable for CTRPluginFramework::Button<CTRPluginFramework::PluginMenuSearch, void>
0017dc00 0000001c V vtable for CTRPluginFramework::CheckedButton<CTRPluginFramework::PluginMenuSearch, void>
0017ec28 0000001c V vtable for CTRPluginFramework::IconButton<CTRPluginFramework::GuideReader, void>
0017ec4c 0000001c V vtable for CTRPluginFramework::IconButton<CTRPluginFramework::HexEditor, void>
0017edcc 0000001c V vtable for CTRPluginFramework::MenuEntryTools
0017ede8 0000001c V vtable for CTRPluginFramework::IconButton<CTRPluginFramework::PluginMenuHome, void>
0017ee04 0000001c V vtable for CTRPluginFramework::ToggleButton<CTRPluginFramework::PluginMenuHome, void>
0017ee50 0000000c R typeinfo for __gnu_cxx::recursive_init_error
0017ee5c 00000023 R typeinfo name for __gnu_cxx::recursive_init_error
0017ee80 00000014 R vtable for __gnu_cxx::recursive_init_error
0017eeb8 00000008 R typeinfo for __cxxabiv1::__forced_unwind
0017eec0 00000008 R typeinfo for __cxxabiv1::__foreign_exception
0017eec8 0000000c R typeinfo for std::bad_exception
0017eed4 00000008 R typeinfo for std::exception
0017eedc 00000020 R typeinfo name for __cxxabiv1::__forced_unwind
0017eefc 00000024 R typeinfo name for __cxxabiv1::__foreign_exception
0017ef20 00000012 R typeinfo name for std::bad_exception
0017ef34 0000000d R typeinfo name for std::exception
0017ef44 00000014 R vtable for std::bad_exception
0017ef58 0000000c R typeinfo for __cxxabiv1::__si_class_type_info
0017ef64 00000025 R typeinfo name for __cxxabiv1::__si_class_type_info
0017ef8c 0000002c R vtable for __cxxabiv1::__si_class_type_info
0017efb8 00000008 R typeinfo for std::type_info
0017efc0 0000000d R typeinfo name for std::type_info
0017efd0 0000000c R typeinfo for __cxxabiv1::__class_type_info
0017efdc 00000022 R typeinfo name for __cxxabiv1::__class_type_info
0017f000 0000002c R vtable for __cxxabiv1::__class_type_info
0017f214 0000000c R typeinfo for std::bad_alloc
0017f220 0000000d R typeinfo name for std::bad_alloc
0017f230 00000014 R vtable for std::bad_alloc
0017f244 0000000c R typeinfo for std::logic_error
0017f250 0000000c R typeinfo for std::length_error
0017f25c 0000000c R typeinfo for std::out_of_range
0017f268 0000000c R typeinfo for std::invalid_argument
0017f274 00000010 R typeinfo name for std::logic_error
0017f284 00000011 R typeinfo name for std::length_error
0017f298 00000011 R typeinfo name for std::out_of_range
0017f2ac 00000015 R typeinfo name for std::invalid_argument
0017f2c4 00000014 R vtable for std::logic_error
0017f2d8 00000014 R vtable for std::length_error
0017f2ec 00000014 R vtable for std::out_of_range
0017f300 00000014 R vtable for std::invalid_argument
0017f318 00000004 R _global_impure_ptr
0017f360 00000060 R __month_lengths
0017f44c 00000014 r fpi.7439
0017f460 00000014 r fpinan.7475
0017f478 00000028 r tinytens
0017f4e4 00000010 r blanks.8562
0017f4f4 00000010 r zeroes.8563
0017f504 000000fc R _C_time_locale
0017f7cc 00000015 r day_name.6011
0017f7e4 00000024 r mon_name.6012
0017f808 00000101 R _ctype_
0017f91c 00000100 R __hexdig
0017fa20 00000028 R __mprec_bigtens
0017fa48 000000c8 R __mprec_tens
0017fb10 0000000c r p05.7353
0017fb1c 0000006c R __action_table
0017fb88 00000100 R __chclass
0017fc88 0000006c R __state_table
0017fcf4 00000010 r blanks.8541
0017fd04 00000010 r zeroes.8542
0017fd14 00000022 r basefix.8096
0017fd4c 000000bc r a1
0017fe08 000000bc r a2
0017fec4 0000005b r a3
0017ff20 00000070 r a6
0017ff90 000000a2 r a7
00180034 00000040 r a8
00180074 0000172a r b02cf
001817a0 00001a7c r d02f4
00183488 R __exidx_start
001836a8 R __exidx_end
001836a8 00000004 d CTRPluginFramework::stalking(CTRPluginFramework::MenuEntry*)::player
001836ac 00000004 d CTRPluginFramework::sizeChanger(CTRPluginFramework::MenuEntry*)::PlayerSize
001836b0 00000001 d CTRPluginFramework::sizeChanger(CTRPluginFramework::MenuEntry*)::adding
001836b4 00000004 d CTRPluginFramework::sizeChanger(CTRPluginFramework::MenuEntry*)::speed
001836b8 00000001 D CTRPluginFramework::g_keepRunning
001836bc 00000004 D CTRPluginFramework::Preferences::MenuHotkeys
001836c0 00000001 D CTRPluginFramework::Preferences::_bmpCanBeLoaded
001836c4 00000001 D CTRPluginFramework::PrivColor::_format
001836c8 00000004 D CTRPluginFramework::PrivColor::FromFramebuffer
001836cc 00000004 D CTRPluginFramework::PrivColor::ToFramebuffer
001836d0 00000001 d CTRPluginFramework::EventManager::PopEvent(CTRPluginFramework::Event&, bool)::refresh
001836d1 00000001 D CTRPluginFramework::SystemImpl::_language
001836d4 00000004 D g_KProcessPIDOffset
001836d8 00000004 D About15
001836dc 00000004 D AddFavorite25
001836e0 00000004 D AddFavoriteFilled25
001836e4 00000004 D CapsLockOn15
001836e8 00000004 D CapsLockOnFilled15
001836ec 00000004 D CheckedCheckbox
001836f0 00000004 D ClearSymbol15
001836f4 00000004 D ClearSymbolFilled15
001836f8 00000004 D Clipboard25
001836fc 00000004 D ClipboardFilled25
00183700 00000004 D CloseWindow20
00183704 00000004 D CloseWindowFilled20
00183708 00000004 D Controller15
0018370c 00000004 D Cut25
00183710 00000004 D CutFilled25
00183714 00000004 D Duplicate25
00183718 00000004 D DuplicateFilled25
0018371c 00000004 D Edit25
00183720 00000004 D EditFilled25
00183724 00000004 D EnterKey15
00183728 00000004 D EnterKeyFilled15
0018372c 00000004 D File15
00183730 00000004 D FolderFilled
00183734 00000004 D GameController15
00183738 00000004 D GameController25
0018373c 00000004 D GameControllerFilled25
00183740 00000004 D Grid15
00183744 00000004 D HandCursor15
00183748 00000004 D Info25
0018374c 00000004 D InfoFilled25
00183750 00000004 D Keyboard25
00183754 00000004 D KeyboardFilled25
00183758 00000004 D Maintenance15
0018375c 00000004 D More15
00183760 00000004 D Plus25
00183764 00000004 D PlusFilled25
00183768 00000004 D RAM15
0018376c 00000004 D Restart15
00183770 00000004 D Rocket40
00183774 00000004 D Save25
00183778 00000004 D Search15
0018377c 00000004 D Settings15
00183780 00000004 D Shutdown15
00183784 00000004 D Star15
00183788 00000004 D Trash25
0018378c 00000004 D TrashFilled25
00183790 00000004 D UnCheckedCheckbox
00183794 00000004 D UserManualFilled15
00183798 00000001 d CTRPluginFramework::PluginMenuHome::_RenderBottom()::framework
0018379c D __dso_handle
001837a0 00000004 D __cxxabiv1::__unexpected_handler
001837a4 00000004 D __cxxabiv1::__terminate_handler
001837a8 00000001 D __fdlib_version
001837ac 00000004 D _impure_ptr
001837b0 00000460 d impure_data
00183c10 0000016c D __global_locale
00183d7c 00000408 D __malloc_av_
00184184 00000004 D __malloc_sbrk_base
00184188 00000004 D __malloc_trim_threshold
0018418c 0000000c d __malloc_lock_object
00184198 00000004 d __tz_lock_object
0018419c 00000008 D _tzname
001841a4 0000000c D __atexit_lock
001841b0 00000040 d tzinfo
001841f0 00000004 D environ
001841f4 0000000c d __env_lock_object
00184200 a _DYNAMIC
001842d8 a _GLOBAL_OFFSET_TABLE_
001842f0 t __frame_dummy_init_array_entry
001842f0 T __init_array_start
001842f0 B __preinit_array_end
001842f0 B __preinit_array_start
001842f0 D __tdata_lma
001842f0 D __tdata_lma_end
001842f0 D __TMC_END__
0018433c t __do_global_dtors_aux_fini_array_entry
0018433c T __fini_array_start
0018433c T __init_array_end
00184340 T __fini_array_end
00184340 r __rel_dyn_start
0019a9a0 B __c_bss_start
0019a9a0 r __rel_dyn_end
0019a9a0 00000001 b CTRPluginFramework::CountdownMode(CTRPluginFramework::MenuEntry*)::score
0019a9a4 00000004 B CTRPluginFramework::offset
0019a9a8 00000004 B CTRPluginFramework::data
0019a9ac 00000004 b CTRPluginFramework::saveSlotTeleporter(CTRPluginFramework::MenuEntry*)::x
0019a9b0 00000004 b CTRPluginFramework::saveSlotTeleporter(CTRPluginFramework::MenuEntry*)::y
0019a9b4 00000004 b CTRPluginFramework::saveSlotTeleporter(CTRPluginFramework::MenuEntry*)::z
0019a9b8 00000001 b CTRPluginFramework::driveAnywhere(CTRPluginFramework::MenuEntry*)::enabled
0019a9bc 00000004 b CTRPluginFramework::stalking(CTRPluginFramework::MenuEntry*)::active
0019a9c0 00000004 b CTRPluginFramework::stalking(CTRPluginFramework::MenuEntry*)::pointer
0019a9c4 00000001 b CTRPluginFramework::stalking(CTRPluginFramework::MenuEntry*)::held
0019a9c5 00000001 b CTRPluginFramework::sizeChanger(CTRPluginFramework::MenuEntry*)::held
0019a9c6 00000001 b CTRPluginFramework::SetItem(CTRPluginFramework::MenuEntry*)::shown_dialogue
0019a9c7 00000001 b CTRPluginFramework::SetItem(CTRPluginFramework::MenuEntry*)::item
0019a9c8 00000001 b CTRPluginFramework::SetItem(CTRPluginFramework::MenuEntry*)::execute
0019a9c9 00000001 b CTRPluginFramework::CountdownMode(CTRPluginFramework::MenuEntry*)::AddedToScore
0019a9ca 00000001 b CTRPluginFramework::CountdownMode(CTRPluginFramework::MenuEntry*)::AddedToTime
0019a9cb 00000001 b CTRPluginFramework::CountdownMode(CTRPluginFramework::MenuEntry*)::end_race
0019a9cc 00000001 b CTRPluginFramework::SetVR(CTRPluginFramework::MenuEntry*)::shown_dialogue
0019a9d0 00000004 b CTRPluginFramework::SetVR(CTRPluginFramework::MenuEntry*)::vr
0019a9d4 00000001 b CTRPluginFramework::SetVR(CTRPluginFramework::MenuEntry*)::execute
0019a9d8 00000004 B CTRPluginFramework::random
0019a9dc 00000001 b CTRPluginFramework::SetFlag(CTRPluginFramework::MenuEntry*)::error
0019a9de 00000002 b CTRPluginFramework::SetFlag(CTRPluginFramework::MenuEntry*)::flag
0019a9e0 00000001 b CTRPluginFramework::SetFlag(CTRPluginFramework::MenuEntry*)::shown_dialogue
0019a9e1 00000001 b CTRPluginFramework::SetCoordinates(CTRPluginFramework::MenuEntry*)::shown_dialogue
0019a9e4 00000004 b CTRPluginFramework::SetCoordinates(CTRPluginFramework::MenuEntry*)::coordinates
0019a9e8 00000004 B CTRPluginFramework::g_itemPointer
0019a9ec 00000004 B CTRPluginFramework::g_oldRacePointer5D0
0019a9f0 00000004 B CTRPluginFramework::g_oldRacePointer5CC
0019a9f4 00000004 B CTRPluginFramework::g_FNsPointer
0019a9f8 00000004 B CTRPluginFramework::g_raceCondition
0019a9fc 00000004 B CTRPluginFramework::g_racePointer
0019aa00 00000004 B CTRPluginFramework::dataZ
0019aa04 00000004 B CTRPluginFramework::dataY
0019aa08 00000004 B CTRPluginFramework::dataX
0019aa10 00000050 B CTRPluginFramework::QuickMenu::_instance
0019aa60 00000008 B CTRPluginFramework::_sdmcArchive
0019aa68 00000004 B CTRPluginFramework::g_continueGameEvent
0019aa6c 00000004 B __ctru_heap_size
0019aa70 00000004 B g_gspEventThreadPriority
0019aa74 00000004 B CTRPluginFramework::g_keepEvent
0019aa78 00000004 B g_mainThread
0019aa7c 00000004 b onLoadCroLock
0019aa80 00000038 b g_loadCroHook
0019aab8 00000004 B croReturn
0019aabc 00000004 B CTRPluginFramework::g_keepThreadHandle
0019aac0 00000004 B CTRPluginFramework::g_resumeEvent
0019aac8 00004000 b CTRPluginFramework::keepThreadStack
0019eac8 00010000 b CTRPluginFramework::threadStack
001aeac8 00000004 B CTRPluginFramework::Color::Black
001aeacc 00000004 B CTRPluginFramework::Color::Blank
001aead0 00000004 B CTRPluginFramework::Color::Blue
001aead4 00000004 B CTRPluginFramework::Color::BlackGrey
001aead8 00000004 B CTRPluginFramework::Color::Brown
001aeadc 00000004 B CTRPluginFramework::Color::Cyan
001aeae0 00000004 B CTRPluginFramework::Color::DarkGrey
001aeae4 00000004 B CTRPluginFramework::Color::DeepSkyBlue
001aeae8 00000004 B CTRPluginFramework::Color::DimGrey
001aeaec 00000004 B CTRPluginFramework::Color::DodgerBlue
001aeaf0 00000004 B CTRPluginFramework::Color::Gainsboro
001aeaf4 00000004 B CTRPluginFramework::Color::ForestGreen
001aeaf8 00000004 B CTRPluginFramework::Color::Green
001aeafc 00000004 B CTRPluginFramework::Color::Grey
001aeb00 00000004 B CTRPluginFramework::Color::LimeGreen
001aeb04 00000004 B CTRPluginFramework::Color::Magenta
001aeb08 00000004 B CTRPluginFramework::Color::Orange
001aeb0c 00000004 B CTRPluginFramework::Color::Red
001aeb10 00000004 B CTRPluginFramework::Color::Silver
001aeb14 00000004 B CTRPluginFramework::Color::SkyBlue
001aeb18 00000004 B CTRPluginFramework::Color::Turquoise
001aeb1c 00000004 B CTRPluginFramework::Color::Yellow
001aeb20 00000004 b CTRPluginFramework::ConvertToFloat(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, bool)::temp
001aeb28 00000008 b CTRPluginFramework::ConvertToDouble(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, bool)::temp
001aeb30 00000008 b CTRPluginFramework::ConvertToU64(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, bool)::temp
001aeb38 00000002 b CTRPluginFramework::ConvertToU16(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, bool)::temp
001aeb3c 00000004 b CTRPluginFramework::ConvertToU32(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, bool)::temp
001aeb40 00000001 b CTRPluginFramework::ConvertToU8(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, bool)::temp
001aeb44 00000180 b CTRPluginFramework::g_keyName
001aecc4 00000004 b CTRPluginFramework::g_runningInstance
001aecc8 00000004 B CTRPluginFramework::Controller::_keysDown
001aeccc 00000004 B CTRPluginFramework::Controller::_keysHeld
001aecd0 00000004 B CTRPluginFramework::Controller::_keysReleased
001aecd4 00000018 b CTRPluginFramework::_workingDirectory
001aecec 00002002 b CTRPluginFramework::_Path::SdmcUtf16Path(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)::utf16Path
001b0cf0 00000004 B CTRPluginFramework::System::OnAbort
001b0cf8 00000008 B CTRPluginFramework::Time::Zero
001b0d00 000009c4 b CTRPluginFramework::g_rng
001b16c8 00000001 B CTRPluginFramework::Preferences::AutoLoadCheats
001b16c9 00000001 B CTRPluginFramework::Preferences::AutoLoadFavorites
001b16ca 00000001 B CTRPluginFramework::Preferences::AutoSaveCheats
001b16cb 00000001 B CTRPluginFramework::Preferences::AutoSaveFavorites
001b16cc 00000001 B CTRPluginFramework::Preferences::DrawTouchCursor
001b16cd 00000001 B CTRPluginFramework::Preferences::ShowBottomFps
001b16ce 00000001 B CTRPluginFramework::Preferences::ShowTopFps
001b16cf 00000001 B CTRPluginFramework::Preferences::UseFloatingBtn
001b16d0 00000001 B CTRPluginFramework::Preferences::_cheatsAlreadyLoaded
001b16d1 00000001 B CTRPluginFramework::Preferences::_favoritesAlreadyLoaded
001b16d2 00000001 B CTRPluginFramework::Preferences::EcoMemoryMode
001b16d4 00000004 B CTRPluginFramework::Preferences::topBackgroundImage
001b16d8 00000004 B CTRPluginFramework::Preferences::bottomBackgroundImage
001b16e0 00000078 B CTRPluginFramework::Preferences::Settings
001b1758 00000001 B CTRPluginFramework::Preferences::DisplayFilesLoading
001b1759 00000001 B CTRPluginFramework::Preferences::DrawTouchCoord
001b175a 00000001 B CTRPluginFramework::Preferences::InjectBOnMenuClose
001b175c 00000004 b CTRPluginFramework::defaultSysFont
001b1760 00000004 B CTRPluginFramework::g_fontAllocated
001b1764 00000004 b CTRPluginFramework::tileData
001b1768 00000004 b CTRPluginFramework::glyph
001b176c 00000004 B CTRPluginFramework::g_glyphAllocated
001b1770 0000000c B CTRPluginFramework::OSDImpl::RecLock
001b177c 0000000c B CTRPluginFramework::OSDImpl::Notifications[abi:cxx11]
001b1788 00000018 B CTRPluginFramework::OSDImpl::TopScreen
001b17a0 00000018 B CTRPluginFramework::OSDImpl::BottomScreen
001b17b8 00000038 B CTRPluginFramework::OSDImpl::OSDHook
001b17f0 00000004 B CTRPluginFramework::OSDImpl::HookReturn
001b17f4 00000008 B CTRPluginFramework::OSDImpl::OnNewFrameEvent
001b17fc 00000024 B CTRPluginFramework::OSDImpl::FloatingBtn
001b1820 0000000c B CTRPluginFramework::OSDImpl::Callbacks
001b182c 00000004 b CTRPluginFramework::g_second
001b1830 00000010 b CTRPluginFramework::g_fpsClock
001b1840 00000038 B CTRPluginFramework::OSDHook2
001b1878 00000004 B CTRPluginFramework::OSDImpl::FramesToPlay
001b187c 00000001 B CTRPluginFramework::OSDImpl::DrawSaveIcon
001b187d 00000001 B CTRPluginFramework::OSDImpl::MessColors
001b1880 00000001 B CTRPluginFramework::PrivColor::_useClamp
001b1884 00000010 B CTRPluginFramework::PrivColor::_clampArea
001b1894 00000001 B CTRPluginFramework::Renderer::_target
001b1898 00000004 B CTRPluginFramework::Renderer::_screen
001b189c 00000004 b guard variable for CTRPluginFramework::Renderer::EndFrame(bool)::background
001b18a0 00000004 b CTRPluginFramework::Renderer::EndFrame(bool)::background
001b18a4 00000004 B CTRPluginFramework::RendererPriv::g_customColor
001b18a8 00000028 B CTRPluginFramework::Window::BottomWindow
001b18d0 00000028 B CTRPluginFramework::Window::TopWindow
001b18f8 00000010 b CTRPluginFramework::KeyboardImpl::_RenderTop()::background2
001b1908 00000010 b CTRPluginFramework::KeyboardImpl::_RenderTop()::background1
001b1918 00000004 b guard variable for CTRPluginFramework::KeyboardImpl::_RenderTop()::background1
001b191c 00000004 b guard variable for CTRPluginFramework::KeyboardImpl::_RenderTop()::background2
001b1920 00000004 b guard variable for CTRPluginFramework::KeyboardImpl::_RenderBottom()::background
001b1924 00000010 b CTRPluginFramework::KeyboardImpl::_RenderBottom()::background
001b1934 00000004 b guard variable for CTRPluginFramework::KeyboardImpl::_RenderBottom()::background2
001b1938 00000010 b CTRPluginFramework::KeyboardImpl::_RenderBottom()::background2
001b1948 00000004 b guard variable for CTRPluginFramework::KeyboardImpl::_RenderBottom()::clampArea
001b194c 00000010 b CTRPluginFramework::KeyboardImpl::_RenderBottom()::clampArea
001b195c 00000004 b guard variable for CTRPluginFramework::KeyboardImpl::_CheckKeys()::backspacetimer
001b1960 00000008 b CTRPluginFramework::KeyboardImpl::_CheckKeys()::backspacetimer
001b1968 00000004 b guard variable for CTRPluginFramework::KeyboardImpl::_CheckKeys()::FastModeWaitTime
001b1970 00000008 b CTRPluginFramework::KeyboardImpl::_CheckKeys()::FastModeWaitTime
001b1978 00000004 b guard variable for CTRPluginFramework::KeyboardImpl::_CheckKeys()::FastClearingFrame
001b1980 00000008 b CTRPluginFramework::KeyboardImpl::_CheckKeys()::FastClearingFrame
001b1988 00000004 b CTRPluginFramework::KeyboardImpl::_CheckKeys()::backspaceFastMode
001b198c 0000000c B CTRPluginFramework::KeyboardImpl::_QwertyKeys
001b1998 0000000c B CTRPluginFramework::KeyboardImpl::_DecimalKeys
001b19a4 0000000c B CTRPluginFramework::KeyboardImpl::_HexaDecimalKeys
001b19b0 00000004 b guard variable for CTRPluginFramework::KeyboardImpl::_ProcessEvent(CTRPluginFramework::Event&)::inputClock
001b19b8 00000008 b CTRPluginFramework::KeyboardImpl::_ProcessEvent(CTRPluginFramework::Event&)::inputClock
001b19c0 00000004 b guard variable for CTRPluginFramework::KeyboardImpl::_ProcessEvent(CTRPluginFramework::Event&)::buttons
001b19c4 00000010 b CTRPluginFramework::KeyboardImpl::_ProcessEvent(CTRPluginFramework::Event&)::buttons
001b19d4 00000004 B CTRPluginFramework::MenuItem::_uidCounter
001b19d8 00000004 b CTRPluginFramework::__pmARinstance
001b19dc 00000004 b CTRPluginFramework::g_radioId
001b19e0 00000004 B CTRPluginFramework::PluginMenuExecuteLoop::_firstInstance
001b19e4 00000004 B CTRPluginFramework::PluginMenuExecuteLoop::_builtinLock
001b19e8 00000004 B CTRPluginFramework::PluginMenuExecuteLoop::_arLock
001b19f0 00000004 B CTRPluginFramework::PluginMenuImpl::_runningInstance
001b19f4 00000004 b CTRPluginFramework::PluginMenuImpl::Run()::count
001b19f8 00000004 b guard variable for CTRPluginFramework::PluginMenuImpl::Run()::konamicode
001b1a00 00000020 b CTRPluginFramework::PluginMenuImpl::Run()::konamicode
001b1a20 00000010 b CTRPluginFramework::PluginMenuSearch::_ShowProgressWindow() const::background
001b1a30 00000010 b CTRPluginFramework::PluginMenuSearch::_ShowProgressWindow() const::background2
001b1a40 00000004 b guard variable for CTRPluginFramework::PluginMenuSearch::_ShowProgressWindow() const::background
001b1a44 00000004 b guard variable for CTRPluginFramework::PluginMenuSearch::_ShowProgressWindow() const::background2
001b1a48 00000004 b guard variable for CTRPluginFramework::PluginMenuSearch::_ShowProgressWindow() const::timer
001b1a50 00000008 b CTRPluginFramework::PluginMenuSearch::_ShowProgressWindow() const::timer
001b1a58 00000004 b CTRPluginFramework::PluginMenuSearch::_ShowProgressWindow() const::phase
001b1a60 00000004 b CTRPluginFramework::g_mode
001b1a64 00000004 b CTRPluginFramework::g_HookMode
001b1a68 00000004 B CTRPluginFramework::g_index
001b1a6c 00000004 B CTRPluginFramework::g_OpenFileLock
001b1a70 00000004 B CTRPluginFramework::g_filenames
001b1a74 00000004 b CTRPluginFramework::g_buffer2
001b1a78 00000030 b CTRPluginFramework::g_hookExportFile
001b1aa8 00000038 b CTRPluginFramework::g_FsTryOpenFileHook
001b1ae0 00000004 B CTRPluginFramework::g_FsTryOpenFileAddress
001b1ae4 00000004 b CTRPluginFramework::g_buffer
001b1ae8 00000004 b CTRPluginFramework::PluginMenuTools::_ProcessEvent(CTRPluginFramework::Event&)::mode
001b1aec 00000004 b guard variable for CTRPluginFramework::PluginMenuTools::_RenderBottom()::xpos
001b1af0 00000004 b CTRPluginFramework::PluginMenuTools::_RenderBottom()::xpos
001b1af8 00000004 b guard variable for CTRPluginFramework::SearchMenu::ProcessEvent(std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >&, CTRPluginFramework::Time&)::_fastScroll
001b1b00 00000008 b CTRPluginFramework::SearchMenu::ProcessEvent(std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >&, CTRPluginFramework::Time&)::_fastScroll
001b1b08 00000004 b guard variable for CTRPluginFramework::SearchMenu::ProcessEvent(std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >&, CTRPluginFramework::Time&)::_startFastScroll
001b1b10 00000008 b CTRPluginFramework::SearchMenu::ProcessEvent(std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >&, CTRPluginFramework::Time&)::_startFastScroll
001b1b18 00000004 b guard variable for CTRPluginFramework::SubMenu::Draw()::background
001b1b1c 00000010 b CTRPluginFramework::SubMenu::Draw()::background
001b1b2c 00000004 B CTRPluginFramework::_pool
001b1b30 00000001 b CTRPluginFramework::EventManager::ProcessEvents()::isTouching
001b1b32 00000004 b CTRPluginFramework::EventManager::ProcessEvents()::firstTouch
001b1b38 00000004 B CTRPluginFramework::Heap::__ctrpf_heap
001b1b3c 00000004 B CTRPluginFramework::Heap::__ctrpf_heap_size
001b1b40 00000008 b CTRPluginFramework::Heap::g_heapPool
001b1b48 0000000c b sAddrMap
001b1b58 00000004 B CTRPluginFramework::ProcessImpl::_kProcess
001b1b5c 00000064 B CTRPluginFramework::ProcessImpl::_kCodeSet
001b1bc0 00000004 B CTRPluginFramework::ProcessImpl::_processID
001b1bc4 00000004 B CTRPluginFramework::ProcessImpl::_kProcessState
001b1bc8 00000004 B CTRPluginFramework::ProcessImpl::mmuTableSize
001b1bcc 00000004 B CTRPluginFramework::ProcessImpl::mmuTable
001b1bd0 00000008 B CTRPluginFramework::ProcessImpl::_processName
001b1bd8 00000008 B CTRPluginFramework::ProcessImpl::_titleID
001b1be0 00000004 B CTRPluginFramework::ProcessImpl::_processHandle
001b1be4 00000004 B CTRPluginFramework::ProcessImpl::_mainThreadHandle
001b1be8 0000000c B CTRPluginFramework::ProcessImpl::FrameLock
001b1bf4 00000004 B CTRPluginFramework::ProcessImpl::FrameEvent
001b1bf8 00000004 B CTRPluginFramework::ProcessImpl::_isPaused
001b1bfc 00000001 B CTRPluginFramework::ProcessImpl::_isAcquiring
001b1c00 00000038 b CTRPluginFramework::_topBuf
001b1c38 00000004 B CTRPluginFramework::ScreenImpl::Top
001b1c3c 00000038 b CTRPluginFramework::_botBuf
001b1c74 00000004 B CTRPluginFramework::ScreenImpl::Bottom
001b1c78 00000001 B CTRPluginFramework::SystemImpl::_isInit
001b1c79 00000001 B CTRPluginFramework::SystemImpl::_isNew3DS
001b1c7c 00000004 B CTRPluginFramework::SystemImpl::_IOBaseLCD
001b1c80 00000004 B CTRPluginFramework::SystemImpl::_IOBasePAD
001b1c84 00000004 B CTRPluginFramework::SystemImpl::_IOBasePDC
001b1c88 00000004 B CTRPluginFramework::SystemImpl::CFWVersion
001b1c8c 00000004 B CTRPluginFramework::SystemImpl::RosalinaHotkey
001b1c90 00000001 B CTRPluginFramework::SystemImpl::IsLoaderNTR
001b1c94 0000000c B CTRPluginFramework::g_codeTypes
001b1ca0 00000001 b CTRPluginFramework::g_condAgainstData
001b1ca1 00000001 b CTRPluginFramework::g_newCondDataToggle
001b1ca4 00000004 b CTRPluginFramework::__arCodeEditor
001b1ca8 00000004 b guard variable for CTRPluginFramework::ARCodeEditor::_ReloadCodeLines()::tempar
001b1cac 0000000c b CTRPluginFramework::ARCodeEditor::_ReloadCodeLines()::tempar
001b1cb8 00000001 b CTRPluginFramework::ARCodeEditor::operator()(std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >&)::isInHexEditor
001b1cbc 00000004 b guard variable for CTRPluginFramework::ActionReplay_ProcessString(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, bool)::colors
001b1cc0 0000000c b CTRPluginFramework::ActionReplay_ProcessString(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, bool)::colors
001b1ccc 00000001 B CTRPluginFramework::g_heapError
001b1cd0 00000004 b cfguRefCount
001b1cd4 00000004 b cfguHandle
001b1cd8 00000004 b sharedFontAddr
001b1cdc 00000004 b srvRefCount
001b1ce0 00000004 b srv2Handle
001b1ce4 00000004 b arbiter
001b1ce8 00000004 b acRefCount
001b1cec 00000004 b acHandle
001b1cf0 00000004 b amRefCount
001b1cf4 00000004 b amHandle
001b1cf8 0000000c b aptFirstHook
001b1d04 00000004 b aptLockHandle
001b1d08 00000004 b serviceName.7503
001b1d0c 00000004 b aptMessageFunc
001b1d10 00000004 b aptMessageFuncData
001b1d14 0000000c b aptEvents
001b1d20 00000001 b aptHomeButtonState
001b1d24 00000004 b aptRefCount
001b1d28 00000008 b aptSleepEvent
001b1d30 00000004 b aptEventHandlerThread
001b1d34 00000001 b flagInit.7855
001b1d35 00000001 b flagValue.7856
001b1d38 00001000 b aptParameters
001b2d38 00000004 b fsuHandle
001b2d40 00000080 b fsExemptArchives
001b2dc0 00000004 b fsuRefCount
001b2dc4 00000001 B fs
001b2dc8 00000004 b gspEventData
001b2dcc 00000038 b gspEvents
001b2e04 0000001c b gspEventCounts
001b2e20 00000001 b gspRunEvents
001b2e24 00000004 b gspRefCount
001b2e28 00000004 b gfxSharedMemory
001b2e2c 00000001 b gfxThreadID
001b2e2d 00001000 b gspThreadEventStack
001b3e30 00000004 b hidRefCount
001b3e34 00000004 b kOld
001b3e38 00000004 b kHeld
001b3e3c 00000004 b cPos
001b3e40 00000004 b tPos
001b3e44 00000006 b aVec
001b3e4a 00000006 b gRate
001b3e50 00000004 b kDown
001b3e54 00000004 b kUp
001b3e58 00000004 b irrstRefCount
001b3e5c 00000004 b kHeld
001b3e60 00000004 b csPos
001b3e64 00000004 B _tls_size
001b3e68 b saved_stack
001b3e70 00000004 b guard variable for CTRPluginFramework::LineWriter::endl[abi:cxx11]()::end
001b3e74 00000018 b CTRPluginFramework::LineWriter::endl[abi:cxx11]()::end
001b3e8c 00000004 b CTRPluginFramework::__converter
001b3e90 00000004 b guard variable for CTRPluginFramework::GuideReader::Draw()::background
001b3e94 00000010 b CTRPluginFramework::GuideReader::Draw()::background
001b3ea8 00000004 b guard variable for CTRPluginFramework::HexEditor::_ProcessEvent(CTRPluginFramework::Event&)::timer
001b3eb0 00000008 b CTRPluginFramework::HexEditor::_ProcessEvent(CTRPluginFramework::Event&)::timer
001b3eb8 00000004 B CTRPluginFramework::__g_hexEditor
001b3ebc 00000004 b guard variable for CTRPluginFramework::HexEditor::_PromptForAddress(int)::background
001b3ec0 00000010 b CTRPluginFramework::HexEditor::_PromptForAddress(int)::background
001b3ed0 00000001 b CTRPluginFramework::HexEditor::operator()(std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >&)::keysAreDisabled
001b3ed8 00000004 b CTRPluginFramework::PluginMenuHome::_showStarredBtn_OnClick()::bak
001b3edc 00000004 b guard variable for CTRPluginFramework::PluginMenuHome::_RenderBottom()::creditClock
001b3ee0 00000008 b CTRPluginFramework::PluginMenuHome::_RenderBottom()::creditClock
001b3ee8 00000004 b CTRPluginFramework::g_ctrpfString
001b3eec 00000004 b CTRPluginFramework::g_bymeString
001b3ef0 00000004 b guard variable for CTRPluginFramework::PluginMenuHome::_ProcessEvent(CTRPluginFramework::Event&)::fastScroll
001b3ef8 00000008 b CTRPluginFramework::PluginMenuHome::_ProcessEvent(CTRPluginFramework::Event&)::fastScroll
001b3f00 00000004 b guard variable for CTRPluginFramework::PluginMenuHome::_ProcessEvent(CTRPluginFramework::Event&)::inputClock
001b3f08 00000008 b CTRPluginFramework::PluginMenuHome::_ProcessEvent(CTRPluginFramework::Event&)::inputClock
001b3f10 00000004 b CTRPluginFramework::PluginMenuHome::_ProcessEvent(CTRPluginFramework::Event&)::last
001b3f14 00000004 B CTRPluginFramework::ARHandler::ActiveData
001b3f18 00000001 B CTRPluginFramework::ARHandler::ExitCodeImmediately
001b3f1c 00000008 B CTRPluginFramework::ARHandler::Offset
001b3f24 00000004 B CTRPluginFramework::ARHandler::ActiveOffset
001b3f28 00000010 B CTRPluginFramework::ARHandler::Data
001b3f38 00000008 B CTRPluginFramework::ARHandler::Storage
001b3f40 00000001 b CTRPluginFramework::ToggleFloat
001b3f44 00000008 b sMappablePool
001b3f4c 0000000c b sAddrMap
001b3f58 b completed.7759
001b3f5c b object.7764
001b3f74 0000000c b eh_globals
001b3f80 00000010 b (anonymous namespace)::emergency_pool
001b3f90 00000010 V std::string::_Rep::_S_empty_rep_storage
001b3fa0 00000004 b (anonymous namespace)::__new_handler
001b3fa4 00000028 B __malloc_current_mallinfo
001b3fcc 00000004 B __malloc_max_sbrked_mem
001b3fd0 00000004 B __malloc_max_total_mem
001b3fd4 00000004 B __malloc_top_pad
001b3fd8 0000000b b __tzname_dst
001b3fe4 0000000b b __tzname_std
001b3ff0 00000004 b prev_tzenv
001b3ff4 00000004 B _daylight
001b3ff8 00000004 B _timezone
001b3ffc 00000004 b initial_env
001b4000 00000004 b heap_start.7089
001b4004 00000004 B fake_heap_end
001b4008 00000004 B fake_heap_start
001b400c 00000038 B __syscalls
001b4044 00000004 B g_KProcessHandleDataOffset
001b4048 00000080 B g_kernelParams
001b40c8 00000004 B g_sharedFont
001b40cc 00000004 B charPerSheet
001b40d0 00000004 B gspEvent
001b40d4 00000004 B gspGpuHandle
001b40d8 00000004 B gspSharedMemHandle
001b40dc 00000004 B gspThreadEventHandle
001b40e0 00000004 B hidMemHandle
001b40e4 00000004 B hidHandle
001b40e8 00000014 B hidEvents
001b40fc 00000004 B hidSharedMem
001b4100 00000004 B irrstMemHandle
001b4104 00000004 B irrstEvent
001b4108 00000004 B irrstHandle
001b410c 00000004 B irrstSharedMem
001b4110 00000004 B __ctru_linear_heap
001b4114 00000004 B __tmp
001b4118 00000004 B __ctru_linear_heap_size
001b411c 00000004 B __system_retAddr
001b4120 00000004 B __ctru_heap
001b4124 B __c_bss_end
001b4124 A __end__
001b4124 B __tls_end
001b4124 B __tls_start
