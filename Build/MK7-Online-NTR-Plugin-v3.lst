         w __deregister_frame_info
         w __gnu_Unwind_Find_exidx
         w __register_frame_info
         w _ITM_deregisterTMCloneTable
         w _ITM_registerTMCloneTable
00000000 a shift
00000000 a shift
00100000 T __start__
00100000 T _start
00100028 t relocNotFinished
00100044 t notRelativeEntry
00100088 t ClearMem
0010009c t ClrLoop
001000c4 T _init
001000e0 T dispatchArm11KernelCmd
001000f4 t arm11kMemcpy
00100104 t _memcpy
0010011c t loc_108230
00100124 t GetKprocessFromHandle
00100148 t loc_10825C
0010014c t GetCurrentKprocess
0010015c t test4
00100160 t SetCurrentKprocess
00100184 t SetKProcessID
001001ac t loc_1082AC
001001b4 t GetKProcessState
001001c0 t ReadCTXID
001001d0 t exit
001001d4 T executeKernelCmd
001001f0 T initSystem
001001f8 T initLib
0010021c T __ctru_exit
00100238 t .udivsi3_skip_div0_test
00100238 t __aeabi_uidiv
00100238 000001ec T __udivsi3
00100424 00000020 t __aeabi_uidivmod
00100444 t __aeabi_idiv
00100444 00000220 T __divsi3
0010044c t .divsi3_skip_div0_test
00100664 00000020 t __aeabi_idivmod
00100684 00000004 t __aeabi_idiv0
00100684 00000004 t __aeabi_ldiv0
00100688 0000019c T __aeabi_frsub
00100690 00000194 T __aeabi_fsub
00100690 00000194 T __subsf3
00100694 00000190 T __addsf3
00100694 00000190 T __aeabi_fadd
00100824 00000028 T __aeabi_ui2f
00100824 00000028 T __floatunsisf
0010082c 00000020 T __aeabi_i2f
0010082c 00000020 T __floatsisf
0010084c 0000008c t __aeabi_ul2f
0010084c 0000008c T __floatundisf
0010085c 0000007c t __aeabi_l2f
0010085c 0000007c T __floatdisf
001008d8 t __aeabi_ldivmod
001009ac 00000014 T __restore_core_regs
001009ac 00000014 t restore_core_regs
001009c0 t __gnu_Unwind_Restore_VFP
001009c8 t __gnu_Unwind_Save_VFP
001009d0 t __gnu_Unwind_Restore_VFP_D
001009d8 t __gnu_Unwind_Save_VFP_D
001009e0 t __gnu_Unwind_Restore_VFP_D_16_to_31
001009e8 t __gnu_Unwind_Save_VFP_D_16_to_31
001009f0 t __gnu_Unwind_Restore_WMMXD
00100a34 t __gnu_Unwind_Save_WMMXD
00100a78 t __gnu_Unwind_Restore_WMMXC
00100a8c t __gnu_Unwind_Save_WMMXC
00100aa0 00000024 T ___Unwind_RaiseException
00100aa0 00000024 t _Unwind_RaiseException
00100ac4 00000024 T ___Unwind_Resume
00100ac4 00000024 t _Unwind_Resume
00100ae8 00000024 T ___Unwind_Resume_or_Rethrow
00100ae8 00000024 t _Unwind_Resume_or_Rethrow
00100b0c 00000024 T ___Unwind_ForcedUnwind
00100b0c 00000024 T _Unwind_ForcedUnwind
00100b30 00000024 T ___Unwind_Backtrace
00100b30 00000024 T _Unwind_Backtrace
00100b68 00000390 T strcmp
00100ef0 t __aeabi_uldivmod
00100f2c t deregister_tm_clones
00100f58 t register_tm_clones
00100f90 t __do_global_dtors_aux
00100fd4 t frame_dummy
00101008 000000b0 t CTRPluginFramework::GetRacePointer() [clone .part.6]
001010b8 0000003c t CTRPluginFramework::GetFNsPointer() [clone .part.7]
001010f4 00000068 t CTRPluginFramework::GetOldPointer5CC() [clone .part.8]
0010115c 00000064 t CTRPluginFramework::GetOldPointer5D0() [clone .part.9]
001011c0 00000090 t CTRPluginFramework::GetItemPointer() [clone .part.10]
00101250 0000008c T CTRPluginFramework::IsInRace()
001012dc 00000070 T CTRPluginFramework::writeItem(unsigned long)
0010134c 000000c4 T CTRPluginFramework::writeSpeed(unsigned long)
00101410 00000048 T CTRPluginFramework::writeVR(unsigned long)
00101458 0000004c T CTRPluginFramework::writeLocation(unsigned long)
001014a4 00000064 T CTRPluginFramework::writeFlag(unsigned short)
00101508 00000040 T CTRPluginFramework::invincible(CTRPluginFramework::MenuEntry*)
00101548 00000040 T CTRPluginFramework::alwaysStarPower(CTRPluginFramework::MenuEntry*)
00101588 0000003c T CTRPluginFramework::trickAnywhere(CTRPluginFramework::MenuEntry*)
001015c4 00000040 T CTRPluginFramework::alwaysBlackKart(CTRPluginFramework::MenuEntry*)
00101604 0000003c T CTRPluginFramework::alwaysShocked(CTRPluginFramework::MenuEntry*)
00101640 00000004 T CTRPluginFramework::alwaysCrushed(CTRPluginFramework::MenuEntry*)
00101644 00000028 T CTRPluginFramework::instantMT(CTRPluginFramework::MenuEntry*)
0010166c 00000014 T CTRPluginFramework::hugeBunnyhop(CTRPluginFramework::MenuEntry*)
00101680 00000014 T CTRPluginFramework::fastReverse(CTRPluginFramework::MenuEntry*)
00101694 00000068 T CTRPluginFramework::noCountdown(CTRPluginFramework::MenuEntry*)
001016fc 0000004c T CTRPluginFramework::moonjump(CTRPluginFramework::MenuEntry*)
00101748 000000b4 T CTRPluginFramework::saveSlotTeleporter(CTRPluginFramework::MenuEntry*)
001017fc 00000054 T CTRPluginFramework::maxTimer(CTRPluginFramework::MenuEntry*)
00101850 00000074 T CTRPluginFramework::waterEverywhere(CTRPluginFramework::MenuEntry*)
001018c4 000000f4 T CTRPluginFramework::driveAnywhere(CTRPluginFramework::MenuEntry*)
001019b8 000002d8 T CTRPluginFramework::stalking(CTRPluginFramework::MenuEntry*)
00101c90 000000dc T CTRPluginFramework::cpuBrawl(CTRPluginFramework::MenuEntry*)
00101d6c 00000198 T CTRPluginFramework::TouchCode(CTRPluginFramework::MenuEntry*)
00101f04 00000010 T CTRPluginFramework::fastBlueShell(CTRPluginFramework::MenuEntry*)
00101f14 00000010 T CTRPluginFramework::stoppedBlueShell(CTRPluginFramework::MenuEntry*)
00101f24 00000010 T CTRPluginFramework::fastGreenShell(CTRPluginFramework::MenuEntry*)
00101f34 00000010 T CTRPluginFramework::stoppedGreenShell(CTRPluginFramework::MenuEntry*)
00101f44 0000005c T CTRPluginFramework::dropMushrooms(CTRPluginFramework::MenuEntry*)
00101fa0 0000004c T CTRPluginFramework::bulletControl(CTRPluginFramework::MenuEntry*)
00101fec 00000084 T CTRPluginFramework::disableStarMusic(CTRPluginFramework::MenuEntry*)
00102070 00000070 T CTRPluginFramework::bulletSpeed(CTRPluginFramework::MenuEntry*)
001020e0 00000144 T CTRPluginFramework::blueShellRide(CTRPluginFramework::MenuEntry*)
00102224 00000118 T CTRPluginFramework::itemWheel(CTRPluginFramework::MenuEntry*)
0010233c 000000ac T CTRPluginFramework::instantAcceleration(CTRPluginFramework::MenuEntry*)
001023e8 000000b4 T CTRPluginFramework::instantBackAcceleration(CTRPluginFramework::MenuEntry*)
0010249c 0000005c T CTRPluginFramework::instantStop(CTRPluginFramework::MenuEntry*)
001024f8 0000000c T CTRPluginFramework::TwoHundredCC(CTRPluginFramework::MenuEntry*)
00102504 0000000c T CTRPluginFramework::FiveHundredCC(CTRPluginFramework::MenuEntry*)
00102510 00000118 T CTRPluginFramework::eliminationMode(CTRPluginFramework::MenuEntry*)
00102628 00000064 T CTRPluginFramework::disableFirstPersonView(CTRPluginFramework::MenuEntry*)
0010268c 000000ec T CTRPluginFramework::vrExtender(CTRPluginFramework::MenuEntry*)
00102778 00000104 T CTRPluginFramework::SetVR(CTRPluginFramework::MenuEntry*)
0010287c 00000088 T CTRPluginFramework::randomVR(CTRPluginFramework::MenuEntry*)
00102904 000000b4 T CTRPluginFramework::unlockEverything(CTRPluginFramework::MenuEntry*)
001029b8 00000048 T CTRPluginFramework::NoDC(CTRPluginFramework::MenuEntry*)
00102a00 0000005c T CTRPluginFramework::fastGame(CTRPluginFramework::MenuEntry*)
00102a5c 0000020c T CTRPluginFramework::SetFlag(CTRPluginFramework::MenuEntry*)
00102c68 000000d0 T CTRPluginFramework::SetCoordinates(CTRPluginFramework::MenuEntry*)
00102d38 000000a0 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(char const*, std::allocator<char> const&) [clone .isra.15]
00102dd8 00000004 T CTRPluginFramework::PatchProcess(CTRPluginFramework::FwkSettings&)
00102ddc 00001674 T CTRPluginFramework::main()
00104450 00000030 T CTRPluginFramework::HoldKey::HoldKey(unsigned long, CTRPluginFramework::Time)
00104450 00000030 T CTRPluginFramework::HoldKey::HoldKey(unsigned long, CTRPluginFramework::Time)
00104480 000000a0 T CTRPluginFramework::QuickMenu::~QuickMenu()
00104480 000000a0 T CTRPluginFramework::QuickMenu::~QuickMenu()
00104520 000000b0 t void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct<char*>(char*, char*, std::forward_iterator_tag) [clone .isra.47]
00104520 000000b0 t void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct<char const*>(char const*, char const*, std::forward_iterator_tag) [clone .isra.66]
001045d0 000000cc T CTRPluginFramework::QuickMenu::QuickMenu(unsigned long)
001045d0 000000cc T CTRPluginFramework::QuickMenu::QuickMenu(unsigned long)
0010469c 000002a8 W void std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::_M_realloc_insert<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&>(__gnu_cxx::__normal_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
00104944 00000034 t _GLOBAL__sub_I__ZN18CTRPluginFramework13QuickMenuItemC2ERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEENS0_8ItemTypeE
00104978 00000424 T CTRPluginFramework::KeepThreadMain(void*)
00104d9c 00000038 T onLoadCro
00104dd4 00000164 T CTRPluginFramework::Initialize()
00104f38 00000098 T CTRPluginFramework::ThreadExit()
00104fd0 00000060 T abort
00105030 00000024 T CTRPluginFramework::ThreadInit(void*)
00105054 00000068 T LaunchMainThread
001050bc 0000000c t _GLOBAL__sub_I_g_mainThread
001050c8 00000018 T CTRPluginFramework::Color::Color(unsigned char, unsigned char, unsigned char, unsigned char)
001050c8 00000018 T CTRPluginFramework::Color::Color(unsigned char, unsigned char, unsigned char, unsigned char)
001050e0 00000020 T CTRPluginFramework::Color::Color(unsigned long)
001050e0 00000020 T CTRPluginFramework::Color::Color(unsigned long)
00105100 00000008 T CTRPluginFramework::Color::ToU32() const
00105108 00000120 T CTRPluginFramework::Color::Fade(double)
00105228 00000040 T CTRPluginFramework::Color::operator<=(CTRPluginFramework::Color const&) const
00105268 00000080 T CTRPluginFramework::Color::operator*(CTRPluginFramework::Color const&) const
001052e8 000001d8 T CTRPluginFramework::Color::Blend(CTRPluginFramework::Color const&, CTRPluginFramework::Color::BlendMode) const
001054c0 000001cc t _GLOBAL__sub_I__ZN18CTRPluginFramework5Color5BlackE
0010568c 00000080 T CTRPluginFramework::OSD::Notify(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, CTRPluginFramework::Color, CTRPluginFramework::Color)
0010570c 00000004 T CTRPluginFramework::OSD::TryLock()
00105710 00000004 T CTRPluginFramework::OSD::Unlock()
00105714 000000c4 T CTRPluginFramework::ConvertToFloat(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, bool)
001057d8 000000a8 T CTRPluginFramework::stou32(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, unsigned long&)
00105880 00000050 T CTRPluginFramework::Keyboard::Keyboard(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
00105880 00000050 T CTRPluginFramework::Keyboard::Keyboard(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
001058d0 00000068 T CTRPluginFramework::Keyboard::Keyboard(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&)
001058d0 00000068 T CTRPluginFramework::Keyboard::Keyboard(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&)
00105938 0000002c T CTRPluginFramework::Keyboard::~Keyboard()
00105938 0000002c T CTRPluginFramework::Keyboard::~Keyboard()
00105964 00000008 T CTRPluginFramework::Keyboard::IsHexadecimal(bool)
0010596c 00000008 T CTRPluginFramework::Keyboard::SetCompareCallback(bool (*)(void const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)) const
00105974 0000001c T CTRPluginFramework::Keyboard::Populate(std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&)
00105990 00000028 T CTRPluginFramework::Keyboard::Open() const
001059b8 00000078 T CTRPluginFramework::Keyboard::Open(float&) const
00105a30 000000b0 T CTRPluginFramework::Keyboard::Open(float&, float) const
00105ae0 00000054 T CTRPluginFramework::Keyboard::Open(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&) const
00105b34 00000068 T CTRPluginFramework::Keyboard::Open(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const
00105b9c 0000009c W unsigned long __gnu_cxx::__stoa<unsigned long, unsigned long, char, int>(unsigned long (*)(char const*, char**, int), char const*, char const*, unsigned int*, int)
00105c38 0000008c T CTRPluginFramework::ConvertToU16(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, bool)
00105cc4 000000a8 T CTRPluginFramework::Keyboard::Open(unsigned short&) const
00105d6c 000000e8 T CTRPluginFramework::Keyboard::Open(unsigned short&, unsigned short) const
00105e54 0000008c T CTRPluginFramework::ConvertToU32(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, bool)
00105ee0 000000a8 T CTRPluginFramework::Keyboard::Open(unsigned long&) const
00105f88 000000e8 T CTRPluginFramework::Keyboard::Open(unsigned long&, unsigned long) const
00106070 0000008c T CTRPluginFramework::ConvertToU8(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, bool)
001060fc 000000a8 T CTRPluginFramework::Keyboard::Open(unsigned char&) const
001061a4 000000e8 T CTRPluginFramework::Keyboard::Open(unsigned char&, unsigned char) const
0010628c 0000004c T CTRPluginFramework::MenuEntry::MenuEntry(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, void (*)(CTRPluginFramework::MenuEntry*), std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
0010628c 0000004c T CTRPluginFramework::MenuEntry::MenuEntry(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, void (*)(CTRPluginFramework::MenuEntry*), std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
001062d8 00000030 T CTRPluginFramework::MenuEntry::~MenuEntry()
001062d8 00000030 T CTRPluginFramework::MenuEntry::~MenuEntry()
00106308 00000008 T CTRPluginFramework::MenuEntry::RefreshNote() const
00106310 00000028 t __tcf_0
00106338 00000078 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(char const*, std::allocator<char> const&) [clone .isra.40]
001063b0 00000008 T CTRPluginFramework::Hotkey::operator=(unsigned long)
001063b8 00000080 T CTRPluginFramework::Hotkey::AskForKeys()
00106438 0000007c T CTRPluginFramework::KeysToString[abi:cxx11](unsigned long)
001064b4 000000d8 T CTRPluginFramework::Hotkey::ToString[abi:cxx11](bool) const
0010658c 0000001c T CTRPluginFramework::HotkeyManager::HotkeyManager(CTRPluginFramework::MenuEntry*)
0010658c 0000001c T CTRPluginFramework::HotkeyManager::HotkeyManager(CTRPluginFramework::MenuEntry*)
001065a8 00000040 T CTRPluginFramework::HotkeyManager::~HotkeyManager()
001065a8 00000040 T CTRPluginFramework::HotkeyManager::~HotkeyManager()
001065e8 00000010 T CTRPluginFramework::HotkeyManager::operator[](unsigned long)
001065f8 000000c0 T CTRPluginFramework::HotkeyManager::ToString[abi:cxx11]()
001066b8 00000020 T CTRPluginFramework::HotkeyManager::Count()
001066d8 00000134 T CTRPluginFramework::HotkeyManager::AskForKeys()
0010680c 00000128 t _GLOBAL__sub_I__ZN18CTRPluginFramework6HotkeyC2Ev
00106934 00000040 T CTRPluginFramework::MenuFolder::MenuFolder(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
00106934 00000040 T CTRPluginFramework::MenuFolder::MenuFolder(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
00106974 00000028 T CTRPluginFramework::MenuFolder::~MenuFolder()
00106974 00000028 T CTRPluginFramework::MenuFolder::~MenuFolder()
0010699c 00000010 T CTRPluginFramework::MenuFolder::Append(CTRPluginFramework::MenuEntry*) const
001069ac 0000006c T CTRPluginFramework::PluginMenu::PluginMenu(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long, unsigned long, unsigned long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)
001069ac 0000006c T CTRPluginFramework::PluginMenu::PluginMenu(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, unsigned long, unsigned long, unsigned long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)
00106a18 00000014 T CTRPluginFramework::PluginMenu::Append(CTRPluginFramework::MenuFolder*) const
00106a2c 00000038 T CTRPluginFramework::PluginMenu::Run() const
00106a64 00000008 T CTRPluginFramework::PluginMenu::IsOpen()
00106a6c 00000010 T CTRPluginFramework::PluginMenu::GetRunningInstance()
00106a7c 0000000c T CTRPluginFramework::PluginMenu::SynchronizeWithFrame(bool)
00106a88 00000030 t CTRPluginFramework::GetCurrentTime()
00106ab8 00000014 T CTRPluginFramework::Clock::Clock()
00106ab8 00000014 T CTRPluginFramework::Clock::Clock()
00106acc 00000038 T CTRPluginFramework::Clock::GetElapsedTime() const
00106b04 00000030 T CTRPluginFramework::Clock::HasTimePassed(CTRPluginFramework::Time) const
00106b34 00000044 T CTRPluginFramework::Clock::Restart()
00106b78 00000014 T CTRPluginFramework::Controller::GetKeysDown()
00106b8c 0000001c T CTRPluginFramework::Controller::IsKeyDown(CTRPluginFramework::Key)
00106ba8 0000001c T CTRPluginFramework::Controller::IsKeyPressed(CTRPluginFramework::Key)
00106bc4 0000001c T CTRPluginFramework::Controller::IsKeyReleased(CTRPluginFramework::Key)
00106be0 0000001c T CTRPluginFramework::Controller::IsKeysDown(unsigned long)
00106bfc 0000002c T CTRPluginFramework::Controller::InjectKey(unsigned long)
00106c28 0000002c T CTRPluginFramework::Controller::Update()
00106c54 00000070 t CTRPluginFramework::Directory::_List() const::{lambda(FS_DirectoryEntry const&, FS_DirectoryEntry const&)#1}::operator()(FS_DirectoryEntry const&, FS_DirectoryEntry const&) const [clone .isra.11]
00106cc4 00000128 t void std::__adjust_heap<__gnu_cxx::__normal_iterator<FS_DirectoryEntry*, std::vector<FS_DirectoryEntry, std::allocator<FS_DirectoryEntry> > >, int, FS_DirectoryEntry, __gnu_cxx::__ops::_Iter_comp_iter<CTRPluginFramework::Directory::_List() const::{lambda(FS_DirectoryEntry const&, FS_DirectoryEntry const&)#1}> >(__gnu_cxx::__normal_iterator<FS_DirectoryEntry*, std::vector<FS_DirectoryEntry, std::allocator<FS_DirectoryEntry> > >, int, __gnu_cxx::__normal_iterator<FS_DirectoryEntry*, std::vector<FS_DirectoryEntry, std::allocator<FS_DirectoryEntry> > >, FS_DirectoryEntry, __gnu_cxx::__ops::_Iter_comp_iter<CTRPluginFramework::Directory::_List() const::{lambda(FS_DirectoryEntry const&, FS_DirectoryEntry const&)#1}>) [clone .isra.42]
00106dec 00000084 t void std::__make_heap<__gnu_cxx::__normal_iterator<FS_DirectoryEntry*, std::vector<FS_DirectoryEntry, std::allocator<FS_DirectoryEntry> > >, __gnu_cxx::__ops::_Iter_comp_iter<CTRPluginFramework::Directory::_List() const::{lambda(FS_DirectoryEntry const&, FS_DirectoryEntry const&)#1}> >(__gnu_cxx::__normal_iterator<FS_DirectoryEntry*, std::vector<FS_DirectoryEntry, std::allocator<FS_DirectoryEntry> > >, __gnu_cxx::__ops::_Iter_comp_iter<CTRPluginFramework::Directory::_List() const::{lambda(FS_DirectoryEntry const&, FS_DirectoryEntry const&)#1}>, __gnu_cxx::__ops::_Iter_comp_iter<CTRPluginFramework::Directory::_List() const::{lambda(FS_DirectoryEntry const&, FS_DirectoryEntry const&)#1}>&) [clone .isra.43]
00106e70 0000007c t void std::__pop_heap<__gnu_cxx::__normal_iterator<FS_DirectoryEntry*, std::vector<FS_DirectoryEntry, std::allocator<FS_DirectoryEntry> > >, __gnu_cxx::__ops::_Iter_comp_iter<CTRPluginFramework::Directory::_List() const::{lambda(FS_DirectoryEntry const&, FS_DirectoryEntry const&)#1}> >(__gnu_cxx::__normal_iterator<FS_DirectoryEntry*, std::vector<FS_DirectoryEntry, std::allocator<FS_DirectoryEntry> > >, __gnu_cxx::__ops::_Iter_comp_iter<CTRPluginFramework::Directory::_List() const::{lambda(FS_DirectoryEntry const&, FS_DirectoryEntry const&)#1}>, __gnu_cxx::__ops::_Iter_comp_iter<CTRPluginFramework::Directory::_List() const::{lambda(FS_DirectoryEntry const&, FS_DirectoryEntry const&)#1}>, __gnu_cxx::__ops::_Iter_comp_iter<CTRPluginFramework::Directory::_List() const::{lambda(FS_DirectoryEntry const&, FS_DirectoryEntry const&)#1}>&) [clone .isra.44]
00106eec 00000078 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(char const*, std::allocator<char> const&) [clone .isra.53]
00106f64 00000064 t void std::__unguarded_linear_insert<__gnu_cxx::__normal_iterator<FS_DirectoryEntry*, std::vector<FS_DirectoryEntry, std::allocator<FS_DirectoryEntry> > >, __gnu_cxx::__ops::_Val_comp_iter<CTRPluginFramework::Directory::_List() const::{lambda(FS_DirectoryEntry const&, FS_DirectoryEntry const&)#1}> >(__gnu_cxx::__normal_iterator<FS_DirectoryEntry*, std::vector<FS_DirectoryEntry, std::allocator<FS_DirectoryEntry> > >, __gnu_cxx::__ops::_Val_comp_iter<CTRPluginFramework::Directory::_List() const::{lambda(FS_DirectoryEntry const&, FS_DirectoryEntry const&)#1}>) [clone .isra.69]
00106fc8 00000090 t void std::__insertion_sort<__gnu_cxx::__normal_iterator<FS_DirectoryEntry*, std::vector<FS_DirectoryEntry, std::allocator<FS_DirectoryEntry> > >, __gnu_cxx::__ops::_Iter_comp_iter<CTRPluginFramework::Directory::_List() const::{lambda(FS_DirectoryEntry const&, FS_DirectoryEntry const&)#1}> >(__gnu_cxx::__normal_iterator<FS_DirectoryEntry*, std::vector<FS_DirectoryEntry, std::allocator<FS_DirectoryEntry> > >, __gnu_cxx::__ops::_Iter_comp_iter<CTRPluginFramework::Directory::_List() const::{lambda(FS_DirectoryEntry const&, FS_DirectoryEntry const&)#1}>, __gnu_cxx::__ops::_Iter_comp_iter<CTRPluginFramework::Directory::_List() const::{lambda(FS_DirectoryEntry const&, FS_DirectoryEntry const&)#1}>) [clone .isra.81]
00107058 00000114 T CTRPluginFramework::_Path::SdmcFixPath(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)
0010716c 00000074 T CTRPluginFramework::_Path::SdmcUtf16Path(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)
001071e0 0000008c T CTRPluginFramework::Directory::ChangeWorkingDirectory(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
0010726c 00000078 T CTRPluginFramework::Directory::Create(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
001072e4 00000078 T CTRPluginFramework::Directory::IsExists(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
0010735c 00000034 T CTRPluginFramework::Directory::Close() const
00107390 00000100 T CTRPluginFramework::Directory::Open(CTRPluginFramework::Directory&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, bool)
00107490 00000014 T CTRPluginFramework::Directory::GetFullName[abi:cxx11]() const
001074a4 00000008 T CTRPluginFramework::Directory::IsOpen() const
001074ac 0000002c T CTRPluginFramework::Directory::Directory()
001074ac 0000002c T CTRPluginFramework::Directory::Directory()
001074d8 00000034 T CTRPluginFramework::Directory::Directory(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, bool)
001074d8 00000034 T CTRPluginFramework::Directory::Directory(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, bool)
0010750c 0000002c T CTRPluginFramework::Directory::~Directory()
0010750c 0000002c T CTRPluginFramework::Directory::~Directory()
00107538 00000100 W void std::vector<FS_DirectoryEntry, std::allocator<FS_DirectoryEntry> >::_M_realloc_insert<FS_DirectoryEntry const&>(__gnu_cxx::__normal_iterator<FS_DirectoryEntry*, std::vector<FS_DirectoryEntry, std::allocator<FS_DirectoryEntry> > >, FS_DirectoryEntry const&)
00107638 00000044 W std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::push_back(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
0010767c 0000004c W std::enable_if<std::__and_<std::__not_<std::__is_tuple_like<FS_DirectoryEntry> >, std::is_move_constructible<FS_DirectoryEntry>, std::is_move_assignable<FS_DirectoryEntry> >::value, void>::type std::swap<FS_DirectoryEntry>(FS_DirectoryEntry&, FS_DirectoryEntry&)
001076c8 00000184 t void std::__introsort_loop<__gnu_cxx::__normal_iterator<FS_DirectoryEntry*, std::vector<FS_DirectoryEntry, std::allocator<FS_DirectoryEntry> > >, int, __gnu_cxx::__ops::_Iter_comp_iter<CTRPluginFramework::Directory::_List() const::{lambda(FS_DirectoryEntry const&, FS_DirectoryEntry const&)#1}> >(__gnu_cxx::__normal_iterator<FS_DirectoryEntry*, std::vector<FS_DirectoryEntry, std::allocator<FS_DirectoryEntry> > >, __gnu_cxx::__ops::_Iter_comp_iter<CTRPluginFramework::Directory::_List() const::{lambda(FS_DirectoryEntry const&, FS_DirectoryEntry const&)#1}>, int, __gnu_cxx::__ops::_Iter_comp_iter<CTRPluginFramework::Directory::_List() const::{lambda(FS_DirectoryEntry const&, FS_DirectoryEntry const&)#1}>)
0010784c 0000010c T CTRPluginFramework::Directory::_List() const
00107958 00000168 T CTRPluginFramework::Directory::ListFiles(std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const
00107ac0 00000160 T CTRPluginFramework::Directory::ListDirectories(std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const
00107c20 00000038 t _GLOBAL__sub_I__ZN18CTRPluginFramework5_Path11SdmcFixPathERNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE
00107c58 000000e0 T CTRPluginFramework::File::Rename(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
00107d38 00000060 T CTRPluginFramework::File::Remove(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
00107d98 00000088 T CTRPluginFramework::File::Exists(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
00107e20 0000005c T CTRPluginFramework::File::Close() const
00107e7c 000000dc T CTRPluginFramework::File::Open(CTRPluginFramework::File&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, int)
00107f58 000000b0 T CTRPluginFramework::File::Read(void*, unsigned long) const
00108008 000000e8 T CTRPluginFramework::File::Write(void const*, unsigned long)
001080f0 0000002c T CTRPluginFramework::File::WriteLine(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)
0010811c 000000b0 T CTRPluginFramework::File::Seek(long long, CTRPluginFramework::File::SeekPos) const
001081cc 00000008 T CTRPluginFramework::File::Tell() const
001081d4 00000010 T CTRPluginFramework::File::Rewind() const
001081e4 00000008 T CTRPluginFramework::File::Flush() const
001081ec 00000044 T CTRPluginFramework::File::GetSize() const
00108230 00000008 T CTRPluginFramework::File::IsOpen() const
00108238 00000014 T CTRPluginFramework::File::GetFullName[abi:cxx11]() const
0010824c 00000034 T CTRPluginFramework::File::File()
0010824c 00000034 T CTRPluginFramework::File::File()
00108280 00000040 T CTRPluginFramework::File::File(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned long)
00108280 00000040 T CTRPluginFramework::File::File(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned long)
001082c0 00000100 T CTRPluginFramework::FwkSettings::SetThemeDefault()
001083c0 00000010 T CTRPluginFramework::Process::GetHandle()
001083d0 00000010 T CTRPluginFramework::Process::GetTitleID()
001083e0 00000060 T CTRPluginFramework::Process::GetTitleID(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)
00108440 00000038 T CTRPluginFramework::Process::GetName(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)
00108478 00000024 T CTRPluginFramework::Process::GetTextSize()
0010849c 0000005c T CTRPluginFramework::Process::ProtectMemory(unsigned long, unsigned long, int)
001084f8 00000074 T CTRPluginFramework::Process::ProtectRegion(unsigned long, int)
0010856c 000000a8 T CTRPluginFramework::Process::CheckAddress(unsigned long, unsigned long)
00108614 000000b8 T CTRPluginFramework::Process::CopyMemory(void*, void const*, unsigned long)
001086cc 000000b0 T CTRPluginFramework::Process::CheckRegion(unsigned long, unsigned long&, unsigned long)
0010877c 0000003c T CTRPluginFramework::Process::Write32(unsigned long, unsigned long)
001087b8 00000028 T CTRPluginFramework::Process::Write16(unsigned long, unsigned short)
001087e0 00000020 T CTRPluginFramework::Process::Write8(unsigned long, unsigned char)
00108800 00000028 T CTRPluginFramework::Process::WriteFloat(unsigned long, float)
00108828 00000040 T CTRPluginFramework::Process::Read32(unsigned long, unsigned long&)
00108868 0000002c T CTRPluginFramework::Process::Read16(unsigned long, unsigned short&)
00108894 00000024 T CTRPluginFramework::Process::Read8(unsigned long, unsigned char&)
001088b8 00000024 T CTRPluginFramework::Process::ReadFloat(unsigned long, float&)
001088dc 00000048 T CTRPluginFramework::Sleep(CTRPluginFramework::Time)
00108924 00000010 T CTRPluginFramework::System::IsNew3DS()
00108934 00000010 T CTRPluginFramework::System::IsLoaderNTR()
00108944 00000014 T CTRPluginFramework::Time::Time()
00108944 00000014 T CTRPluginFramework::Time::Time()
00108958 00000020 T CTRPluginFramework::Time::AsSeconds() const
00108978 00000018 T CTRPluginFramework::Time::AsMilliseconds() const
00108990 00000008 T CTRPluginFramework::Time::AsMicroseconds() const
00108998 00000028 T CTRPluginFramework::Seconds(float)
001089c0 00000010 T CTRPluginFramework::Milliseconds(int)
001089d0 00000008 T CTRPluginFramework::Microseconds(long long)
001089d8 00000014 T CTRPluginFramework::operator<(CTRPluginFramework::Time, CTRPluginFramework::Time)
001089ec 00000014 T CTRPluginFramework::operator>(CTRPluginFramework::Time, CTRPluginFramework::Time)
00108a00 00000014 T CTRPluginFramework::operator>=(CTRPluginFramework::Time, CTRPluginFramework::Time)
00108a14 00000020 T CTRPluginFramework::operator-(CTRPluginFramework::Time, CTRPluginFramework::Time)
00108a34 0000004c T CTRPluginFramework::operator/(CTRPluginFramework::Time, float)
00108a80 00000018 t _GLOBAL__sub_I__ZN18CTRPluginFramework4Time4ZeroE
00108a98 00000064 t void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct<char const*>(char const*, char const*, std::forward_iterator_tag) [clone .isra.17]
00108afc 00000074 T CTRPluginFramework::Utils::Format[abi:cxx11](char const*, ...)
00108b70 0000005c T CTRPluginFramework::Utils::ToHex[abi:cxx11](unsigned long)
00108bcc 00000080 T CTRPluginFramework::Utils::ToString[abi:cxx11](float, int)
00108c4c 000000b4 T CTRPluginFramework::Utils::GetSize(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
00108d00 00000140 T CTRPluginFramework::Utils::RemoveLastChar(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)
00108e40 00000038 W std::mersenne_twister_engine<unsigned int, 32u, 624u, 397u, 31u, 2567483615u, 11u, 4294967295u, 7u, 2636928640u, 15u, 4022730752u, 18u, 1812433253u>::seed(unsigned int)
00108e78 0000001c T CTRPluginFramework::InitializeRandomEngine()
00108e94 0000010c W std::mersenne_twister_engine<unsigned int, 32u, 624u, 397u, 31u, 2567483615u, 11u, 4294967295u, 7u, 2636928640u, 15u, 4022730752u, 18u, 1812433253u>::operator()()
00108fa0 00000068 T CTRPluginFramework::Utils::Random(unsigned long, unsigned long)
00109008 0000001c t _GLOBAL__sub_I__ZN18CTRPluginFramework5Utils6FormatB5cxx11EPKcz
00109024 00000078 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(char const*, std::allocator<char> const&) [clone .isra.24]
0010909c 0000001c W CTRPluginFramework::File::~File()
0010909c 0000001c W CTRPluginFramework::File::~File()
001090b8 000000a0 W CTRPluginFramework::BMPImage::BMPImage(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
001090b8 000000a0 W CTRPluginFramework::BMPImage::BMPImage(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
00109158 00000060 W CTRPluginFramework::BMPImage::BMPImage(unsigned long, unsigned long)
00109158 00000060 W CTRPluginFramework::BMPImage::BMPImage(unsigned long, unsigned long)
001091b8 00000010 W CTRPluginFramework::BMPImage::DataClear()
001091c8 00000134 W CTRPluginFramework::BMPImage::Resample(CTRPluginFramework::BMPImage&, int, int)
001092fc 0000002c T CTRPluginFramework::GetRatio(int, int, int, int)
00109328 00000138 T CTRPluginFramework::PostProcess(CTRPluginFramework::BMPImage*, int, int)
00109460 00000298 T CTRPluginFramework::Preferences::OpenConfigFile(CTRPluginFramework::File&, CTRPluginFramework::Preferences::HeaderV1&)
001096f8 000000d0 T CTRPluginFramework::Preferences::LoadSettings()
001097c8 000000b8 T CTRPluginFramework::Preferences::LoadSavedEnabledCheats()
00109880 000000b8 T CTRPluginFramework::Preferences::LoadSavedFavorites()
00109938 0000005c T CTRPluginFramework::Preferences::LoadHotkeysFromFile()
00109994 00000194 T CTRPluginFramework::Preferences::LoadBackgrounds()
00109b28 00000080 T CTRPluginFramework::Preferences::UnloadBackgrounds()
00109ba8 000001ec T CTRPluginFramework::Preferences::WriteSettings()
00109d94 00000004 T CTRPluginFramework::Preferences::Initialize()
00109d98 00000078 t _GLOBAL__sub_I__ZN18CTRPluginFramework11Preferences18topBackgroundImageE
00109e10 00000008 t int CTRPluginFramework::BMPImage::ReadFromFile<unsigned int>(CTRPluginFramework::File&, unsigned int&) [clone .isra.9]
00109e18 00000078 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(char const*, std::allocator<char> const&) [clone .isra.25]
00109e90 0000000c W CTRPluginFramework::BMPImage::BitmapFileHeader::Clear()
00109e9c 0000000c W CTRPluginFramework::BMPImage::BitmapInformationHeader::Clear()
00109ea8 00000100 W CTRPluginFramework::BMPImage::ReadBIH(CTRPluginFramework::File&, CTRPluginFramework::BMPImage::BitmapInformationHeader&)
00109fa8 00000030 T CTRPluginFramework::BMPImage::~BMPImage()
00109fa8 00000030 T CTRPluginFramework::BMPImage::~BMPImage()
00109fd8 000000cc T CTRPluginFramework::BMPImage::FillWithImg(CTRPluginFramework::BMPImage const&)
0010a0a4 00000114 T CTRPluginFramework::BMPImage::Draw(int, int)
0010a1b8 00000204 T CTRPluginFramework::BMPImage::Draw(CTRPluginFramework::Rect<int> const&, float)
0010a3bc 00000058 T CTRPluginFramework::BMPImage::CreateBitmap()
0010a414 000004d4 T CTRPluginFramework::BMPImage::LoadBitmap()
0010a8e8 00000010 T CTRPluginFramework::Glyph::Width() const
0010a8f8 00000060 T CTRPluginFramework::Font::Initialize()
0010a958 00000354 T CTRPluginFramework::GetOriginalGlyph(unsigned long)
0010acac 00000308 T CTRPluginFramework::ShrinkGlyph(unsigned char*, unsigned char*)
0010afb4 000000f4 T CTRPluginFramework::Font::CacheGlyph(unsigned long)
0010b0a8 00000068 T CTRPluginFramework::Font::GetGlyph(unsigned char*&)
0010b110 00000020 T CTRPluginFramework::Font::GetGlyph(char)
0010b130 0000002c W std::__cxx11::list<CTRPluginFramework::OSDImpl::OSDMessage*, std::allocator<CTRPluginFramework::OSDImpl::OSDMessage*> >::~list()
0010b130 0000002c W std::__cxx11::list<CTRPluginFramework::OSDImpl::OSDMessage*, std::allocator<CTRPluginFramework::OSDImpl::OSDMessage*> >::~list()
0010b15c 00000020 W std::vector<bool (*)(CTRPluginFramework::Screen const&), std::allocator<bool (*)(CTRPluginFramework::Screen const&)> >::~vector()
0010b15c 00000020 W std::vector<bool (*)(CTRPluginFramework::Screen const&), std::allocator<bool (*)(CTRPluginFramework::Screen const&)> >::~vector()
0010b17c 000000b8 t CTRPluginFramework::memsearch(unsigned char*, void const*, unsigned long, unsigned long) [clone .constprop.32]
0010b234 00000054 t CTRPluginFramework::SearchStmfd(unsigned long, unsigned long, unsigned long, bool&) [clone .part.0] [clone .constprop.36]
0010b288 0000009c T CTRPluginFramework::OSDImpl::OSDMessage::OSDMessage(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::Color const&, CTRPluginFramework::Color const&)
0010b288 0000009c T CTRPluginFramework::OSDImpl::OSDMessage::OSDMessage(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::Color const&, CTRPluginFramework::Color const&)
0010b324 0000000c T CTRPluginFramework::OSDImpl::Lock()
0010b330 0000001c T CTRPluginFramework::OSDImpl::TryLock()
0010b34c 0000000c T CTRPluginFramework::OSDImpl::Unlock()
0010b358 000000e4 T CTRPluginFramework::OSDImpl::Draw()
0010b43c 000000d8 T CTRPluginFramework::OSDImpl::UpdateScreens()
0010b514 000001b8 T CTRPluginFramework::InstallOSD()
0010b6cc 00000028 T CTRPluginFramework::OSDImpl::_Initialize()
0010b6f4 000000e0 t _GLOBAL__sub_I__ZN18CTRPluginFramework7OSDImpl12DrawSaveIconE
0010b7d4 00000108 T CTRPluginFramework::OSDImpl::Update()
0010b8dc 00000618 T CTRPluginFramework::OSDImpl::CallbackGlobal(unsigned long, void*, void*, int, int)
0010bef4 00000068 T CTRPluginFramework::OSDImpl::MainCallback(unsigned long, int, void*, void*, int, int, int)
0010bf5c 00000064 T CTRPluginFramework::OSDImpl::MainCallback2(unsigned long, unsigned long*, unsigned long, unsigned long)
0010bfc0 0000002c T CTRPluginFramework::PrivColor::_ReadRGBA8(unsigned char*)
0010bfec 00000024 T CTRPluginFramework::PrivColor::_ReadBGR8(unsigned char*)
0010c010 00000038 T CTRPluginFramework::PrivColor::_ReadRGB565(unsigned char*)
0010c048 00000038 T CTRPluginFramework::PrivColor::_ReadRGB5A1(unsigned char*)
0010c080 00000030 T CTRPluginFramework::PrivColor::_ReadRGBA4(unsigned char*)
0010c0b0 00000028 T CTRPluginFramework::PrivColor::_WriteRGBA8(unsigned char*, CTRPluginFramework::Color const&)
0010c0d8 00000020 T CTRPluginFramework::PrivColor::_WriteBGR8(unsigned char*, CTRPluginFramework::Color const&)
0010c0f8 0000003c T CTRPluginFramework::PrivColor::_WriteRGB565(unsigned char*, CTRPluginFramework::Color const&)
0010c134 00000048 T CTRPluginFramework::PrivColor::_WriteRGB5A1(unsigned char*, CTRPluginFramework::Color const&)
0010c17c 00000044 T CTRPluginFramework::PrivColor::_WriteRGBA4(unsigned char*, CTRPluginFramework::Color const&)
0010c1c0 00000104 T CTRPluginFramework::PrivColor::SetFormat(GSPGPU_FramebufferFormats)
0010c2c4 0000003c T CTRPluginFramework::PrivColor::UseClamp(bool, CTRPluginFramework::Rect<int>)
0010c300 00000070 W CTRPluginFramework::Rect<int>::Contains(int, int) const
0010c370 00000084 T CTRPluginFramework::PrivColor::_WriteRGBA8Clamp(unsigned char*, CTRPluginFramework::Color const&)
0010c3f4 00000078 T CTRPluginFramework::PrivColor::_WriteBGR8Clamp(unsigned char*, CTRPluginFramework::Color const&)
0010c46c 00000098 T CTRPluginFramework::PrivColor::_WriteRGB565Clamp(unsigned char*, CTRPluginFramework::Color const&)
0010c504 000000a4 T CTRPluginFramework::PrivColor::_WriteRGB5A1Clamp(unsigned char*, CTRPluginFramework::Color const&)
0010c5a8 000000a0 T CTRPluginFramework::PrivColor::_WriteRGBA4Clamp(unsigned char*, CTRPluginFramework::Color const&)
0010c648 00000020 t _GLOBAL__sub_I__ZN18CTRPluginFramework9PrivColor15FromFramebufferE
0010c668 0000003c T CTRPluginFramework::Renderer::SetTarget(CTRPluginFramework::Target)
0010c6a4 00000278 T CTRPluginFramework::Renderer::MenuSelector(int, int, int, int)
0010c91c 00000120 T CTRPluginFramework::Renderer::EndFrame(bool)
0010ca3c 0000001c t _GLOBAL__sub_I__ZN18CTRPluginFramework8Renderer7_targetE
0010ca58 00000044 t CTRPluginFramework::Line<int>* std::__uninitialized_move_if_noexcept_a<CTRPluginFramework::Line<int>*, CTRPluginFramework::Line<int>*, std::allocator<CTRPluginFramework::Line<int> > >(CTRPluginFramework::Line<int>*, CTRPluginFramework::Line<int>*, CTRPluginFramework::Line<int>*, std::allocator<CTRPluginFramework::Line<int> >&) [clone .isra.41]
0010ca9c 000000a8 T CTRPluginFramework::Renderer::DrawLine(int, int, int, CTRPluginFramework::Color const&, int)
0010cb44 000000a8 T CTRPluginFramework::Renderer::DrawLine(CTRPluginFramework::Vector<int>&, CTRPluginFramework::Vector<int>&, CTRPluginFramework::Color const&)
0010cbec 000000c0 T CTRPluginFramework::Renderer::DrawStippledLine(int, int, int, CTRPluginFramework::Color const&, int)
0010ccac 00000094 T CTRPluginFramework::Renderer::DrawRect(int, int, int, int, CTRPluginFramework::Color const&, bool, int)
0010cd40 000000a8 T CTRPluginFramework::Renderer::DrawRect(CTRPluginFramework::Rect<int> const&, CTRPluginFramework::Color const&, bool)
0010cde8 00000054 T CTRPluginFramework::Renderer::DrawRect2(CTRPluginFramework::Rect<int> const&, CTRPluginFramework::Color const&, CTRPluginFramework::Color const&)
0010ce3c 00000044 W std::_Deque_base<CTRPluginFramework::Vector<int>, std::allocator<CTRPluginFramework::Vector<int> > >::~_Deque_base()
0010ce3c 00000044 W std::_Deque_base<CTRPluginFramework::Vector<int>, std::allocator<CTRPluginFramework::Vector<int> > >::~_Deque_base()
0010ce80 00000054 W std::deque<CTRPluginFramework::Vector<int>, std::allocator<CTRPluginFramework::Vector<int> > >::pop_front()
0010ced4 00000194 W void std::deque<CTRPluginFramework::Vector<int>, std::allocator<CTRPluginFramework::Vector<int> > >::emplace_back<CTRPluginFramework::Vector<int> >(CTRPluginFramework::Vector<int>&&)
0010d068 000000b0 W void std::vector<CTRPluginFramework::Line<int>, std::allocator<CTRPluginFramework::Line<int> > >::_M_realloc_insert<CTRPluginFramework::Line<int> >(__gnu_cxx::__normal_iterator<CTRPluginFramework::Line<int>*, std::vector<CTRPluginFramework::Line<int>, std::allocator<CTRPluginFramework::Line<int> > > >, CTRPluginFramework::Line<int>&&)
0010d118 00000044 W void std::vector<CTRPluginFramework::Line<int>, std::allocator<CTRPluginFramework::Line<int> > >::emplace_back<CTRPluginFramework::Line<int> >(CTRPluginFramework::Line<int>&&)
0010d160 0000068c T CTRPluginFramework::Renderer::ComputeRoundedRectangle(std::vector<CTRPluginFramework::Line<int>, std::allocator<CTRPluginFramework::Line<int> > >&, CTRPluginFramework::Rect<int> const&, float, int)
0010d7ec 0000003c T CTRPluginFramework::Renderer::DrawPixel(int, int, CTRPluginFramework::Color const&)
0010d828 00000140 T CTRPluginFramework::Renderer::DrawCharacter(int, int, int, CTRPluginFramework::Color const&)
0010d968 00000144 T CTRPluginFramework::Renderer::DrawCharacter(int, int, int, CTRPluginFramework::Color const&, CTRPluginFramework::Color const&)
0010daac 000000c8 T CTRPluginFramework::Renderer::DrawString(char const*, int, int&, CTRPluginFramework::Color)
0010db74 000001c4 T CTRPluginFramework::Renderer::DrawString(char const*, int, int&, CTRPluginFramework::Color, CTRPluginFramework::Color)
0010dd38 00000030 T CTRPluginFramework::Renderer::LinuxFontSize(char const*)
0010dd68 00000130 T CTRPluginFramework::Renderer::FontCalcGlyphPos(fontGlyphPos_s*, charWidthInfo_s**, int, float, float)
0010de98 000000d4 T CTRPluginFramework::Renderer::GetTextSize(char const*)
0010df6c 0000014c T CTRPluginFramework::Renderer::GetTextInfos(char const*, int&, float&, float)
0010e0b8 00000104 T CTRPluginFramework::Renderer::DrawGlyph(CTRPluginFramework::Glyph*, int, int, CTRPluginFramework::Color)
0010e1bc 00000154 T CTRPluginFramework::Renderer::DrawGlyph(CTRPluginFramework::Glyph*, int, int, float&, CTRPluginFramework::Color)
0010e310 00000198 T CTRPluginFramework::Renderer::DrawSysStringReturn(unsigned char const*, int, int&, int, CTRPluginFramework::Color, int)
0010e4a8 000001ec T CTRPluginFramework::Renderer::DrawSysString(char const*, int, int&, int, CTRPluginFramework::Color, float, char const*)
0010e694 00000070 T CTRPluginFramework::Renderer::DrawSysCheckBox(char const*, int, int&, int, CTRPluginFramework::Color, bool, float)
0010e704 0000006c T CTRPluginFramework::Renderer::DrawSysFolder(char const*, int, int&, int, CTRPluginFramework::Color, float)
0010e770 00000024 t _GLOBAL__sub_I__ZN18CTRPluginFramework8Renderer16FontCalcGlyphPosEP14fontGlyphPos_sPP15charWidthInfo_siff
0010e794 00000028 T CTRPluginFramework::Window::~Window()
0010e794 00000028 T CTRPluginFramework::Window::~Window()
0010e7bc 00000004 W CTRPluginFramework::IconButton<CTRPluginFramework::Window, void>::~IconButton()
0010e7bc 00000004 W CTRPluginFramework::IconButton<CTRPluginFramework::Window, void>::~IconButton()
0010e7c0 0000001c W CTRPluginFramework::IconButton<CTRPluginFramework::Window, void>::Draw()
0010e7dc 00000014 W CTRPluginFramework::IconButton<CTRPluginFramework::Window, void>::~IconButton()
0010e7f0 00000064 W CTRPluginFramework::IconButton<CTRPluginFramework::Window, void>::operator()()
0010e854 000000c8 T CTRPluginFramework::Window::Window(unsigned long, unsigned long, unsigned long, unsigned long, bool, CTRPluginFramework::BMPImage*)
0010e854 000000c8 T CTRPluginFramework::Window::Window(unsigned long, unsigned long, unsigned long, unsigned long, bool, CTRPluginFramework::BMPImage*)
0010e91c 00000064 T CTRPluginFramework::Window::Draw() const
0010e980 000000d8 T CTRPluginFramework::Window::Draw(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const
0010ea58 00000018 T CTRPluginFramework::Window::Update(bool, CTRPluginFramework::Vector<int> const&) const
0010ea70 00000018 T CTRPluginFramework::Window::MustClose() const
0010ea88 00000014 T CTRPluginFramework::Window::Close() const
0010ea9c 00000004 T CTRPluginFramework::Window::GetRect() const
0010eaa0 0000002c T CTRPluginFramework::Window::Initialize()
0010eacc 00000080 W CTRPluginFramework::IconButton<CTRPluginFramework::Window, void>::Update(bool, CTRPluginFramework::Vector<int> const&)
0010eb4c 000000a8 t _GLOBAL__sub_I__ZN18CTRPluginFramework6Window12BottomWindowE
0010ebf4 000001b0 W CTRPluginFramework::Icon::DrawImg(unsigned char*, int, int, int, int)
0010eda4 0000002c T CTRPluginFramework::Icon::DrawAbout(int, int)
0010edd0 0000003c T CTRPluginFramework::Icon::DrawCapsLockOn(int, int, bool)
0010ee0c 0000003c T CTRPluginFramework::Icon::DrawCheckBox(int, int, bool)
0010ee48 0000003c T CTRPluginFramework::Icon::DrawClearSymbol(int, int, bool)
0010ee84 0000003c T CTRPluginFramework::Icon::DrawClipboard(int, int, bool)
0010eec0 0000003c T CTRPluginFramework::Icon::DrawClose(int, int, bool)
0010eefc 0000002c T CTRPluginFramework::Icon::DrawController(int, int)
0010ef28 0000003c T CTRPluginFramework::Icon::DrawCut(int, int, bool)
0010ef64 0000003c T CTRPluginFramework::Icon::DrawDuplicate(int, int, bool)
0010efa0 0000003c T CTRPluginFramework::Icon::DrawEdit(int, int, bool)
0010efdc 0000003c T CTRPluginFramework::Icon::DrawEnterKey(int, int, bool)
0010f018 0000002c T CTRPluginFramework::Icon::DrawFolder(int, int)
0010f044 0000003c T CTRPluginFramework::Icon::DrawAddFavorite(int, int, bool)
0010f080 0000002c T CTRPluginFramework::Icon::DrawFavorite(int, int)
0010f0ac 0000002c T CTRPluginFramework::Icon::DrawFile(int, int)
0010f0d8 0000002c T CTRPluginFramework::Icon::DrawGameController(int, int)
0010f104 0000003c T CTRPluginFramework::Icon::DrawGameController(int, int, bool)
0010f140 0000002c T CTRPluginFramework::Icon::DrawGrid(int, int)
0010f16c 0000003c T CTRPluginFramework::Icon::DrawInfo(int, int, bool)
0010f1a8 0000002c T CTRPluginFramework::Icon::DrawGuide(int, int)
0010f1d4 00000034 T CTRPluginFramework::Icon::DrawHandCursor(int, int)
0010f208 0000003c T CTRPluginFramework::Icon::DrawKeyboard(int, int, bool)
0010f244 0000002c T CTRPluginFramework::Icon::DrawMore(int, int)
0010f270 0000003c T CTRPluginFramework::Icon::DrawPlus(int, int, bool)
0010f2ac 0000002c T CTRPluginFramework::Icon::DrawRAM(int, int)
0010f2d8 0000002c T CTRPluginFramework::Icon::DrawRestart(int, int)
0010f304 0000002c T CTRPluginFramework::Icon::DrawRocket(int, int)
0010f330 0000002c T CTRPluginFramework::Icon::DrawSave(int, int)
0010f35c 0000002c T CTRPluginFramework::Icon::DrawSearch(int, int)
0010f388 0000002c T CTRPluginFramework::Icon::DrawSettings(int, int)
0010f3b4 0000002c T CTRPluginFramework::Icon::DrawShutdown(int, int)
0010f3e0 0000002c T CTRPluginFramework::Icon::DrawTools(int, int)
0010f40c 0000003c T CTRPluginFramework::Icon::DrawTrash(int, int, bool)
0010f448 0000001c W CTRPluginFramework::IconButton<CTRPluginFramework::CheckBox, void>::Draw()
0010f464 00000004 W CTRPluginFramework::IconButton<CTRPluginFramework::CheckBox, void>::~IconButton()
0010f464 00000004 W CTRPluginFramework::IconButton<CTRPluginFramework::CheckBox, void>::~IconButton()
0010f468 00000014 W CTRPluginFramework::IconButton<CTRPluginFramework::CheckBox, void>::~IconButton()
0010f47c 00000064 W CTRPluginFramework::IconButton<CTRPluginFramework::CheckBox, void>::operator()()
0010f4e0 00000084 t void __gnu_cxx::new_allocator<CTRPluginFramework::CheckBox>::construct<CTRPluginFramework::CheckBox, CTRPluginFramework::CheckBox>(CTRPluginFramework::CheckBox*, CTRPluginFramework::CheckBox&&) [clone .isra.16]
0010f564 000000c8 t CTRPluginFramework::CheckBox* std::__uninitialized_move_if_noexcept_a<CTRPluginFramework::CheckBox*, CTRPluginFramework::CheckBox*, std::allocator<CTRPluginFramework::CheckBox> >(CTRPluginFramework::CheckBox*, CTRPluginFramework::CheckBox*, CTRPluginFramework::CheckBox*, std::allocator<CTRPluginFramework::CheckBox>&) [clone .isra.41]
0010f62c 00000090 T CTRPluginFramework::HotkeysModifier::_DrawTop() const
0010f6bc 0000011c T CTRPluginFramework::HotkeysModifier::_DrawBottom()
0010f7d8 00000070 T CTRPluginFramework::HotkeysModifier::_Update()
0010f848 000000a0 T CTRPluginFramework::HotkeysModifier::operator()()
0010f8e8 0000002c W void std::_Destroy_aux<false>::__destroy<CTRPluginFramework::CheckBox*>(CTRPluginFramework::CheckBox*, CTRPluginFramework::CheckBox*)
0010f914 00000030 T CTRPluginFramework::HotkeysModifier::~HotkeysModifier()
0010f914 00000030 T CTRPluginFramework::HotkeysModifier::~HotkeysModifier()
0010f944 000000d4 W void std::vector<CTRPluginFramework::CheckBox, std::allocator<CTRPluginFramework::CheckBox> >::_M_realloc_insert<CTRPluginFramework::CheckBox>(__gnu_cxx::__normal_iterator<CTRPluginFramework::CheckBox*, std::vector<CTRPluginFramework::CheckBox, std::allocator<CTRPluginFramework::CheckBox> > >, CTRPluginFramework::CheckBox&&)
0010fa18 0000003c W void std::vector<CTRPluginFramework::CheckBox, std::allocator<CTRPluginFramework::CheckBox> >::emplace_back<CTRPluginFramework::CheckBox>(CTRPluginFramework::CheckBox&&)
0010fa54 0000011c T CTRPluginFramework::HotkeysModifier::HotkeysModifier(unsigned long&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
0010fa54 0000011c T CTRPluginFramework::HotkeysModifier::HotkeysModifier(unsigned long&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
0010fb70 00000080 W CTRPluginFramework::IconButton<CTRPluginFramework::CheckBox, void>::Update(bool, CTRPluginFramework::Vector<int> const&)
0010fbf0 00000078 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(char const*, std::allocator<char> const&) [clone .isra.47]
0010fc68 000000a4 t CTRPluginFramework::TouchKey* std::__uninitialized_move_if_noexcept_a<CTRPluginFramework::TouchKey*, CTRPluginFramework::TouchKey*, std::allocator<CTRPluginFramework::TouchKey> >(CTRPluginFramework::TouchKey*, CTRPluginFramework::TouchKey*, CTRPluginFramework::TouchKey*, std::allocator<CTRPluginFramework::TouchKey>&) [clone .isra.69]
0010fd0c 00000144 T CTRPluginFramework::KeyboardImpl::KeyboardImpl(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
0010fd0c 00000144 T CTRPluginFramework::KeyboardImpl::KeyboardImpl(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
0010fe50 00000148 T CTRPluginFramework::KeyboardImpl::KeyboardImpl(CTRPluginFramework::Keyboard*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
0010fe50 00000148 T CTRPluginFramework::KeyboardImpl::KeyboardImpl(CTRPluginFramework::Keyboard*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
0010ff98 00000064 T CTRPluginFramework::KeyboardImpl::~KeyboardImpl()
0010ff98 00000064 T CTRPluginFramework::KeyboardImpl::~KeyboardImpl()
0010fffc 00000008 T CTRPluginFramework::KeyboardImpl::IsHexadecimal() const
00110004 00000008 T CTRPluginFramework::KeyboardImpl::SetMaxInput(int)
0011000c 00000008 T CTRPluginFramework::KeyboardImpl::GetInput[abi:cxx11]()
00110014 00000008 T CTRPluginFramework::KeyboardImpl::SetConvertCallback(void* (*)(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, bool))
0011001c 00000008 T CTRPluginFramework::KeyboardImpl::SetCompareCallback(bool (*)(void const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&))
00110024 00000164 T CTRPluginFramework::KeyboardImpl::_RenderTop()
00110188 00000494 T CTRPluginFramework::KeyboardImpl::_RenderBottom()
0011061c 00000064 T CTRPluginFramework::UnitsToNextChar(char const*, int)
00110680 00000090 T CTRPluginFramework::UnitsToPreviousChar(char const*, int)
00110710 00000080 T CTRPluginFramework::KeyboardImpl::_ScrollUp()
00110790 00000084 T CTRPluginFramework::KeyboardImpl::_ScrollDown()
00110814 00000160 T CTRPluginFramework::KeyboardImpl::_UpdateScrollInfos()
00110974 00000280 T CTRPluginFramework::KeyboardImpl::_Update(float)
00110bf4 0000057c T CTRPluginFramework::KeyboardImpl::_CheckKeys()
00111170 00000068 T CTRPluginFramework::KeyboardImpl::_CheckInput()
001111d8 00000050 T CTRPluginFramework::KeyboardImpl::_CheckButtons(int&)
00111228 00000070 T CTRPluginFramework::KeyboardImpl::operator()(int&)
00111298 00000008 T CTRPluginFramework::KeyboardImpl::CanChangeLayout(bool)
001112a0 00000044 W std::_Deque_base<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >::~_Deque_base()
001112a0 00000044 W std::_Deque_base<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >::~_Deque_base()
001112e4 00000030 W std::vector<CTRPluginFramework::TouchKey, std::allocator<CTRPluginFramework::TouchKey> >::_M_range_check(unsigned int) const
00111314 000000d8 W void std::vector<CTRPluginFramework::TouchKeyString*, std::allocator<CTRPluginFramework::TouchKeyString*> >::_M_realloc_insert<CTRPluginFramework::TouchKeyString*>(__gnu_cxx::__normal_iterator<CTRPluginFramework::TouchKeyString**, std::vector<CTRPluginFramework::TouchKeyString*, std::allocator<CTRPluginFramework::TouchKeyString*> > >, CTRPluginFramework::TouchKeyString*&&)
001113ec 000001cc T CTRPluginFramework::KeyboardImpl::Populate(std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&)
001115b8 0000002c W void std::_Destroy_aux<false>::__destroy<CTRPluginFramework::TouchKey*>(CTRPluginFramework::TouchKey*, CTRPluginFramework::TouchKey*)
001115e4 00000028 W std::vector<CTRPluginFramework::TouchKey, std::allocator<CTRPluginFramework::TouchKey> >::~vector()
001115e4 00000028 W std::vector<CTRPluginFramework::TouchKey, std::allocator<CTRPluginFramework::TouchKey> >::~vector()
0011160c 0000011c W void std::vector<CTRPluginFramework::TouchKey, std::allocator<CTRPluginFramework::TouchKey> >::_M_realloc_insert<CTRPluginFramework::TouchKey>(__gnu_cxx::__normal_iterator<CTRPluginFramework::TouchKey*, std::vector<CTRPluginFramework::TouchKey, std::allocator<CTRPluginFramework::TouchKey> > >, CTRPluginFramework::TouchKey&&)
00111728 00000090 W void std::vector<CTRPluginFramework::TouchKey, std::allocator<CTRPluginFramework::TouchKey> >::emplace_back<CTRPluginFramework::TouchKey>(CTRPluginFramework::TouchKey&&)
001117b8 000008f4 T CTRPluginFramework::KeyboardImpl::_QwertyLowCase()
001120ac 000008f4 T CTRPluginFramework::KeyboardImpl::_QwertyUpCase()
001129a0 00001344 T CTRPluginFramework::KeyboardImpl::_QwertySymbols()
00113ce4 00001740 T CTRPluginFramework::KeyboardImpl::_QwertyNintendo()
00115424 00000044 T CTRPluginFramework::KeyboardImpl::_Qwerty()
00115468 00000254 T CTRPluginFramework::KeyboardImpl::_DigitKeyboard(std::vector<CTRPluginFramework::TouchKey, std::allocator<CTRPluginFramework::TouchKey> >&)
001156bc 00000050 T CTRPluginFramework::KeyboardImpl::_Decimal()
0011570c 00000068 T CTRPluginFramework::KeyboardImpl::_Hexadecimal()
00115774 00000048 T CTRPluginFramework::KeyboardImpl::SetLayout(CTRPluginFramework::Layout)
001157bc 00000324 T CTRPluginFramework::KeyboardImpl::_ProcessEvent(CTRPluginFramework::Event&)
00115ae0 00000250 T CTRPluginFramework::KeyboardImpl::Run()
00115d30 00000078 t _GLOBAL__sub_I__ZN18CTRPluginFramework12KeyboardImpl12_DecimalKeysE
00115da8 00000008 W CTRPluginFramework::MenuItem::GetNote[abi:cxx11]()
00115db0 00000014 T CTRPluginFramework::MenuEntryImpl::Disable()
00115dc4 00000028 W CTRPluginFramework::MenuItem::~MenuItem()
00115dc4 00000028 W CTRPluginFramework::MenuItem::~MenuItem()
00115dec 00000028 T CTRPluginFramework::MenuEntryImpl::~MenuEntryImpl()
00115dec 00000028 T CTRPluginFramework::MenuEntryImpl::~MenuEntryImpl()
00115e14 0000001c W CTRPluginFramework::MenuItem::~MenuItem()
00115e30 0000001c T CTRPluginFramework::MenuEntryImpl::~MenuEntryImpl()
00115e4c 00000118 T CTRPluginFramework::MenuEntryImpl::GetNote[abi:cxx11]()
00115f64 000000d8 T CTRPluginFramework::MenuEntryImpl::MenuEntryImpl(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::MenuEntry*)
00115f64 000000d8 T CTRPluginFramework::MenuEntryImpl::MenuEntryImpl(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::MenuEntry*)
0011603c 000000dc T CTRPluginFramework::MenuEntryImpl::MenuEntryImpl(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, void (*)(CTRPluginFramework::MenuEntry*), std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::MenuEntry*)
0011603c 000000dc T CTRPluginFramework::MenuEntryImpl::MenuEntryImpl(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, void (*)(CTRPluginFramework::MenuEntry*), std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::MenuEntry*)
00116118 00000008 T CTRPluginFramework::MenuEntryImpl::GetArg() const
00116120 0000000c T CTRPluginFramework::MenuEntryImpl::IsActivated() const
0011612c 00000008 T CTRPluginFramework::MenuEntryImpl::AsMenuEntry() const
00116134 00000024 T CTRPluginFramework::MenuEntryImpl::_TriggerState()
00116158 00000030 T CTRPluginFramework::MenuEntryImpl::Enable()
00116188 0000001c T CTRPluginFramework::MenuEntryImpl::_MustBeRemoved() const
001161a4 00000068 T CTRPluginFramework::MenuEntryImpl::_Execute()
0011620c 000000cc T CTRPluginFramework::MenuFolderImpl::~MenuFolderImpl()
0011620c 000000cc T CTRPluginFramework::MenuFolderImpl::~MenuFolderImpl()
001162d8 0000001c T CTRPluginFramework::MenuFolderImpl::~MenuFolderImpl()
001162f4 000000bc T CTRPluginFramework::MenuFolderImpl::MenuFolderImpl(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
001162f4 000000bc T CTRPluginFramework::MenuFolderImpl::MenuFolderImpl(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
001163b0 000000c0 T CTRPluginFramework::MenuFolderImpl::MenuFolderImpl(CTRPluginFramework::MenuFolder*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
001163b0 000000c0 T CTRPluginFramework::MenuFolderImpl::MenuFolderImpl(CTRPluginFramework::MenuFolder*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
00116470 00000014 T CTRPluginFramework::MenuFolderImpl::ItemsCount() const
00116484 00000050 T CTRPluginFramework::MenuFolderImpl::GetItem(unsigned long)
001164d4 00000018 T CTRPluginFramework::MenuFolderImpl::operator[](int)
001164ec 00000024 T CTRPluginFramework::MenuFolderImpl::HasParent()
00116510 00000010 T CTRPluginFramework::MenuFolderImpl::_Open(CTRPluginFramework::MenuFolderImpl*, int, bool)
00116520 00000024 T CTRPluginFramework::MenuFolderImpl::_Close(int&, bool)
00116544 000000d8 W void std::vector<CTRPluginFramework::MenuItem*, std::allocator<CTRPluginFramework::MenuItem*> >::_M_realloc_insert<CTRPluginFramework::MenuItem* const&>(__gnu_cxx::__normal_iterator<CTRPluginFramework::MenuItem**, std::vector<CTRPluginFramework::MenuItem*, std::allocator<CTRPluginFramework::MenuItem*> > >, CTRPluginFramework::MenuItem* const&)
0011661c 00000060 T CTRPluginFramework::MenuFolderImpl::Append(CTRPluginFramework::MenuItem*, bool)
0011667c 00000010 T CTRPluginFramework::MenuItem::NoteChanged()
0011668c 00000010 T CTRPluginFramework::MenuItem::HasNoteChanged() const
0011669c 00000010 T CTRPluginFramework::MenuItem::HandledNoteChanges()
001166ac 00000004 W CTRPluginFramework::ToggleButton<CTRPluginFramework::PluginMenuActionReplay, void>::~ToggleButton()
001166ac 00000004 W CTRPluginFramework::ToggleButton<CTRPluginFramework::PluginMenuActionReplay, void>::~ToggleButton()
001166b0 00000004 W CTRPluginFramework::IconButton<CTRPluginFramework::PluginMenuActionReplay, void>::~IconButton()
001166b0 00000004 W CTRPluginFramework::IconButton<CTRPluginFramework::PluginMenuActionReplay, void>::~IconButton()
001166b4 0000001c W CTRPluginFramework::ToggleButton<CTRPluginFramework::PluginMenuActionReplay, void>::Draw()
001166d0 0000001c W CTRPluginFramework::IconButton<CTRPluginFramework::PluginMenuActionReplay, void>::Draw()
001166ec 00000014 W CTRPluginFramework::ToggleButton<CTRPluginFramework::PluginMenuActionReplay, void>::~ToggleButton()
00116700 00000014 W CTRPluginFramework::IconButton<CTRPluginFramework::PluginMenuActionReplay, void>::~IconButton()
00116714 00000028 T CTRPluginFramework::PluginMenuActionReplay::_PasteBtn_OnClick()
0011673c 00000064 W CTRPluginFramework::ToggleButton<CTRPluginFramework::PluginMenuActionReplay, void>::operator()()
001167a0 00000064 W CTRPluginFramework::IconButton<CTRPluginFramework::PluginMenuActionReplay, void>::operator()()
00116804 00000028 t CTRPluginFramework::ActionReplay_GetInput(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)::{lambda(void const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)#1}::_FUN(void const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)
0011682c 00000024 T CTRPluginFramework::PluginMenuActionReplay::_CutBtn_OnClick()
00116850 00000078 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(char const*, std::allocator<char> const&) [clone .isra.55]
001168c8 0000006c t CTRPluginFramework::ActionReplay_GetInput(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)
00116934 000000d4 T CTRPluginFramework::PluginMenuActionReplay::_TrashBtn_OnClick()
00116a08 000000a0 t void std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::_M_range_initialize<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const*>(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const*, std::forward_iterator_tag) [clone .isra.65]
00116aa8 00000268 T CTRPluginFramework::PluginMenuActionReplay::PluginMenuActionReplay()
00116aa8 00000268 T CTRPluginFramework::PluginMenuActionReplay::PluginMenuActionReplay()
00116d10 00000014 T CTRPluginFramework::PluginMenuActionReplay::Initialize()
00116d24 00000058 T CTRPluginFramework::PluginMenuActionReplay::_DrawBottom()
00116d7c 00000054 T CTRPluginFramework::PluginMenuActionReplay::_ProcessEvent(std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >&)
00116dd0 00000120 T CTRPluginFramework::PluginMenuActionReplay::SaveCodes()
00116ef0 0000003c W std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::~vector()
00116ef0 0000003c W std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::~vector()
00116f2c 00000174 T CTRPluginFramework::PluginMenuActionReplay::_NewBtn_OnClick()
001170a0 00000080 W CTRPluginFramework::ToggleButton<CTRPluginFramework::PluginMenuActionReplay, void>::Update(bool, CTRPluginFramework::Vector<int> const&)
00117120 00000080 W CTRPluginFramework::IconButton<CTRPluginFramework::PluginMenuActionReplay, void>::Update(bool, CTRPluginFramework::Vector<int> const&)
001171a0 00000160 T CTRPluginFramework::PluginMenuActionReplay::_Update(CTRPluginFramework::Time const&)
00117300 000000a8 T CTRPluginFramework::PluginMenuActionReplay::operator()(std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >&, CTRPluginFramework::Time const&)
001173a8 00000184 W void std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::_M_realloc_insert<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >(__gnu_cxx::__normal_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&&)
0011752c 00000188 T CTRPluginFramework::PluginMenuActionReplay::_EditorBtn_OnClick()
001176b4 0000000c W void std::_Destroy<CTRPluginFramework::ARCode>(CTRPluginFramework::ARCode*)
001176c0 00000184 W void std::vector<CTRPluginFramework::ARCode, std::allocator<CTRPluginFramework::ARCode> >::_M_realloc_insert<CTRPluginFramework::ARCode>(__gnu_cxx::__normal_iterator<CTRPluginFramework::ARCode*, std::vector<CTRPluginFramework::ARCode, std::allocator<CTRPluginFramework::ARCode> > >, CTRPluginFramework::ARCode&&)
00117844 00000044 W void std::vector<CTRPluginFramework::ARCode, std::allocator<CTRPluginFramework::ARCode> >::emplace_back<CTRPluginFramework::ARCode>(CTRPluginFramework::ARCode&&)
00117888 00000030 W unsigned long* std::__copy_move<false, true, std::random_access_iterator_tag>::__copy_m<unsigned long>(unsigned long const*, unsigned long const*, unsigned long*)
001178b8 000000d4 W std::vector<unsigned long, std::allocator<unsigned long> >::operator=(std::vector<unsigned long, std::allocator<unsigned long> > const&)
0011798c 00000088 W CTRPluginFramework::ARCode* std::__copy_move<false, false, std::random_access_iterator_tag>::__copy_m<CTRPluginFramework::ARCode const*, CTRPluginFramework::ARCode*>(CTRPluginFramework::ARCode const*, CTRPluginFramework::ARCode const*, CTRPluginFramework::ARCode*)
00117a14 00000174 W std::vector<CTRPluginFramework::ARCode, std::allocator<CTRPluginFramework::ARCode> >::operator=(std::vector<CTRPluginFramework::ARCode, std::allocator<CTRPluginFramework::ARCode> > const&)
00117b88 00000070 T CTRPluginFramework::PluginMenuActionReplay::_DuplicateBtn_OnClick()
00117bf8 00000030 W CTRPluginFramework::ARCode::~ARCode()
00117bf8 00000030 W CTRPluginFramework::ARCode::~ARCode()
00117c28 00000144 T CTRPluginFramework::PluginMenuActionReplay::NewARCode(unsigned char, unsigned long, unsigned long)
00117d6c 0000001c W CTRPluginFramework::ARCode::~ARCode()
00117d88 00000058 t CTRPluginFramework::PluginMenuExecuteLoop::Add(CTRPluginFramework::MenuEntryImpl*)::{lambda(CTRPluginFramework::MenuEntryImpl*)#1}::operator()(CTRPluginFramework::MenuEntryImpl*) const [clone .isra.4]
00117de0 0000002c T CTRPluginFramework::PluginMenuExecuteLoop::PluginMenuExecuteLoop()
00117de0 0000002c T CTRPluginFramework::PluginMenuExecuteLoop::PluginMenuExecuteLoop()
00117e0c 0000000c T CTRPluginFramework::PluginMenuExecuteLoop::Lock()
00117e18 0000000c T CTRPluginFramework::PluginMenuExecuteLoop::Unlock()
00117e24 0000011c T CTRPluginFramework::PluginMenuExecuteLoop::RemoveAR(CTRPluginFramework::MenuEntryActionReplay*)
00117f40 0000003c T CTRPluginFramework::PluginMenuExecuteLoop::ExecuteAR()
00117f7c 0000000c T CTRPluginFramework::PluginMenuExecuteLoop::LockAR()
00117f88 0000000c T CTRPluginFramework::PluginMenuExecuteLoop::UnlockAR()
00117f94 00000020 T CTRPluginFramework::PluginMenuExecuteLoop::InitLocks()
00117fb4 000000d8 W void std::vector<unsigned long, std::allocator<unsigned long> >::_M_realloc_insert<unsigned long const&>(__gnu_cxx::__normal_iterator<unsigned long*, std::vector<unsigned long, std::allocator<unsigned long> > >, unsigned long const&)
0011808c 0000019c T CTRPluginFramework::PluginMenuExecuteLoop::WriteEnabledCheatsToFile(CTRPluginFramework::Preferences::HeaderV1&, CTRPluginFramework::File&)
00118228 00000054 W std::vector<CTRPluginFramework::MenuEntryImpl*, std::allocator<CTRPluginFramework::MenuEntryImpl*> >::_M_erase(__gnu_cxx::__normal_iterator<CTRPluginFramework::MenuEntryImpl**, std::vector<CTRPluginFramework::MenuEntryImpl*, std::allocator<CTRPluginFramework::MenuEntryImpl*> > >, __gnu_cxx::__normal_iterator<CTRPluginFramework::MenuEntryImpl**, std::vector<CTRPluginFramework::MenuEntryImpl*, std::allocator<CTRPluginFramework::MenuEntryImpl*> > >)
0011827c 00000160 T CTRPluginFramework::PluginMenuExecuteLoop::operator()()
001183dc 00000018 T CTRPluginFramework::PluginMenuExecuteLoop::ExecuteBuiltin()
001183f4 00000124 T CTRPluginFramework::PluginMenuExecuteLoop::Remove(CTRPluginFramework::MenuEntryImpl*)
00118518 000000d8 W void std::vector<CTRPluginFramework::MenuEntryImpl*, std::allocator<CTRPluginFramework::MenuEntryImpl*> >::_M_realloc_insert<CTRPluginFramework::MenuEntryImpl* const&>(__gnu_cxx::__normal_iterator<CTRPluginFramework::MenuEntryImpl**, std::vector<CTRPluginFramework::MenuEntryImpl*, std::allocator<CTRPluginFramework::MenuEntryImpl*> > >, CTRPluginFramework::MenuEntryImpl* const&)
001185f0 000001bc T CTRPluginFramework::PluginMenuExecuteLoop::Add(CTRPluginFramework::MenuEntryImpl*)
001187ac 000000d8 W void std::vector<CTRPluginFramework::MenuEntryActionReplay*, std::allocator<CTRPluginFramework::MenuEntryActionReplay*> >::_M_realloc_insert<CTRPluginFramework::MenuEntryActionReplay* const&>(__gnu_cxx::__normal_iterator<CTRPluginFramework::MenuEntryActionReplay**, std::vector<CTRPluginFramework::MenuEntryActionReplay*, std::allocator<CTRPluginFramework::MenuEntryActionReplay*> > >, CTRPluginFramework::MenuEntryActionReplay* const&)
00118884 00000084 T CTRPluginFramework::PluginMenuExecuteLoop::AddAR(CTRPluginFramework::MenuEntryActionReplay*)
00118908 00000214 W CTRPluginFramework::Button<CTRPluginFramework::PluginMenuHome, void>::Draw()
00118b1c 00000204 W CTRPluginFramework::CheckedButton<CTRPluginFramework::PluginMenuHome, void>::Draw()
00118d20 00000204 W CTRPluginFramework::CheckedButton<CTRPluginFramework::PluginMenuSearch, void>::Draw()
00118f24 00000214 W CTRPluginFramework::Button<CTRPluginFramework::PluginMenuSearch, void>::Draw()
00119138 00000058 W CTRPluginFramework::CheckedButton<CTRPluginFramework::PluginMenuSearch, void>::operator()()
00119190 00000074 W CTRPluginFramework::Button<CTRPluginFramework::PluginMenuSearch, void>::operator()()
00119204 00000074 W CTRPluginFramework::Button<CTRPluginFramework::PluginMenuHome, void>::operator()()
00119278 00000058 W CTRPluginFramework::CheckedButton<CTRPluginFramework::PluginMenuHome, void>::operator()()
001192d0 00000088 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(char const*, std::allocator<char> const&) [clone .isra.115]
00119358 0000000c t std::_Vector_base<CTRPluginFramework::Line<int>, std::allocator<CTRPluginFramework::Line<int> > >::_M_deallocate(CTRPluginFramework::Line<int>*, unsigned int) [clone .isra.118]
00119364 00000028 W CTRPluginFramework::Button<CTRPluginFramework::PluginMenuSearch, void>::~Button()
00119364 00000028 W CTRPluginFramework::Button<CTRPluginFramework::PluginMenuSearch, void>::~Button()
0011938c 0000001c W CTRPluginFramework::Button<CTRPluginFramework::PluginMenuSearch, void>::~Button()
001193a8 00000094 t CTRPluginFramework::Preferences::HotkeysInfos* std::__uninitialized_move_if_noexcept_a<CTRPluginFramework::Preferences::HotkeysInfos*, CTRPluginFramework::Preferences::HotkeysInfos*, std::allocator<CTRPluginFramework::Preferences::HotkeysInfos> >(CTRPluginFramework::Preferences::HotkeysInfos*, CTRPluginFramework::Preferences::HotkeysInfos*, CTRPluginFramework::Preferences::HotkeysInfos*, std::allocator<CTRPluginFramework::Preferences::HotkeysInfos>&) [clone .isra.174]
0011943c 00000028 W CTRPluginFramework::CheckedButton<CTRPluginFramework::PluginMenuSearch, void>::~CheckedButton()
0011943c 00000028 W CTRPluginFramework::CheckedButton<CTRPluginFramework::PluginMenuSearch, void>::~CheckedButton()
00119464 0000001c W CTRPluginFramework::CheckedButton<CTRPluginFramework::PluginMenuSearch, void>::~CheckedButton()
00119480 00000028 W CTRPluginFramework::CheckedButton<CTRPluginFramework::PluginMenuHome, void>::~CheckedButton()
00119480 00000028 W CTRPluginFramework::CheckedButton<CTRPluginFramework::PluginMenuHome, void>::~CheckedButton()
001194a8 0000001c W CTRPluginFramework::CheckedButton<CTRPluginFramework::PluginMenuHome, void>::~CheckedButton()
001194c4 00000028 W CTRPluginFramework::Button<CTRPluginFramework::PluginMenuHome, void>::~Button()
001194c4 00000028 W CTRPluginFramework::Button<CTRPluginFramework::PluginMenuHome, void>::~Button()
001194ec 0000001c W CTRPluginFramework::Button<CTRPluginFramework::PluginMenuHome, void>::~Button()
00119508 00000020 W CTRPluginFramework::KeySequenceImpl::~KeySequenceImpl()
00119508 00000020 W CTRPluginFramework::KeySequenceImpl::~KeySequenceImpl()
00119528 00000030 W CTRPluginFramework::TextBox::~TextBox()
00119528 00000030 W CTRPluginFramework::TextBox::~TextBox()
00119558 0000001c W CTRPluginFramework::TextBox::~TextBox()
00119574 000000f0 T CTRPluginFramework::PluginMenuImpl::PluginMenuImpl(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)
00119574 000000f0 T CTRPluginFramework::PluginMenuImpl::PluginMenuImpl(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)
00119664 00000008 T CTRPluginFramework::PluginMenuImpl::Append(CTRPluginFramework::MenuItem*) const
0011966c 00000094 W CTRPluginFramework::KeySequenceImpl::KeySequenceImpl(std::vector<CTRPluginFramework::Key, std::allocator<CTRPluginFramework::Key> >)
0011966c 00000094 W CTRPluginFramework::KeySequenceImpl::KeySequenceImpl(std::vector<CTRPluginFramework::Key, std::allocator<CTRPluginFramework::Key> >)
00119700 00000020 T CTRPluginFramework::PluginMenuImpl::Close(CTRPluginFramework::MenuFolderImpl*)
00119720 0000018c T CTRPluginFramework::PluginMenuImpl::LoadHotkeysFromFile(CTRPluginFramework::Preferences::HeaderV1 const&, CTRPluginFramework::File&)
001198ac 00000020 T CTRPluginFramework::PluginMenuImpl::GetRegionsList(std::vector<CTRPluginFramework::Region, std::allocator<CTRPluginFramework::Region> >&)
001198cc 0000001c T CTRPluginFramework::PluginMenuImpl::ForceExit()
001198e8 0000001c T CTRPluginFramework::PluginMenuImpl::ForceOpen()
00119904 00000008 T CTRPluginFramework::PluginMenuImpl::IsOpen() const
0011990c 00000008 T CTRPluginFramework::PluginMenuImpl::AddPluginVersion(unsigned long) const
00119914 00000020 W std::_Vector_base<unsigned long, std::allocator<unsigned long> >::~_Vector_base()
00119914 00000020 W std::_Vector_base<unsigned long, std::allocator<unsigned long> >::~_Vector_base()
00119934 000000f4 W void std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >::_M_realloc_insert<CTRPluginFramework::Event const&>(__gnu_cxx::__normal_iterator<CTRPluginFramework::Event*, std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> > >, CTRPluginFramework::Event const&)
00119a28 0000075c T CTRPluginFramework::PluginMenuImpl::Run()
0011a184 00000058 W std::vector<unsigned long, std::allocator<unsigned long> >::_M_check_len(unsigned int, char const*) const
0011a1dc 00000030 W unsigned long* std::__copy_move<true, true, std::random_access_iterator_tag>::__copy_m<unsigned long>(unsigned long const*, unsigned long const*, unsigned long*)
0011a20c 000000c4 W std::vector<unsigned long, std::allocator<unsigned long> >::_M_default_append(unsigned int)
0011a2d0 00000034 W std::vector<unsigned long, std::allocator<unsigned long> >::resize(unsigned int)
0011a304 00000130 T CTRPluginFramework::PluginMenuImpl::LoadEnabledCheatsFromFile(CTRPluginFramework::Preferences::HeaderV1 const&, CTRPluginFramework::File&)
0011a434 0000013c T CTRPluginFramework::PluginMenuImpl::LoadFavoritesFromFile(CTRPluginFramework::Preferences::HeaderV1 const&, CTRPluginFramework::File&)
0011a570 000000c4 W std::vector<unsigned long, std::allocator<unsigned long> >::push_back(unsigned long const&)
0011a634 00000108 T CTRPluginFramework::PluginMenuImpl::WriteFavoritesToFile(CTRPluginFramework::Preferences::HeaderV1&, CTRPluginFramework::File&)
0011a73c 00000068 W std::vector<unsigned long, std::allocator<unsigned long> >::vector(std::vector<unsigned long, std::allocator<unsigned long> > const&)
0011a73c 00000068 W std::vector<unsigned long, std::allocator<unsigned long> >::vector(std::vector<unsigned long, std::allocator<unsigned long> > const&)
0011a7a4 000000fc W void std::vector<CTRPluginFramework::Preferences::HotkeysInfos, std::allocator<CTRPluginFramework::Preferences::HotkeysInfos> >::_M_realloc_insert<CTRPluginFramework::Preferences::HotkeysInfos const&>(__gnu_cxx::__normal_iterator<CTRPluginFramework::Preferences::HotkeysInfos*, std::vector<CTRPluginFramework::Preferences::HotkeysInfos, std::allocator<CTRPluginFramework::Preferences::HotkeysInfos> > >, CTRPluginFramework::Preferences::HotkeysInfos const&)
0011a8a0 00000140 T CTRPluginFramework::PluginMenuImpl::ExtractHotkeys(std::vector<CTRPluginFramework::Preferences::HotkeysInfos, std::allocator<CTRPluginFramework::Preferences::HotkeysInfos> >&, CTRPluginFramework::MenuFolderImpl*, unsigned long&)
0011a9e0 00000198 T CTRPluginFramework::PluginMenuImpl::WriteHotkeysToFile(CTRPluginFramework::Preferences::HeaderV1&, CTRPluginFramework::File&)
0011ab78 00000080 W CTRPluginFramework::Button<CTRPluginFramework::PluginMenuHome, void>::Update(bool, CTRPluginFramework::Vector<int> const&)
0011abf8 00000074 W CTRPluginFramework::CheckedButton<CTRPluginFramework::PluginMenuHome, void>::Update(bool, CTRPluginFramework::Vector<int> const&)
0011ac6c 00000074 W CTRPluginFramework::CheckedButton<CTRPluginFramework::PluginMenuSearch, void>::Update(bool, CTRPluginFramework::Vector<int> const&)
0011ace0 00000080 W CTRPluginFramework::Button<CTRPluginFramework::PluginMenuSearch, void>::Update(bool, CTRPluginFramework::Vector<int> const&)
0011ad60 00000078 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(char const*, std::allocator<char> const&) [clone .isra.57]
0011add8 00000044 T CTRPluginFramework::PluginMenuSearch::_ProcessEvent(CTRPluginFramework::Event&)
0011ae1c 0000013c T CTRPluginFramework::PluginMenuSearch::_RenderBottom()
0011af58 00000068 T CTRPluginFramework::PluginMenuSearch::_Update(CTRPluginFramework::Time)
0011afc0 0000016c T CTRPluginFramework::PluginMenuSearch::_PopulateSearchType(bool)
0011b12c 00000050 T CTRPluginFramework::PluginMenuSearch::_cancelBtn_OnClick()
0011b17c 000000ac W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > __gnu_cxx::__to_xstring<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, char>(int (*)(char*, unsigned int, char const*, std::__va_list), unsigned int, char const*, ...)
0011b228 000004cc T CTRPluginFramework::PluginMenuSearch::_ShowProgressWindow() const
0011b6f4 00000070 T CTRPluginFramework::PluginMenuSearch::_RenderTop()
0011b764 000000f4 t CTRPluginFramework::ClearSearchFolder()
0011b858 00000158 W CTRPluginFramework::Button<CTRPluginFramework::PluginMenuSearch, void>::Button(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::PluginMenuSearch&, void (CTRPluginFramework::PluginMenuSearch::*)(), CTRPluginFramework::Rect<int>, int (*)(int, int))
0011b858 00000158 W CTRPluginFramework::Button<CTRPluginFramework::PluginMenuSearch, void>::Button(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::PluginMenuSearch&, void (CTRPluginFramework::PluginMenuSearch::*)(), CTRPluginFramework::Rect<int>, int (*)(int, int))
0011b9b0 0000005c W CTRPluginFramework::Button<CTRPluginFramework::PluginMenuSearch, void>::UseSysFont(bool)
0011ba0c 00000640 T CTRPluginFramework::PluginMenuSearch::PluginMenuSearch(CTRPluginFramework::HexEditor&)
0011ba0c 00000640 T CTRPluginFramework::PluginMenuSearch::PluginMenuSearch(CTRPluginFramework::HexEditor&)
0011c04c 00000034 W std::__cxx11::list<CTRPluginFramework::Search*, std::allocator<CTRPluginFramework::Search*> >::push_back(CTRPluginFramework::Search* const&)
0011c080 00000220 T CTRPluginFramework::PluginMenuSearch::RestoreSearchState()
0011c2a0 00000028 W std::__cxx11::list<CTRPluginFramework::Search*, std::allocator<CTRPluginFramework::Search*> >::pop_back()
0011c2c8 00000068 T CTRPluginFramework::PluginMenuSearch::_undoBtn_OnClick()
0011c330 00000030 W CTRPluginFramework::Region* std::__copy_move<false, true, std::random_access_iterator_tag>::__copy_m<CTRPluginFramework::Region>(CTRPluginFramework::Region const*, CTRPluginFramework::Region const*, CTRPluginFramework::Region*)
0011c360 000000d4 W std::vector<CTRPluginFramework::Region, std::allocator<CTRPluginFramework::Region> >::operator=(std::vector<CTRPluginFramework::Region, std::allocator<CTRPluginFramework::Region> > const&)
0011c434 000000ac W void std::vector<CTRPluginFramework::Region, std::allocator<CTRPluginFramework::Region> >::_M_realloc_insert<CTRPluginFramework::Region const&>(__gnu_cxx::__normal_iterator<CTRPluginFramework::Region*, std::vector<CTRPluginFramework::Region, std::allocator<CTRPluginFramework::Region> > >, CTRPluginFramework::Region const&)
0011c4e0 00000040 W std::vector<CTRPluginFramework::Region, std::allocator<CTRPluginFramework::Region> >::push_back(CTRPluginFramework::Region const&)
0011c520 0000026c T CTRPluginFramework::PluginMenuSearch::_ListRegion()
0011c78c 00000388 T CTRPluginFramework::PluginMenuSearch::operator()(std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >&, CTRPluginFramework::Time&)
0011cb14 000000dc T CTRPluginFramework::PluginMenuSearch::_resetBtn_OnClick()
0011cbf0 00000038 T CTRPluginFramework::PluginMenuSearch::GetRegionsList(std::vector<CTRPluginFramework::Region, std::allocator<CTRPluginFramework::Region> >&)
0011cc28 0000027c T CTRPluginFramework::PluginMenuSearch::_searchBtn_OnClick()
0011cea4 00000014 t CTRPluginFramework::PluginMenuTools::InitMenu()::{lambda()#1}::_FUN()
0011ceb8 00000014 t CTRPluginFramework::PluginMenuTools::InitMenu()::{lambda()#2}::_FUN()
0011cecc 00000014 t CTRPluginFramework::PluginMenuTools::InitMenu()::{lambda()#3}::_FUN()
0011cee0 00000114 t CTRPluginFramework::FsTryOpenFileCallback(unsigned long, unsigned short*, unsigned long)
0011cff4 00000004 t CTRPluginFramework::PluginMenuTools::InitMenu()::{lambda()#13}::_FUN()
0011cff8 00000004 t CTRPluginFramework::PluginMenuTools::InitMenu()::{lambda()#14}::_FUN()
0011cffc 00000018 t CTRPluginFramework::PluginMenuTools::InitMenu()::{lambda()#4}::_FUN()
0011d014 00000018 t CTRPluginFramework::PluginMenuTools::InitMenu()::{lambda()#5}::_FUN()
0011d02c 00000018 t CTRPluginFramework::PluginMenuTools::InitMenu()::{lambda()#6}::_FUN()
0011d044 00000018 t CTRPluginFramework::PluginMenuTools::InitMenu()::{lambda()#7}::_FUN()
0011d05c 00000018 t CTRPluginFramework::PluginMenuTools::InitMenu()::{lambda()#8}::_FUN()
0011d074 00000018 t CTRPluginFramework::PluginMenuTools::InitMenu()::{lambda()#9}::_FUN()
0011d08c 00000018 t CTRPluginFramework::PluginMenuTools::InitMenu()::{lambda()#10}::_FUN()
0011d0a4 00000018 t CTRPluginFramework::PluginMenuTools::InitMenu()::{lambda()#11}::_FUN()
0011d0bc 00000018 t CTRPluginFramework::PluginMenuTools::InitMenu()::{lambda()#12}::_FUN()
0011d0d4 00000078 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(char const*, std::allocator<char> const&) [clone .isra.49]
0011d14c 00000064 t CTRPluginFramework::MenuHotkeyModifier()
0011d1b0 00000120 t CTRPluginFramework::ConfirmBeforeProceed(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
0011d2d0 0000005c t CTRPluginFramework::Reboot()
0011d32c 00000064 t CTRPluginFramework::Shutdown()
0011d390 000000f8 t CTRPluginFramework::FindFunction(unsigned long&) [clone .constprop.62]
0011d488 00000140 t CTRPluginFramework::_DisplayLoadedFiles(CTRPluginFramework::MenuEntryTools*)
0011d5c8 000001c8 t CTRPluginFramework::_WriteLoadedFiles(CTRPluginFramework::MenuEntryTools*)
0011d790 000001f4 T CTRPluginFramework::PluginMenuTools::UpdateSettings()
0011d984 000007fc T CTRPluginFramework::PluginMenuTools::InitMenu()
0011e180 00000154 T CTRPluginFramework::PluginMenuTools::PluginMenuTools(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, CTRPluginFramework::HexEditor&)
0011e180 00000154 T CTRPluginFramework::PluginMenuTools::PluginMenuTools(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, CTRPluginFramework::HexEditor&)
0011e2d4 0000010c T CTRPluginFramework::PluginMenuTools::_ProcessEvent(CTRPluginFramework::Event&)
0011e3e0 000000a4 T CTRPluginFramework::PluginMenuTools::_RenderBottom()
0011e484 00000040 T CTRPluginFramework::PluginMenuTools::_Update(CTRPluginFramework::Time)
0011e4c4 0000003c t _GLOBAL__sub_I__ZN18CTRPluginFramework15PluginMenuToolsC2ERNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERNS_9HexEditorE
0011e500 0000003c T CTRPluginFramework::PluginMenuTools::_RenderTop()
0011e53c 00000108 T CTRPluginFramework::PluginMenuTools::operator()(std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >&, CTRPluginFramework::Time&)
0011e644 00000088 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(char const*, std::allocator<char> const&) [clone .isra.35]
0011e6cc 000000a0 t void std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::_M_range_initialize<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const*>(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const*, std::forward_iterator_tag) [clone .isra.48]
0011e76c 0000007c T CTRPluginFramework::SearchMenu::_OpenExportFile()
0011e7e8 000000b4 T CTRPluginFramework::SearchMenu::_NewCheat()
0011e89c 0000018c T CTRPluginFramework::SearchMenu::_Edit()
0011ea28 00000048 T CTRPluginFramework::SearchMenu::_JumpInEditor()
0011ea70 0000014c T CTRPluginFramework::SearchMenu::_Export()
0011ebbc 0000015c T CTRPluginFramework::SearchMenu::_ExportAll()
0011ed18 000001ac T CTRPluginFramework::SearchMenu::_ShowGame()
0011eec4 00000030 W std::__cxx11::to_string(unsigned long)
0011eef4 00000084 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > std::operator+<char, std::char_traits<char>, std::allocator<char> >(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&&)
0011ef78 00000584 T CTRPluginFramework::SearchMenu::Draw()
0011f4fc 000000b4 T CTRPluginFramework::SearchMenu::SearchMenu(CTRPluginFramework::Search*&, CTRPluginFramework::HexEditor&, bool&, bool&)
0011f4fc 000000b4 T CTRPluginFramework::SearchMenu::SearchMenu(CTRPluginFramework::Search*&, CTRPluginFramework::HexEditor&, bool&, bool&)
0011f5b0 00000030 W std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::clear()
0011f5e0 00000230 T CTRPluginFramework::SearchMenu::Update()
0011f810 0000050c T CTRPluginFramework::SearchMenu::ProcessEvent(std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >&, CTRPluginFramework::Time&)
0011fd1c 00000064 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >* std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const*, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >(__gnu_cxx::__normal_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const*, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >, __gnu_cxx::__normal_iterator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const*, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >&) [clone .isra.29]
0011fd80 00000094 T CTRPluginFramework::SubMenu::SubMenu(std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&)
0011fd80 00000094 T CTRPluginFramework::SubMenu::SubMenu(std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&)
0011fe14 0000001c T CTRPluginFramework::SubMenu::operator()()
0011fe30 00000214 T CTRPluginFramework::SubMenu::Draw()
00120044 000000bc T CTRPluginFramework::SubMenu::ProcessEvent(CTRPluginFramework::Event const&)
00120100 00000008 T CTRPluginFramework::SubMenu::IsOpen()
00120108 0000001c T CTRPluginFramework::SubMenu::OptionsCount()
00120124 00000198 W std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::operator=(std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&)
001202bc 00000048 T CTRPluginFramework::SubMenu::ChangeOptions(std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&)
00120304 000000c4 T CTRPluginFramework::Search32::FirstSearchUnknown()
001203c8 000000c0 T CTRPluginFramework::Search32::FirstSearchSpecified()
00120488 0000003c t CTRPluginFramework::Results32WithOld* std::__uninitialized_default_n_a<CTRPluginFramework::Results32WithOld*, unsigned int, IAllocator<CTRPluginFramework::Results32WithOld> >(CTRPluginFramework::Results32WithOld*, unsigned int, IAllocator<CTRPluginFramework::Results32WithOld>&) [clone .isra.79]
001204c4 00000078 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(char const*, std::allocator<char> const&) [clone .isra.92]
0012053c 000002a0 T CTRPluginFramework::Search32::SecondSearchUnknown()
001207dc 000002bc T CTRPluginFramework::Search32::SecondSearchSpecified()
00120a98 00000040 W CTRPluginFramework::Search::~Search()
00120a98 00000040 W CTRPluginFramework::Search::~Search()
00120ad8 00000044 T CTRPluginFramework::Search32::~Search32()
00120ad8 00000044 T CTRPluginFramework::Search32::~Search32()
00120b1c 0000001c T CTRPluginFramework::Search32::~Search32()
00120b38 0000001c W CTRPluginFramework::Search::~Search()
00120b54 00000228 T CTRPluginFramework::Search32::Search32(CTRPluginFramework::SearchParameters&)
00120b54 00000228 T CTRPluginFramework::Search32::Search32(CTRPluginFramework::SearchParameters&)
00120d7c 00000020 T CTRPluginFramework::Search32::Search32(CTRPluginFramework::Search*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
00120d7c 00000020 T CTRPluginFramework::Search32::Search32(CTRPluginFramework::Search*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
00120d9c 0000005c W std::vector<CTRPluginFramework::Results32WithOld, IAllocator<CTRPluginFramework::Results32WithOld> >::vector(unsigned int, IAllocator<CTRPluginFramework::Results32WithOld> const&)
00120d9c 0000005c W std::vector<CTRPluginFramework::Results32WithOld, IAllocator<CTRPluginFramework::Results32WithOld> >::vector(unsigned int, IAllocator<CTRPluginFramework::Results32WithOld> const&)
00120df8 00000138 W std::vector<CTRPluginFramework::Results32WithOld, IAllocator<CTRPluginFramework::Results32WithOld> >::_M_default_append(unsigned int)
00120f30 00000048 W std::vector<CTRPluginFramework::Results32WithOld, IAllocator<CTRPluginFramework::Results32WithOld> >::resize(unsigned int)
00120f78 00000144 T CTRPluginFramework::Search32::SubsidiarySearchSpecified()
001210bc 00000144 T CTRPluginFramework::Search32::SubsidiarySearchUnknown()
00121200 00000044 W void std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::emplace_back<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&&)
00121244 0000002c W CTRPluginFramework::Results32* std::__uninitialized_default_n_1<true>::__uninit_default_n<CTRPluginFramework::Results32*, unsigned int>(CTRPluginFramework::Results32*, unsigned int)
00121270 000000ec W std::vector<CTRPluginFramework::Results32, std::allocator<CTRPluginFramework::Results32> >::_M_default_append(unsigned int)
0012135c 00000034 W std::vector<CTRPluginFramework::Results32, std::allocator<CTRPluginFramework::Results32> >::resize(unsigned int)
00121390 00000034 W CTRPluginFramework::Results32WithOld* std::__uninitialized_default_n_1<true>::__uninit_default_n<CTRPluginFramework::Results32WithOld*, unsigned int>(CTRPluginFramework::Results32WithOld*, unsigned int)
001213c4 0000010c W std::vector<CTRPluginFramework::Results32WithOld, std::allocator<CTRPluginFramework::Results32WithOld> >::_M_default_append(unsigned int)
001214d0 00000048 W std::vector<CTRPluginFramework::Results32WithOld, std::allocator<CTRPluginFramework::Results32WithOld> >::resize(unsigned int)
00121518 00000318 T CTRPluginFramework::Search32::ReadResults(unsigned long, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >&, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >&, std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >&)
00121830 00000260 T CTRPluginFramework::Search32::FirstSearchSpecifiedU8(unsigned long, CTRPluginFramework::SearchFlags, CTRPluginFramework::Results32*)
00121a90 00000278 T CTRPluginFramework::Search32::FirstSearchSpecifiedU16(unsigned long, CTRPluginFramework::SearchFlags, CTRPluginFramework::Results32*)
00121d08 00000260 T CTRPluginFramework::Search32::FirstSearchSpecifiedU32(unsigned long, CTRPluginFramework::SearchFlags, CTRPluginFramework::Results32*)
00121f68 00000034 T CTRPluginFramework::AlmostEqualRelative(float, float, float)
00121f9c 00000324 T CTRPluginFramework::Search32::FirstSearchSpecifiedFloat(unsigned long, CTRPluginFramework::SearchFlags, CTRPluginFramework::Results32*)
001222c0 0000082c T CTRPluginFramework::Search32::SecondSearchSpecifiedU8(std::vector<CTRPluginFramework::Results32, IAllocator<CTRPluginFramework::Results32> >&, CTRPluginFramework::SearchFlags, CTRPluginFramework::Results32WithOld*)
00122aec 000008cc T CTRPluginFramework::Search32::SecondSearchSpecifiedU16(std::vector<CTRPluginFramework::Results32, IAllocator<CTRPluginFramework::Results32> >&, CTRPluginFramework::SearchFlags, CTRPluginFramework::Results32WithOld*)
001233b8 000008ac T CTRPluginFramework::Search32::SecondSearchSpecifiedU32(std::vector<CTRPluginFramework::Results32, IAllocator<CTRPluginFramework::Results32> >&, CTRPluginFramework::SearchFlags, CTRPluginFramework::Results32WithOld*)
00123c64 00000db0 T CTRPluginFramework::Search32::SecondSearchSpecifiedFloat(std::vector<CTRPluginFramework::Results32, IAllocator<CTRPluginFramework::Results32> >&, CTRPluginFramework::SearchFlags, CTRPluginFramework::Results32WithOld*)
00124a14 00000bb4 T CTRPluginFramework::Search32::SecondSearchUnknownU8(std::vector<unsigned long, IAllocator<unsigned long> >&, CTRPluginFramework::SearchFlags, CTRPluginFramework::Results32WithOld*)
001255c8 000006f4 T CTRPluginFramework::Search32::SecondSearchUnknownU16(std::vector<unsigned long, IAllocator<unsigned long> >&, CTRPluginFramework::SearchFlags, CTRPluginFramework::Results32WithOld*)
00125cbc 000003e0 T CTRPluginFramework::Search32::SecondSearchUnknownU32(std::vector<unsigned long, IAllocator<unsigned long> >&, CTRPluginFramework::SearchFlags, CTRPluginFramework::Results32WithOld*)
0012609c 0000079c T CTRPluginFramework::Search32::SecondSearchUnknownFloat(std::vector<unsigned long, IAllocator<unsigned long> >&, CTRPluginFramework::SearchFlags, CTRPluginFramework::Results32WithOld*)
00126838 00000444 T CTRPluginFramework::Search32::SubsidiarySearchSpecifiedU8(std::vector<CTRPluginFramework::Results32WithOld, IAllocator<CTRPluginFramework::Results32WithOld> >&, CTRPluginFramework::SearchFlags, CTRPluginFramework::Results32WithOld*)
00126c7c 00000448 T CTRPluginFramework::Search32::SubsidiarySearchSpecifiedU16(std::vector<CTRPluginFramework::Results32WithOld, IAllocator<CTRPluginFramework::Results32WithOld> >&, CTRPluginFramework::SearchFlags, CTRPluginFramework::Results32WithOld*)
001270c4 00000444 T CTRPluginFramework::Search32::SubsidiarySearchSpecifiedU32(std::vector<CTRPluginFramework::Results32WithOld, IAllocator<CTRPluginFramework::Results32WithOld> >&, CTRPluginFramework::SearchFlags, CTRPluginFramework::Results32WithOld*)
00127508 00000630 T CTRPluginFramework::Search32::SubsidiarySearchSpecifiedFloat(std::vector<CTRPluginFramework::Results32WithOld, IAllocator<CTRPluginFramework::Results32WithOld> >&, CTRPluginFramework::SearchFlags, CTRPluginFramework::Results32WithOld*)
00127b38 000008bc T CTRPluginFramework::Search32::SubsidiarySearchUnknownU8(std::vector<CTRPluginFramework::Results32WithOld, IAllocator<CTRPluginFramework::Results32WithOld> >&, CTRPluginFramework::SearchFlags, CTRPluginFramework::Results32WithOld*)
001283f4 000008c0 T CTRPluginFramework::Search32::SubsidiarySearchUnknownU16(std::vector<CTRPluginFramework::Results32WithOld, IAllocator<CTRPluginFramework::Results32WithOld> >&, CTRPluginFramework::SearchFlags, CTRPluginFramework::Results32WithOld*)
00128cb4 000008bc T CTRPluginFramework::Search32::SubsidiarySearchUnknownU32(std::vector<CTRPluginFramework::Results32WithOld, IAllocator<CTRPluginFramework::Results32WithOld> >&, CTRPluginFramework::SearchFlags, CTRPluginFramework::Results32WithOld*)
00129570 00000c50 T CTRPluginFramework::Search32::SubsidiarySearchUnknownFloat(std::vector<CTRPluginFramework::Results32WithOld, IAllocator<CTRPluginFramework::Results32WithOld> >&, CTRPluginFramework::SearchFlags, CTRPluginFramework::Results32WithOld*)
0012a1c0 00000044 T CTRPluginFramework::Search::UpdateProgress()
0012a204 00000194 T CTRPluginFramework::Search::CheckNextRegion()
0012a398 00000078 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(char const*, std::allocator<char> const&) [clone .isra.27]
0012a410 00000008 T CTRPluginFramework::Search::GetHeader() const
0012a418 00000058 T CTRPluginFramework::Search::GetTotalResults(CTRPluginFramework::Header const&) const
0012a470 0000000c T CTRPluginFramework::Search::GetType() const
0012a47c 00000018 T CTRPluginFramework::Search::IsFirstUnknownSearch() const
0012a494 00000070 T CTRPluginFramework::Search::WriteHeader()
0012a504 00000058 T CTRPluginFramework::Search::WriteResults()
0012a55c 0000004c T CTRPluginFramework::Search::GetRegionIndex(unsigned long)
0012a5a8 00000220 T CTRPluginFramework::Search::ExtractPreviousHits(void*, unsigned long, unsigned long, unsigned long&, bool)
0012a7c8 00000240 T CTRPluginFramework::Search::Search(CTRPluginFramework::Search*)
0012a7c8 00000240 T CTRPluginFramework::Search::Search(CTRPluginFramework::Search*)
0012aa08 000000d8 W void std::vector<CTRPluginFramework::Search::RegionIndex, std::allocator<CTRPluginFramework::Search::RegionIndex> >::_M_realloc_insert<CTRPluginFramework::Search::RegionIndex const&>(__gnu_cxx::__normal_iterator<CTRPluginFramework::Search::RegionIndex*, std::vector<CTRPluginFramework::Search::RegionIndex, std::allocator<CTRPluginFramework::Search::RegionIndex> > >, CTRPluginFramework::Search::RegionIndex const&)
0012aae0 0000008c T CTRPluginFramework::Search::CreateIndexTable()
0012ab6c 000001a8 T CTRPluginFramework::Search::Search(CTRPluginFramework::Search*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
0012ab6c 000001a8 T CTRPluginFramework::Search::Search(CTRPluginFramework::Search*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
0012ad14 00000080 T CTRPluginFramework::Search::Cancel()
0012ad94 00000118 T CTRPluginFramework::Search::ExecuteSearch()
0012aeac 00000090 T CTRPluginFramework::EventManager::EventManager()
0012aeac 00000090 T CTRPluginFramework::EventManager::EventManager()
0012af3c 00000168 W void std::deque<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >::_M_push_back_aux<CTRPluginFramework::Event const&>(CTRPluginFramework::Event const&)
0012b0a4 00000044 W std::deque<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >::push_back(CTRPluginFramework::Event const&)
0012b0e8 0000028c T CTRPluginFramework::EventManager::ProcessEvents()
0012b374 00000104 T CTRPluginFramework::EventManager::PopEvent(CTRPluginFramework::Event&, bool)
0012b478 00000008 T CTRPluginFramework::EventManager::PollEvent(CTRPluginFramework::Event&)
0012b480 00000024 t addrMapNodeComparator(rbtree_node const*, rbtree_node const*)
0012b4a4 00000004 t addrMapNodeDestructor(rbtree_node*)
0012b4a8 00000110 T CTRPluginFramework::Heap::MemAlign(unsigned int, unsigned int)
0012b5b8 00000008 T CTRPluginFramework::Heap::Alloc(unsigned int)
0012b5c0 00000050 T CTRPluginFramework::Heap::Free(void*)
0012b610 0000000c T CTRPluginFramework::Heap::SpaceFree()
0012b61c 00000128 T CTRPluginFramework::ProcessImpl::Initialize()
0012b744 0000004c T CTRPluginFramework::ProcessImpl::UpdateThreadHandle()
0012b790 00000018 T CTRPluginFramework::ProcessImpl::IsPaused()
0012b7a8 00000018 T IsPaused
0012b7c0 00000188 T CTRPluginFramework::ProcessImpl::Pause(bool)
0012b948 00000158 T CTRPluginFramework::ProcessImpl::Play(bool)
0012baa0 00000060 T CTRPluginFramework::FromPhysicalToVirtual(unsigned long)
0012bb00 00000018 T CTRPluginFramework::GetBPP(GSPGPU_FramebufferFormats)
0012bb18 00000030 T CTRPluginFramework::ScreenImpl::ScreenImpl(unsigned long, unsigned long, bool)
0012bb18 00000030 T CTRPluginFramework::ScreenImpl::ScreenImpl(unsigned long, unsigned long, bool)
0012bb48 00000060 T CTRPluginFramework::ScreenImpl::Initialize()
0012bba8 000000a8 T CTRPluginFramework::ScreenImpl::Fade(float, bool)
0012bc50 00000068 T CTRPluginFramework::ScreenImpl::Acquire(unsigned long, unsigned long, unsigned long, unsigned long)
0012bcb8 000000b4 T CTRPluginFramework::ScreenImpl::Copy()
0012bd6c 000000b8 T CTRPluginFramework::ScreenImpl::Acquire()
0012be24 00000008 T CTRPluginFramework::ScreenImpl::IsTopScreen()
0012be2c 0000005c T CTRPluginFramework::ScreenImpl::Is3DEnabled()
0012be88 00000118 T CTRPluginFramework::ScreenImpl::Flush()
0012bfa0 00000118 T CTRPluginFramework::ScreenImpl::Invalidate()
0012c0b8 00000058 T CTRPluginFramework::ScreenImpl::Flash(CTRPluginFramework::Color&)
0012c110 00000078 T CTRPluginFramework::ScreenImpl::Clean()
0012c188 00000074 T CTRPluginFramework::ScreenImpl::SwapBuffer(bool, bool)
0012c1fc 00000008 T CTRPluginFramework::ScreenImpl::GetFormat()
0012c204 00000008 T CTRPluginFramework::ScreenImpl::GetStride()
0012c20c 00000008 T CTRPluginFramework::ScreenImpl::GetBytesPerPixel()
0012c214 0000001c T CTRPluginFramework::ScreenImpl::GetFramebufferInfos(int&, int&, GSPGPU_FramebufferFormats&)
0012c230 0000001c T CTRPluginFramework::ScreenImpl::GetLeftFramebuffer(bool)
0012c24c 00000054 T CTRPluginFramework::ScreenImpl::GetLeftFramebuffer(int, int)
0012c2a0 00000030 T CTRPluginFramework::ScreenImpl::GetRightFramebuffer(bool)
0012c2d0 00000058 T CTRPluginFramework::ScreenImpl::GetRightFramebuffer(int, int)
0012c328 00000074 T CTRPluginFramework::ScreenImpl::GetPosFromAddress(unsigned long, int&, int&)
0012c39c 000000f0 T CTRPluginFramework::SystemImpl::Initialize()
0012c48c 00000010 T CTRPluginFramework::SystemImpl::GetIOBaseLCD()
0012c49c 00000010 T CTRPluginFramework::SystemImpl::GetIOBasePDC()
0012c4ac 00000028 T CTRPluginFramework::ARCode::ToString[abi:cxx11]() const
0012c4d4 00000020 W std::vector<unsigned char, std::allocator<unsigned char> >::~vector()
0012c4d4 00000020 W std::vector<unsigned char, std::allocator<unsigned char> >::~vector()
0012c4f4 00000088 T CTRPluginFramework::ActionReplayPriv::Str2U32(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, bool&)
0012c57c 00000138 T CTRPluginFramework::ARCode::ARCode(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, bool&)
0012c57c 00000138 T CTRPluginFramework::ARCode::ARCode(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, bool&)
0012c6b4 00000104 T CTRPluginFramework::ARCode::Update(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
0012c7b8 0000006c T CTRPluginFramework::ARCode::Update()
0012c824 000000c4 T CTRPluginFramework::ARCode::ARCode(CTRPluginFramework::ARCode const&)
0012c824 000000c4 T CTRPluginFramework::ARCode::ARCode(CTRPluginFramework::ARCode const&)
0012c8e8 00000040 T CTRPluginFramework::ARCode::ARCode(unsigned char, unsigned long, unsigned long)
0012c8e8 00000040 T CTRPluginFramework::ARCode::ARCode(unsigned char, unsigned long, unsigned long)
0012c928 00000040 T CTRPluginFramework::ARCodeContext::Update()
0012c968 00000048 T CTRPluginFramework::ARCodeContext::Clear()
0012c9b0 00000074 t _GLOBAL__sub_I__ZN18CTRPluginFramework11g_codeTypesE
0012ca24 00000060 t CTRPluginFramework::GetCond32Str(unsigned long, unsigned long, char const*)
0012ca84 000000cc t CTRPluginFramework::GetCond16Str(unsigned long, unsigned long, char const*)
0012cb50 0000000c t void __gnu_cxx::new_allocator<CTRPluginFramework::ARCode>::construct<CTRPluginFramework::ARCode, CTRPluginFramework::ARCode const&>(CTRPluginFramework::ARCode*, CTRPluginFramework::ARCode const&) [clone .isra.29]
0012cb50 0000000c t void __gnu_cxx::new_allocator<CTRPluginFramework::ARCode>::construct<CTRPluginFramework::ARCode, CTRPluginFramework::ARCode>(CTRPluginFramework::ARCode*, CTRPluginFramework::ARCode&&) [clone .isra.51]
0012cb5c 00000088 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(char const*, std::allocator<char> const&) [clone .isra.85]
0012cbe4 0000005c t CTRPluginFramework::ColorToString(CTRPluginFramework::Color const&)
0012cc40 00000770 t CTRPluginFramework::ColorCodeLine(CTRPluginFramework::ARCode const&)
0012d3b0 00000080 T CTRPluginFramework::ARCodeEditor::CodeLine::CodeLine(CTRPluginFramework::ARCode&)
0012d3b0 00000080 T CTRPluginFramework::ARCodeEditor::CodeLine::CodeLine(CTRPluginFramework::ARCode&)
0012d430 00000050 T CTRPluginFramework::ARCodeEditor::CodeLine::CodeLine(CTRPluginFramework::ARCodeEditor::CodeLine&&)
0012d430 00000050 T CTRPluginFramework::ARCodeEditor::CodeLine::CodeLine(CTRPluginFramework::ARCodeEditor::CodeLine const&)
0012d430 00000050 T CTRPluginFramework::ARCodeEditor::CodeLine::CodeLine(CTRPluginFramework::ARCodeEditor::CodeLine&&)
0012d430 00000050 T CTRPluginFramework::ARCodeEditor::CodeLine::CodeLine(CTRPluginFramework::ARCodeEditor::CodeLine const&)
0012d480 00000b10 T CTRPluginFramework::ARCodeEditor::CodeLine::Update()
0012df90 000001a0 T CTRPluginFramework::ARCodeEditor::ARCodeEditor()
0012df90 000001a0 T CTRPluginFramework::ARCodeEditor::ARCodeEditor()
0012e130 000002e4 T CTRPluginFramework::ARCodeEditor::_RenderTop()
0012e414 0000001c T CTRPluginFramework::ARCodeEditor::_RenderBottom()
0012e430 00000088 T CTRPluginFramework::ARCodeEditor::_Update()
0012e4b8 00000038 W std::vector<CTRPluginFramework::ARCodeEditor::CodeLine, std::allocator<CTRPluginFramework::ARCodeEditor::CodeLine> >::clear()
0012e4f0 00000184 W void std::vector<CTRPluginFramework::ARCodeEditor::CodeLine, std::allocator<CTRPluginFramework::ARCodeEditor::CodeLine> >::_M_realloc_insert<CTRPluginFramework::ARCodeEditor::CodeLine>(__gnu_cxx::__normal_iterator<CTRPluginFramework::ARCodeEditor::CodeLine*, std::vector<CTRPluginFramework::ARCodeEditor::CodeLine, std::allocator<CTRPluginFramework::ARCodeEditor::CodeLine> > >, CTRPluginFramework::ARCodeEditor::CodeLine&&)
0012e674 00000044 W void std::vector<CTRPluginFramework::ARCodeEditor::CodeLine, std::allocator<CTRPluginFramework::ARCodeEditor::CodeLine> >::emplace_back<CTRPluginFramework::ARCodeEditor::CodeLine>(CTRPluginFramework::ARCodeEditor::CodeLine&&)
0012e6b8 00000064 W std::vector<CTRPluginFramework::ARCode, std::allocator<CTRPluginFramework::ARCode> >::_M_check_len(unsigned int, char const*) const
0012e71c 0000002c W void std::_Destroy_aux<false>::__destroy<CTRPluginFramework::ARCode*>(CTRPluginFramework::ARCode*, CTRPluginFramework::ARCode*)
0012e748 00000028 W std::vector<CTRPluginFramework::ARCode, std::allocator<CTRPluginFramework::ARCode> >::~vector()
0012e748 00000028 W std::vector<CTRPluginFramework::ARCode, std::allocator<CTRPluginFramework::ARCode> >::~vector()
0012e770 0000004c W CTRPluginFramework::ARCode::operator=(CTRPluginFramework::ARCode const&)
0012e7bc 00000064 W CTRPluginFramework::ARCode* std::__uninitialized_copy<false>::__uninit_copy<CTRPluginFramework::ARCode const*, CTRPluginFramework::ARCode*>(CTRPluginFramework::ARCode const*, CTRPluginFramework::ARCode const*, CTRPluginFramework::ARCode*)
0012e820 000000bc W std::vector<CTRPluginFramework::ARCode, std::allocator<CTRPluginFramework::ARCode> >::_M_insert_rval(__gnu_cxx::__normal_iterator<CTRPluginFramework::ARCode const*, std::vector<CTRPluginFramework::ARCode, std::allocator<CTRPluginFramework::ARCode> > >, CTRPluginFramework::ARCode&&)
0012e8dc 00000328 T CTRPluginFramework::ARCodeEditor::_ReloadCodeLines()
0012ec04 000004c0 T CTRPluginFramework::ARCodeEditor::CodeLine::Edit(unsigned long, unsigned long)
0012f0c4 00000468 T CTRPluginFramework::ARCodeEditor::_ProcessEvent(CTRPluginFramework::Event&)
0012f52c 000004bc T CTRPluginFramework::ARCodeEditor::operator()(std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >&)
0012f9e8 000000f0 T CTRPluginFramework::ARCodeEditor::Edit(CTRPluginFramework::ARCodeContext&)
0012fad8 00000020 t std::vector<CTRPluginFramework::ActionReplay_ProcessString(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, bool)::PColor, std::allocator<CTRPluginFramework::ActionReplay_ProcessString(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, bool)::PColor> >::~vector()
0012fad8 00000020 t std::vector<CTRPluginFramework::ActionReplay_ProcessString(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, bool)::PColor, std::allocator<CTRPluginFramework::ActionReplay_ProcessString(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, bool)::PColor> >::~vector()
0012faf8 0000001c t bool __gnu_cxx::__ops::_Iter_pred<CTRPluginFramework::Rtrim(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)::{lambda(char)#1}>::operator()<std::reverse_iterator<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >(std::reverse_iterator<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >) [clone .isra.63]
0012fb14 00000114 t CTRPluginFramework::Rtrim(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)
0012fc28 00000078 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(char const*, std::allocator<char> const&) [clone .isra.85]
0012fca0 00000018 t bool __gnu_cxx::__ops::_Iter_pred<CTRPluginFramework::Ltrim(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)::{lambda(char)#1}>::operator()<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >(__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >) [clone .isra.59]
0012fcb8 000000f4 t CTRPluginFramework::Ltrim(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)
0012fdac 00000010 t CTRPluginFramework::Trim(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)
0012fdbc 000000d8 T CTRPluginFramework::ActionReplay_OpenCheatsFile(CTRPluginFramework::File&, bool)
0012fe94 00000054 T CTRPluginFramework::ActionReplay_CheckCodeTypeValidity(unsigned long)
0012fee8 00000044 T CTRPluginFramework::ActionReplay_IsHexCode(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
0012ff2c 00000048 T CTRPluginFramework::ActionReplay_IsValidCode(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
0012ff74 000004d8 T CTRPluginFramework::ActionReplay_ProcessString(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, bool)
0013044c 00000044 W std::_Deque_base<CTRPluginFramework::MenuFolderImpl*, std::allocator<CTRPluginFramework::MenuFolderImpl*> >::~_Deque_base()
0013044c 00000044 W std::_Deque_base<CTRPluginFramework::MenuFolderImpl*, std::allocator<CTRPluginFramework::MenuFolderImpl*> >::~_Deque_base()
00130490 00000014 W std::deque<CTRPluginFramework::MenuFolderImpl*, std::allocator<CTRPluginFramework::MenuFolderImpl*> >::~deque()
00130490 00000014 W std::deque<CTRPluginFramework::MenuFolderImpl*, std::allocator<CTRPluginFramework::MenuFolderImpl*> >::~deque()
001304a4 00000020 W std::deque<CTRPluginFramework::MenuFolderImpl*, std::allocator<CTRPluginFramework::MenuFolderImpl*> >::back()
001304c4 0000018c W void std::vector<CTRPluginFramework::ARCode, std::allocator<CTRPluginFramework::ARCode> >::_M_realloc_insert<CTRPluginFramework::ARCode const&>(__gnu_cxx::__normal_iterator<CTRPluginFramework::ARCode*, std::vector<CTRPluginFramework::ARCode, std::allocator<CTRPluginFramework::ARCode> > >, CTRPluginFramework::ARCode const&)
00130650 00000168 W void std::deque<CTRPluginFramework::MenuFolderImpl*, std::allocator<CTRPluginFramework::MenuFolderImpl*> >::_M_push_back_aux<CTRPluginFramework::MenuFolderImpl* const&>(CTRPluginFramework::MenuFolderImpl* const&)
001307b8 00000820 T CTRPluginFramework::ActionReplay_LoadCodes(CTRPluginFramework::MenuFolderImpl*)
00130fd8 000000c4 t CTRPluginFramework::RemoveFormat(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
0013109c 00000078 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(char const*, std::allocator<char> const&) [clone .isra.25]
00131114 00000344 T CTRPluginFramework::ActionReplay_WriteToFile(CTRPluginFramework::LineWriter&, CTRPluginFramework::MenuItem*)
00131458 00000054 t CTRPluginFramework::ActionReplay_ExecuteCode(CTRPluginFramework::MenuEntryImpl*)
001314ac 00000060 T CTRPluginFramework::MenuEntryActionReplay::~MenuEntryActionReplay()
001314ac 00000060 T CTRPluginFramework::MenuEntryActionReplay::~MenuEntryActionReplay()
0013150c 0000001c T CTRPluginFramework::MenuEntryActionReplay::~MenuEntryActionReplay()
00131528 00000050 T CTRPluginFramework::MenuEntryActionReplay::MenuEntryActionReplay(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
00131528 00000050 T CTRPluginFramework::MenuEntryActionReplay::MenuEntryActionReplay(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
00131578 0000009c T CTRPluginFramework::MenuEntryActionReplay::Update()
00131614 0000002c W MemBlock::Create(unsigned char*, unsigned long)
00131640 00000034 W MemPool::DelBlock(MemBlock*)
00131674 0000005c T MemPool::CoalesceRight(MemBlock*)
001316d0 0000011c T MemPool::Allocate(MemChunk&, unsigned long, int)
001317ec 00000100 T MemPool::Deallocate(MemChunk const&)
001318ec 00000020 T MemPool::GetFreeSpace()
0013190c 00000124 T __system_allocateHeaps
00131a30 00000034 T arm11kSetKProcessId
00131a64 00000028 T arm11kGetCurrentKProcess
00131a8c 00000024 T arm11kMemcpy
00131ab0 00000064 T arm11kSvcControlMemory
00131b14 00000018 T getKernelObjectPtr
00131b2c 000000a0 T cfguInit
00131bcc 00000034 T cfguExit
00131c00 00000044 T CFGU_GetConfigInfoBlk2
00131c44 00000014 T CFGU_GetSystemLanguage
00131c58 000000a8 T fontEnsureMapped
00131d00 0000011c T fontGlyphIndexFromCodePoint
00131e1c 00000074 T fontGetCharWidthInfo
00131e90 00000050 T srvExit
00131ee0 00000034 T srvRegisterClient
00131f14 00000064 T srvInit
00131f78 00000068 T srvGetServiceHandleDirect
00131fe0 00000004 T srvGetServiceHandle
00131fe4 00000034 T srvPublishToSubscriber
00132018 0000000c T __sync_init
00132024 00000018 T __sync_fini
0013203c 00000018 T LightLock_Init
00132054 0000008c T LightLock_Lock
001320e0 00000034 T LightLock_TryLock
00132114 00000050 T LightLock_Unlock
00132164 00000018 T RecursiveLock_Init
0013217c 00000030 T RecursiveLock_Lock
001321ac 00000044 T RecursiveLock_TryLock
001321f0 00000034 T RecursiveLock_Unlock
00132224 00000030 T LightEvent_Init
00132254 00000060 T LightEvent_Clear
001322b4 00000060 T LightEvent_Pulse
00132314 000000b4 T LightEvent_Signal
001323c8 000000a8 T LightEvent_Wait
00132470 00000168 T threadCreate
001325d8 0000001c T threadFree
001325f4 00000024 T threadJoin
00132618 00000030 T threadGetCurrent
00132648 0000003c T threadExit
00132684 0000003c t _thread_begin
001326c0 00000088 T acInit
00132748 00000034 T acExit
0013277c 000000a0 T amInit
0013281c 00000034 T amExit
00132850 00000128 T aptSendCommand
00132978 0000006c T APT_CheckNew3DS
001329e4 00000048 T APT_GetSharedFont
00132a2c 00000028 t fsSession
00132a54 00000040 t fsSessionForArchive
00132a94 00000038 T fsExit
00132acc 00000028 T FSUSER_Initialize
00132af4 000000b0 T fsInit
00132ba4 00000080 T FSUSER_OpenFile
00132c24 00000068 T FSUSER_DeleteFile
00132c8c 000000a4 T FSUSER_RenameFile
00132d30 00000070 T FSUSER_CreateDirectory
00132da0 0000006c T FSUSER_OpenDirectory
00132e0c 00000074 T FSUSER_OpenArchive
00132e80 00000058 T FSFILE_Read
00132ed8 00000060 T FSFILE_Write
00132f38 00000038 T FSFILE_GetSize
00132f70 00000028 T FSFILE_SetSize
00132f98 0000003c T FSFILE_Close
00132fd4 00000024 T FSFILE_Flush
00132ff8 00000050 T FSDIR_Read
00133048 0000003c T FSDIR_Close
00133084 000000e8 t gspEventThreadMain
0013316c 00000098 T gspInitEventHandler
00133204 00000040 T gspExitEventHandler
00133244 0000008c T gspExit
001332d0 0000005c T gspWaitForEvent
0013332c 00000044 T GSPGPU_FlushDataCache
00133370 00000044 T GSPGPU_InvalidateDataCache
001333b4 00000064 T GSPGPU_RegisterInterruptRelayQueue
00133418 000000dc T gspInit
001334f4 0000002c T GSPGPU_SaveVramSysArea
00133520 0000002c T GSPGPU_RestoreVramSysArea
0013354c 000000bc T hidExit
00133608 00000034 T hidCheckSectionUpdateTime
0013363c 0000016c T hidScanInput
001337a8 00000010 T hidKeysHeld
001337b8 00000010 T hidKeysDown
001337c8 00000010 T hidKeysUp
001337d8 00000018 T hidTouchRead
001337f0 00000090 T HIDUSER_GetHandles
00133880 00000174 T hidInit
001339f4 00000034 T irrstCheckSectionUpdateTime
00133a28 00000070 T irrstScanInput
00133a98 0000001c T irrstKeysHeld
00133ab4 00000050 T IRRST_GetHandles
00133b04 00000034 T IRRST_Initialize
00133b38 00000124 T irrstInit
00133c5c 0000002c T IRRST_Shutdown
00133c88 000000a8 T irrstExit
00133d30 0000002c t __ctru_get_reent
00133d5c 000000f0 T __system_initSyscalls
00133e4c 0000005c T decode_utf16
00133ea8 00000138 T decode_utf8
00133fe0 00000054 T encode_utf16
00134034 000000e0 T encode_utf8
00134114 000000d4 T utf16_to_utf8
001341e8 000000ac T utf8_to_utf16
00134294 00000054 T rbtree_find
001342e8 00000010 T rbtree_init
001342f8 00000174 t do_insert
0013446c 00000008 T rbtree_insert
00134474 00000014 t is_black
00134488 000002c8 T rbtree_remove
00134750 00000094 T rbtree_rotate
001347e4 T loadCROHooked
00134800 T svcControlMemory
00134820 T svcQueryMemory
00134850 T svcCreateThread
00134870 T svcExitThread
00134878 T svcSleepThread
00134880 T svcSetThreadPriority
00134888 T svcReleaseMutex
00134890 T svcCreateEvent
001348a4 T svcSignalEvent
001348ac T svcClearEvent
001348b4 T svcMapMemoryBlock
001348bc T svcUnmapMemoryBlock
001348c4 T svcCreateAddressArbiter
001348d8 T svcArbitrateAddress
001348f0 T svcCloseHandle
001348f8 T svcWaitSynchronization
00134900 T svcGetSystemTick
00134908 T svcGetSystemInfo
00134920 T svcGetProcessInfo
00134938 T svcConnectToPort
0013494c T svcSendSyncRequest
00134954 T svcOpenProcess
00134968 T svcBreak
00134970 T svcInvalidateProcessDataCache
00134978 T svcFlushProcessDataCache
00134980 T svcControlProcessMemory
00134998 T svcBackdoor
001349a0 T svcKernelSetState
001349a8 T svcQueryProcessMemory
001349cc 0000004c T Hook::Hook()
001349cc 0000004c T Hook::Hook()
00134a18 000000c8 T Hook::Initialize(unsigned long, unsigned long, bool)
00134ae0 00000060 T Hook::Enable()
00134b40 00000060 T Hook::Disable()
00134ba0 0000003c T CTRPluginFramework::MessageBox::MessageBox(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::DialogType)
00134ba0 0000003c T CTRPluginFramework::MessageBox::MessageBox(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::DialogType)
00134bdc 00000034 T CTRPluginFramework::MessageBox::MessageBox(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::DialogType)
00134bdc 00000034 T CTRPluginFramework::MessageBox::MessageBox(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::DialogType)
00134c10 0000003c T CTRPluginFramework::MessageBox::~MessageBox()
00134c10 0000003c T CTRPluginFramework::MessageBox::~MessageBox()
00134c4c 00000008 T CTRPluginFramework::MessageBox::operator()() const
00134c54 00000014 T CTRPluginFramework::Touch::IsDown()
00134c68 00000028 T CTRPluginFramework::Touch::GetPosition()
00134c90 0000002c T CTRPluginFramework::LineReader::LineReader(CTRPluginFramework::File&)
00134c90 0000002c T CTRPluginFramework::LineReader::LineReader(CTRPluginFramework::File&)
00134cbc 00000018 T CTRPluginFramework::LineReader::~LineReader()
00134cbc 00000018 T CTRPluginFramework::LineReader::~LineReader()
00134cd4 00000114 T CTRPluginFramework::LineReader::operator()(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)
00134de8 00000028 T CTRPluginFramework::LineWriter::LineWriter(CTRPluginFramework::File&)
00134de8 00000028 T CTRPluginFramework::LineWriter::LineWriter(CTRPluginFramework::File&)
00134e10 00000080 T CTRPluginFramework::LineWriter::endl[abi:cxx11]()
00134e90 00000048 T CTRPluginFramework::LineWriter::Flush()
00134ed8 0000001c T CTRPluginFramework::LineWriter::~LineWriter()
00134ed8 0000001c T CTRPluginFramework::LineWriter::~LineWriter()
00134ef4 00000070 T CTRPluginFramework::LineWriter::operator<<(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
00134f64 00000018 T CTRPluginFramework::LineWriter::Close()
00134f7c 0000003c T CTRPluginFramework::ResetColor[abi:cxx11]()
00134fb8 00000024 T CTRPluginFramework::operator<<(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, char const*)
00134fdc 00000024 T CTRPluginFramework::operator<<(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
00135000 0000009c T CTRPluginFramework::operator<<(CTRPluginFramework::Color const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
0013509c 00000004 T CTRPluginFramework::CheckBox::~CheckBox()
0013509c 00000004 T CTRPluginFramework::CheckBox::~CheckBox()
001350a0 00000014 T CTRPluginFramework::CheckBox::~CheckBox()
001350b4 000000e4 T CTRPluginFramework::CheckBox::Update(bool, CTRPluginFramework::Vector<int> const&)
00135198 00000060 T CTRPluginFramework::CheckBox::CheckBox(int, int)
00135198 00000060 T CTRPluginFramework::CheckBox::CheckBox(int, int)
001351f8 00000008 T CTRPluginFramework::CheckBox::IsChecked() const
00135200 000000ac T CTRPluginFramework::ComboBox::Draw()
001352ac 000000ac T CTRPluginFramework::ComboBox::operator()()
00135358 0000004c W CTRPluginFramework::ComboBox::~ComboBox()
00135358 0000004c W CTRPluginFramework::ComboBox::~ComboBox()
001353a4 0000001c W CTRPluginFramework::ComboBox::~ComboBox()
001353c0 00000050 T CTRPluginFramework::ComboBox::ComboBox(int, int, int, int)
001353c0 00000050 T CTRPluginFramework::ComboBox::ComboBox(int, int, int, int)
00135410 00000038 T CTRPluginFramework::ComboBox::Clear()
00135448 00000058 T CTRPluginFramework::ComboBox::Add(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
001354a0 00000090 T CTRPluginFramework::ComboBox::Update(bool, CTRPluginFramework::Vector<int> const&)
00135530 00000004 T CTRPluginFramework::FloatingButton::~FloatingButton()
00135530 00000004 T CTRPluginFramework::FloatingButton::~FloatingButton()
00135534 00000014 T CTRPluginFramework::FloatingButton::Draw()
00135548 00000014 T CTRPluginFramework::FloatingButton::operator()()
0013555c 00000014 T CTRPluginFramework::FloatingButton::~FloatingButton()
00135570 000001c0 T CTRPluginFramework::FloatingButton::Update(bool, CTRPluginFramework::Vector<int> const&)
00135730 00000044 T CTRPluginFramework::FloatingButton::FloatingButton(CTRPluginFramework::Rect<int> const&, int (*)(int, int))
00135730 00000044 T CTRPluginFramework::FloatingButton::FloatingButton(CTRPluginFramework::Rect<int> const&, int (*)(int, int))
00135774 000001d8 T CTRPluginFramework::MessageBoxImpl::MessageBoxImpl(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::DialogType)
00135774 000001d8 T CTRPluginFramework::MessageBoxImpl::MessageBoxImpl(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::DialogType)
0013594c 00000170 T CTRPluginFramework::MessageBoxImpl::MessageBoxImpl(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::DialogType)
0013594c 00000170 T CTRPluginFramework::MessageBoxImpl::MessageBoxImpl(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::DialogType)
00135abc 00000078 T CTRPluginFramework::MessageBoxImpl::_ProcessEvent(CTRPluginFramework::Event&)
00135b34 000002bc T CTRPluginFramework::MessageBoxImpl::_Draw()
00135df0 00000104 T CTRPluginFramework::MessageBoxImpl::operator()()
00135ef4 00000020 W CTRPluginFramework::NumericTextBox::~NumericTextBox()
00135ef4 00000020 W CTRPluginFramework::NumericTextBox::~NumericTextBox()
00135f14 0000001c W CTRPluginFramework::NumericTextBox::~NumericTextBox()
00135f30 00000094 T CTRPluginFramework::NumericTextBox::Draw()
00135fc4 00000038 t CTRPluginFramework::NumericTextBox::_UpdateVal() [clone .part.16]
00135ffc 00000068 T CTRPluginFramework::NumericTextBox::_UpdateVal()
00136064 000000f8 T CTRPluginFramework::NumericTextBox::operator()()
0013615c 00000010 T CTRPluginFramework::NumericTextBox::SetValue(unsigned long)
0013616c 00000010 T CTRPluginFramework::NumericTextBox::SetValue(float)
0013617c 00000008 T CTRPluginFramework::NumericTextBox::UseHexadecimal(bool)
00136184 0000000c T CTRPluginFramework::NumericTextBox::Clear()
00136190 00000068 T CTRPluginFramework::NumericTextBox::NumericTextBox(int, int, int, int)
00136190 00000068 T CTRPluginFramework::NumericTextBox::NumericTextBox(int, int, int, int)
001361f8 00000080 T CTRPluginFramework::NumericTextBox::Update(bool, CTRPluginFramework::Vector<int> const&)
00136278 00000008 W CTRPluginFramework::Drawable::operator()()
00136280 00000004 T CTRPluginFramework::TextBox::Update(bool, CTRPluginFramework::Vector<int> const&)
00136284 000002e0 T CTRPluginFramework::TextBox::Draw()
00136564 000000ec T CTRPluginFramework::TextBox::TextBox()
00136564 000000ec T CTRPluginFramework::TextBox::TextBox()
00136650 0000000c T CTRPluginFramework::TextBox::Open() const
0013665c 0000000c T CTRPluginFramework::TextBox::Close() const
00136668 00000008 T CTRPluginFramework::TextBox::IsOpen() const
00136670 0000024c T CTRPluginFramework::TextBox::ProcessEvent(CTRPluginFramework::Event&)
001368bc 0000000c T CTRPluginFramework::TextBox::DrawConst() const
001368c8 00000098 T CTRPluginFramework::TextBox::_GetWordWidth(unsigned char*, float&)
00136960 000000b4 T CTRPluginFramework::CutWordWidth(unsigned char*, float&, float)
00136a14 000000d8 W void std::vector<unsigned char*, std::allocator<unsigned char*> >::_M_realloc_insert<unsigned char* const&>(__gnu_cxx::__normal_iterator<unsigned char**, std::vector<unsigned char*, std::allocator<unsigned char*> > >, unsigned char* const&)
00136aec 0000003c W std::vector<unsigned char*, std::allocator<unsigned char*> >::push_back(unsigned char* const&)
00136b28 000001e8 T CTRPluginFramework::TextBox::_GetTextInfos()
00136d10 00000198 T CTRPluginFramework::TextBox::TextBox(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::Rect<int> const&)
00136d10 00000198 T CTRPluginFramework::TextBox::TextBox(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::Rect<int> const&)
00136ea8 000000e8 T CTRPluginFramework::TextBox::Update(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)
00136f90 00000004 T CTRPluginFramework::TouchKey::~TouchKey()
00136f90 00000004 T CTRPluginFramework::TouchKey::~TouchKey()
00136f94 00000014 T CTRPluginFramework::TouchKey::~TouchKey()
00136fa8 000000a0 T CTRPluginFramework::TouchKey::Update(bool, CTRPluginFramework::Vector<int> const&)
00137048 0000005c T CTRPluginFramework::TouchKey::TouchKey(int, CTRPluginFramework::Rect<int>, bool)
00137048 0000005c T CTRPluginFramework::TouchKey::TouchKey(int, CTRPluginFramework::Rect<int>, bool)
001370a4 000000a0 T CTRPluginFramework::TouchKey::TouchKey(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::Rect<int>, int, bool)
001370a4 000000a0 T CTRPluginFramework::TouchKey::TouchKey(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::Rect<int>, int, bool)
00137144 0000005c T CTRPluginFramework::TouchKey::TouchKey(int, int (*)(int, int, bool), CTRPluginFramework::Rect<int>, bool)
00137144 0000005c T CTRPluginFramework::TouchKey::TouchKey(int, int (*)(int, int, bool), CTRPluginFramework::Rect<int>, bool)
001371a0 00000008 T CTRPluginFramework::TouchKey::Enable(bool)
001371a8 00000128 T CTRPluginFramework::TouchKey::DrawCharacter(CTRPluginFramework::Rect<int> const&, CTRPluginFramework::Color const&)
001372d0 00000088 T CTRPluginFramework::TouchKey::Draw()
00137358 00000098 T CTRPluginFramework::TouchKey::operator()(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)
001373f0 000000ac T CTRPluginFramework::TouchKeyString::TouchKeyString(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::Rect<int>, bool)
001373f0 000000ac T CTRPluginFramework::TouchKeyString::TouchKeyString(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::Rect<int>, bool)
0013749c 000000b0 T CTRPluginFramework::TouchKeyString::Draw()
0013754c 000000a0 T CTRPluginFramework::TouchKeyString::Update(bool, CTRPluginFramework::Vector<int> const&)
001375ec 00000018 T CTRPluginFramework::TouchKeyString::Scroll(float)
00137604 00000030 T CTRPluginFramework::TouchKeyString::operator()()
00137634 00000014 T CTRPluginFramework::UIContainer::UIContainer()
00137634 00000014 T CTRPluginFramework::UIContainer::UIContainer()
00137648 00000024 T CTRPluginFramework::UIContainer::Draw()
0013766c 00000034 T CTRPluginFramework::UIContainer::Update(bool, CTRPluginFramework::Vector<int> const&)
001376a0 00000024 T CTRPluginFramework::UIContainer::ExecuteAll()
001376c4 000000d8 W void std::vector<CTRPluginFramework::Drawable*, std::allocator<CTRPluginFramework::Drawable*> >::_M_realloc_insert<CTRPluginFramework::Drawable* const&>(__gnu_cxx::__normal_iterator<CTRPluginFramework::Drawable**, std::vector<CTRPluginFramework::Drawable*, std::allocator<CTRPluginFramework::Drawable*> > >, CTRPluginFramework::Drawable* const&)
0013779c 00000044 T CTRPluginFramework::UIContainer::operator+=(CTRPluginFramework::Drawable*)
001377e0 000000e4 T CTRPluginFramework::Converter::Converter()
001377e0 000000e4 T CTRPluginFramework::Converter::Converter()
001378c4 00000010 T CTRPluginFramework::Converter::Instance()
001378d4 00000108 T CTRPluginFramework::Converter::_Draw()
001379dc 00000014 W std::deque<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >::~deque()
001379dc 00000014 W std::deque<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >::~deque()
001379f0 000001e0 T CTRPluginFramework::Converter::operator()()
00137bd0 00000078 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(char const*, std::allocator<char> const&) [clone .isra.26]
00137c48 0000004c T CTRPluginFramework::GatewayRAMDumper::GatewayRAMDumper()
00137c48 0000004c T CTRPluginFramework::GatewayRAMDumper::GatewayRAMDumper()
00137c94 000000bc T CTRPluginFramework::GatewayRAMDumper::_WriteHeader()
00137d50 000000e8 T CTRPluginFramework::GatewayRAMDumper::_DrawProgress()
00137e38 00000064 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > std::operator+<char, std::char_traits<char>, std::allocator<char> >(char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
00137e9c 00000314 T CTRPluginFramework::GatewayRAMDumper::_SelectRegion()
001381b0 000000f8 W __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > std::__remove_if<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, __gnu_cxx::__ops::_Iter_equals_val<char const> >(__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, __gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, __gnu_cxx::__ops::_Iter_equals_val<char const>)
001382a8 00000248 T CTRPluginFramework::GatewayRAMDumper::_OpenFile()
001384f0 00000280 T CTRPluginFramework::GatewayRAMDumper::operator()()
00138770 00000004 W CTRPluginFramework::IconButton<CTRPluginFramework::GuideReader, void>::~IconButton()
00138770 00000004 W CTRPluginFramework::IconButton<CTRPluginFramework::GuideReader, void>::~IconButton()
00138774 0000001c W CTRPluginFramework::IconButton<CTRPluginFramework::GuideReader, void>::Draw()
00138790 00000014 W CTRPluginFramework::IconButton<CTRPluginFramework::GuideReader, void>::~IconButton()
001387a4 00000064 W CTRPluginFramework::IconButton<CTRPluginFramework::GuideReader, void>::operator()()
00138808 00000078 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(char const*, std::allocator<char> const&) [clone .isra.36]
00138880 000000c0 T CTRPluginFramework::GuideReader::_LoadBMP()
00138940 000002bc t CTRPluginFramework::CreateFolder(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)
00138bfc 00000228 T CTRPluginFramework::GuideReader::GuideReader()
00138bfc 00000228 T CTRPluginFramework::GuideReader::GuideReader()
00138e24 00000414 t CTRPluginFramework::GuideReader::_ProcessEvent(CTRPluginFramework::Event&) [clone .part.41]
00139238 00000018 T CTRPluginFramework::GuideReader::_ProcessEvent(CTRPluginFramework::Event&)
00139250 00000080 W CTRPluginFramework::IconButton<CTRPluginFramework::GuideReader, void>::Update(bool, CTRPluginFramework::Vector<int> const&)
001392d0 00000154 T CTRPluginFramework::GuideReader::Draw()
00139424 00000070 T CTRPluginFramework::GuideReader::operator()(std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >&, CTRPluginFramework::Time&)
00139494 00000004 W CTRPluginFramework::IconButton<CTRPluginFramework::HexEditor, void>::~IconButton()
00139494 00000004 W CTRPluginFramework::IconButton<CTRPluginFramework::HexEditor, void>::~IconButton()
00139498 0000001c W CTRPluginFramework::IconButton<CTRPluginFramework::HexEditor, void>::Draw()
001394b4 00000014 W CTRPluginFramework::IconButton<CTRPluginFramework::HexEditor, void>::~IconButton()
001394c8 00000064 W CTRPluginFramework::IconButton<CTRPluginFramework::HexEditor, void>::operator()()
0013952c 00000078 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(char const*, std::allocator<char> const&) [clone .isra.48]
001395a4 0000001c T CTRPluginFramework::HexEditor::_RenderBottom()
001395c0 0000002c T CTRPluginFramework::HexEditor::_GetCursorAddress() const
001395ec 00000080 T CTRPluginFramework::HexEditor::_CreateCheat()
0013966c 00000118 T CTRPluginFramework::HexEditor::Goto(unsigned long, bool)
00139784 00000030 T CTRPluginFramework::HexEditor::_MoveBackward()
001397b4 00000044 T CTRPluginFramework::HexEditor::_MoveForward()
001397f8 00000044 T CTRPluginFramework::HexEditor::_ApplyChanges()
0013983c 00000034 T CTRPluginFramework::HexEditor::_DiscardChanges()
00139870 00000054 T CTRPluginFramework::HexEditor::_GotoPreviousRegion()
001398c4 00000054 T CTRPluginFramework::HexEditor::_GotoNextRegion()
00139918 00000280 T CTRPluginFramework::HexEditor::_ProcessEvent(CTRPluginFramework::Event&)
00139b98 00000038 T CTRPluginFramework::HexEditor::_GetChar(unsigned char*, int)
00139bd0 000005e4 T CTRPluginFramework::HexEditor::_RenderTop()
0013a1b4 0000022c T CTRPluginFramework::HexEditor::HexEditor(unsigned long)
0013a1b4 0000022c T CTRPluginFramework::HexEditor::HexEditor(unsigned long)
0013a3e0 00000044 W std::vector<CTRPluginFramework::TouchKey, std::allocator<CTRPluginFramework::TouchKey> >::at(unsigned int)
0013a424 000001e8 T CTRPluginFramework::HexEditor::_PromptForAddress(int)
0013a60c 00000058 T CTRPluginFramework::HexEditor::_SaveThisAddress()
0013a664 000000e8 T CTRPluginFramework::HexEditor::_JumpTo(int)
0013a74c 00000080 W CTRPluginFramework::IconButton<CTRPluginFramework::HexEditor, void>::Update(bool, CTRPluginFramework::Vector<int> const&)
0013a7cc 00000044 T CTRPluginFramework::HexEditor::_Update()
0013a810 00000150 T CTRPluginFramework::HexEditor::_BrowseHistory()
0013a960 000002b0 T CTRPluginFramework::HexEditor::operator()(std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >&)
0013ac10 00000078 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(char const*, std::allocator<char> const&) [clone .isra.36]
0013ac88 000000dc T CTRPluginFramework::Menu::Menu(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, int (*)(int, int))
0013ac88 000000dc T CTRPluginFramework::Menu::Menu(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, int (*)(int, int))
0013ad64 00000118 T CTRPluginFramework::Menu::Menu(CTRPluginFramework::MenuFolderImpl*, int (*)(int, int))
0013ad64 00000118 T CTRPluginFramework::Menu::Menu(CTRPluginFramework::MenuFolderImpl*, int (*)(int, int))
0013ae7c 0000003c T CTRPluginFramework::Menu::Open(CTRPluginFramework::MenuFolderImpl*, int)
0013aeb8 00000030 T CTRPluginFramework::Menu::~Menu()
0013aeb8 00000030 T CTRPluginFramework::Menu::~Menu()
0013aee8 0000000c T CTRPluginFramework::Menu::Append(CTRPluginFramework::MenuItem*) const
0013aef4 00000008 T CTRPluginFramework::Menu::GetFolder() const
0013aefc 00000008 T CTRPluginFramework::Menu::GetRootFolder() const
0013af04 00000028 T CTRPluginFramework::Menu::GetSelectedItem() const
0013af2c 000003a4 T CTRPluginFramework::Menu::Draw() const
0013b2d0 00000084 T CTRPluginFramework::Menu::_ScrollUp(int)
0013b354 00000084 T CTRPluginFramework::Menu::_ScrollDown(int)
0013b3d8 00000230 T CTRPluginFramework::Menu::ProcessEvent(CTRPluginFramework::Event&, CTRPluginFramework::MenuItem**)
0013b608 00000170 T CTRPluginFramework::Menu::Update(CTRPluginFramework::Time const&)
0013b778 00000068 T CTRPluginFramework::Menu::ShowNote()
0013b7e0 00000008 T CTRPluginFramework::Menu::CloseNote()
0013b7e8 00000008 T CTRPluginFramework::Menu::IsNoteOpen()
0013b7f0 00000040 W std::vector<CTRPluginFramework::MenuItem*, std::allocator<CTRPluginFramework::MenuItem*> >::_M_erase(__gnu_cxx::__normal_iterator<CTRPluginFramework::MenuItem**, std::vector<CTRPluginFramework::MenuItem*, std::allocator<CTRPluginFramework::MenuItem*> > >)
0013b830 00000044 T CTRPluginFramework::Menu::Pop()
0013b874 000000bc T CTRPluginFramework::Menu::Insert(CTRPluginFramework::MenuItem*)
0013b930 00000020 W CTRPluginFramework::MenuEntryTools::~MenuEntryTools()
0013b930 00000020 W CTRPluginFramework::MenuEntryTools::~MenuEntryTools()
0013b950 0000001c W CTRPluginFramework::MenuEntryTools::~MenuEntryTools()
0013b96c 00000094 T CTRPluginFramework::MenuEntryTools::MenuEntryTools(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, void (*)(), int (*)(int, int), void*)
0013b96c 00000094 T CTRPluginFramework::MenuEntryTools::MenuEntryTools(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, void (*)(), int (*)(int, int), void*)
0013ba00 00000060 T CTRPluginFramework::MenuEntryTools::MenuEntryTools(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, void (*)(), bool, bool, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
0013ba00 00000060 T CTRPluginFramework::MenuEntryTools::MenuEntryTools(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, void (*)(), bool, bool, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
0013ba60 00000060 T CTRPluginFramework::MenuEntryTools::MenuEntryTools(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, void (*)(CTRPluginFramework::MenuEntryTools*), bool, bool, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
0013ba60 00000060 T CTRPluginFramework::MenuEntryTools::MenuEntryTools(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, void (*)(CTRPluginFramework::MenuEntryTools*), bool, bool, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
0013bac0 00000004 T CTRPluginFramework::MenuEntryTools::TriggerState()
0013bac4 0000000c T CTRPluginFramework::PluginMenuHome::_actionReplayBtn_OnClick()
0013bad0 0000000c T CTRPluginFramework::PluginMenuHome::_gameGuideBtn_OnClick()
0013badc 0000000c T CTRPluginFramework::PluginMenuHome::_searchBtn_OnClick()
0013bae8 0000000c T CTRPluginFramework::PluginMenuHome::_toolsBtn_OnClick()
0013baf4 00000004 W CTRPluginFramework::IconButton<CTRPluginFramework::PluginMenuHome, void>::~IconButton()
0013baf4 00000004 W CTRPluginFramework::IconButton<CTRPluginFramework::PluginMenuHome, void>::~IconButton()
0013baf8 00000004 W CTRPluginFramework::ToggleButton<CTRPluginFramework::PluginMenuHome, void>::~ToggleButton()
0013baf8 00000004 W CTRPluginFramework::ToggleButton<CTRPluginFramework::PluginMenuHome, void>::~ToggleButton()
0013bafc 0000001c W CTRPluginFramework::ToggleButton<CTRPluginFramework::PluginMenuHome, void>::Draw()
0013bb18 0000001c W CTRPluginFramework::IconButton<CTRPluginFramework::PluginMenuHome, void>::Draw()
0013bb34 00000014 W CTRPluginFramework::IconButton<CTRPluginFramework::PluginMenuHome, void>::~IconButton()
0013bb48 00000014 W CTRPluginFramework::ToggleButton<CTRPluginFramework::PluginMenuHome, void>::~ToggleButton()
0013bb5c 000000e8 T CTRPluginFramework::PluginMenuHome::_showStarredBtn_OnClick()
0013bc44 0000003c T CTRPluginFramework::PluginMenuHome::_keyboardBtn_OnClick()
0013bc80 00000058 t CTRPluginFramework::SelectableEntryCount(CTRPluginFramework::MenuFolderImpl&)
0013bcd8 000000b4 t CTRPluginFramework::ScrollUp(int&, CTRPluginFramework::MenuFolderImpl&, int)
0013bd8c 000000e0 t CTRPluginFramework::ScrollDown(int&, CTRPluginFramework::MenuFolderImpl&, int)
0013be6c 0000008c T CTRPluginFramework::PluginMenuHome::_controllerBtn_OnClick()
0013bef8 0000002c T CTRPluginFramework::PluginMenuHome::_InfoBtn_OnClick()
0013bf24 00000064 W CTRPluginFramework::ToggleButton<CTRPluginFramework::PluginMenuHome, void>::operator()()
0013bf88 00000064 W CTRPluginFramework::IconButton<CTRPluginFramework::PluginMenuHome, void>::operator()()
0013bfec 00000078 t std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(char const*, std::allocator<char> const&) [clone .isra.38]
0013c064 00000044 T CTRPluginFramework::decoder(char*, unsigned long const*, int)
0013c0a8 0000000c T CTRPluginFramework::PluginMenuHome::Append(CTRPluginFramework::MenuItem*) const
0013c0b4 0000032c T CTRPluginFramework::PluginMenuHome::_RenderTop()
0013c3e0 00000104 T CTRPluginFramework::PluginMenuHome::_RenderBottom()
0013c4e4 00000260 T CTRPluginFramework::PluginMenuHome::_Update(CTRPluginFramework::Time)
0013c744 00000104 T CTRPluginFramework::PluginMenuHome::_TriggerEntry()
0013c848 000003dc T CTRPluginFramework::PluginMenuHome::_ProcessEvent(CTRPluginFramework::Event&)
0013cc24 000000d0 T CTRPluginFramework::PluginMenuHome::UnStar(CTRPluginFramework::MenuItem*)
0013ccf4 00000080 T CTRPluginFramework::PluginMenuHome::_StarItem()
0013cd74 0000006c T CTRPluginFramework::PluginMenuHome::Init()
0013cde0 00000084 T CTRPluginFramework::PluginMenuHome::AddPluginVersion(unsigned long)
0013ce64 0000005c T CTRPluginFramework::PluginMenuHome::Close(CTRPluginFramework::MenuFolderImpl*)
0013cec0 00000158 W CTRPluginFramework::Button<CTRPluginFramework::PluginMenuHome, void>::Button(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::PluginMenuHome&, void (CTRPluginFramework::PluginMenuHome::*)(), CTRPluginFramework::Rect<int>, int (*)(int, int))
0013cec0 00000158 W CTRPluginFramework::Button<CTRPluginFramework::PluginMenuHome, void>::Button(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, CTRPluginFramework::PluginMenuHome&, void (CTRPluginFramework::PluginMenuHome::*)(), CTRPluginFramework::Rect<int>, int (*)(int, int))
0013d018 00000038 W CTRPluginFramework::Button<CTRPluginFramework::PluginMenuHome, void>::RoundedRatio(unsigned long)
0013d050 0000071c T CTRPluginFramework::PluginMenuHome::PluginMenuHome(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)
0013d050 0000071c T CTRPluginFramework::PluginMenuHome::PluginMenuHome(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&)
0013d76c 00000078 W CTRPluginFramework::Rect<int>::Contains(CTRPluginFramework::Vector<int> const&) const
0013d7e4 00000080 W CTRPluginFramework::IconButton<CTRPluginFramework::PluginMenuHome, void>::Update(bool, CTRPluginFramework::Vector<int> const&)
0013d864 00000080 W CTRPluginFramework::ToggleButton<CTRPluginFramework::PluginMenuHome, void>::Update(bool, CTRPluginFramework::Vector<int> const&)
0013d8e4 0000010c T CTRPluginFramework::PluginMenuHome::operator()(std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >&, int&, CTRPluginFramework::Time&)
0013d9f0 00000008 T CTRPluginFramework::ActionReplay_IsValidAddress(unsigned long, bool)
0013d9f8 00000024 T CTRPluginFramework::Write32(unsigned long, unsigned long)
0013da1c 00000024 T CTRPluginFramework::Write16(unsigned long, unsigned short)
0013da40 00000024 T CTRPluginFramework::Write8(unsigned long, unsigned char)
0013da64 00000028 T CTRPluginFramework::Read32(unsigned long, unsigned long&)
0013da8c 00000028 T CTRPluginFramework::Read16(unsigned long, unsigned short&)
0013dab4 00000028 T CTRPluginFramework::Read8(unsigned long, unsigned char&)
0013dadc 00000020 W std::vector<CTRPluginFramework::ARCode, std::allocator<CTRPluginFramework::ARCode> >::clear()
0013dafc 00001444 T CTRPluginFramework::ARHandler::_Execute(std::vector<CTRPluginFramework::ARCode, std::allocator<CTRPluginFramework::ARCode> > const&)
0013ef40 00000064 T CTRPluginFramework::ARHandler::Execute(std::vector<CTRPluginFramework::ARCode, std::allocator<CTRPluginFramework::ARCode> > const&, unsigned long (&) [2])
0013efa4 00000020 t _GLOBAL__sub_I__ZN18CTRPluginFramework9ARHandler6OffsetE
0013efc4 00000024 t addrMapNodeComparator(rbtree_node const*, rbtree_node const*)
0013efe8 00000004 t addrMapNodeDestructor(rbtree_node*)
0013efec 000000d8 T mappableAlloc
0013f0c4 00000050 T mappableFree
0013f114 00000008 T envGetHandle
0013f11c 0000005c t getSysTime
0013f178 000000fc T __libctru_gtod
0013f274 00000014 W __appExit
0013f288 00000078 W __libctru_exit
0013f300 00000050 T rbtree_node_next
0013f350 00000004 T operator delete[](void*)
0013f354 00000004 T operator new[](unsigned int)
0013f358 0000005c T __cxa_guard_acquire
0013f3b4 0000000c T __cxa_guard_release
0013f3c0 00000060 t __gxx_exception_cleanup(_Unwind_Reason_Code, _Unwind_Control_Block*)
0013f420 00000070 T __cxa_init_primary_exception
0013f490 00000054 T __cxa_throw
0013f4e4 000000b0 T __cxa_rethrow
0013f594 00000020 T __gnu_cxx::recursive_init_error::~recursive_init_error()
0013f594 00000020 T __gnu_cxx::recursive_init_error::~recursive_init_error()
0013f5b4 0000002c T __gnu_cxx::recursive_init_error::~recursive_init_error()
0013f5e0 00000004 T std::exception::~exception()
0013f5e0 00000004 T std::exception::~exception()
0013f5e4 00000004 T std::bad_exception::~bad_exception()
0013f5e4 00000004 T std::bad_exception::~bad_exception()
0013f5e8 0000000c T transaction clone for std::exception::what() const
0013f5e8 0000000c T std::exception::what() const
0013f5f4 0000000c T transaction clone for std::bad_exception::what() const
0013f5f4 0000000c T std::bad_exception::what() const
0013f600 00000018 T std::bad_exception::~bad_exception()
0013f618 00000020 T __cxxabiv1::__si_class_type_info::~__si_class_type_info()
0013f618 00000020 T __cxxabiv1::__si_class_type_info::~__si_class_type_info()
0013f638 0000002c T __cxxabiv1::__si_class_type_info::~__si_class_type_info()
0013f664 0000006c T __cxxabiv1::__si_class_type_info::__do_find_public_src(int, void const*, __cxxabiv1::__class_type_info const*, void const*) const
0013f6d0 000000d4 T __cxxabiv1::__si_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const
0013f7a4 00000044 T __cxxabiv1::__si_class_type_info::__do_upcast(__cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__upcast_result&) const
0013f7e8 0000000c T __cxa_get_globals_fast
0013f7f4 0000000c T __cxa_get_globals
0013f800 00000004 T operator delete(void*, unsigned int)
0013f804 000000d0 T __cxa_begin_catch
0013f8d4 000000d8 T __cxa_end_catch
0013f9ac 00000004 T std::type_info::~type_info()
0013f9ac 00000004 T std::type_info::~type_info()
0013f9b0 00000008 T std::type_info::__is_pointer_p() const
0013f9b0 00000008 T std::type_info::__is_function_p() const
0013f9b8 0000004c T std::type_info::operator==(std::type_info const&) const
0013fa04 00000008 T __cxa_pure_virtual
0013fa0c 00000168 t read_encoded_value_with_base(unsigned char, unsigned int, unsigned char const*, unsigned int*)
0013fb74 00000060 t base_of_encoded_value(unsigned char, _Unwind_Context*) [clone .part.3]
0013fbd4 000000e0 t parse_lsda_header(_Unwind_Context*, unsigned char const*, lsda_header_info*)
0013fcb4 0000074c T __gxx_personality_v0
00140400 00000004 T operator delete(void*)
00140404 0000005c T operator new(unsigned int)
00140460 00000010 T __aeabi_atexit
00140470 000000d0 t (anonymous namespace)::pool::free(void*) [clone .constprop.4]
00140540 000000b4 t (anonymous namespace)::pool::allocate(unsigned int) [clone .constprop.5]
001405f4 00000044 T __cxa_allocate_exception
00140638 00000030 T __cxa_free_exception
00140668 00000040 t _GLOBAL__sub_I__ZN9__gnu_cxx9__freeresEv
001406a8 0000005c T __cxxabiv1::__class_type_info::__do_upcast(__cxxabiv1::__class_type_info const*, void**) const
00140704 00000014 T __cxxabiv1::__class_type_info::__do_find_public_src(int, void const*, __cxxabiv1::__class_type_info const*, void const*) const
00140718 00000020 T __cxxabiv1::__class_type_info::~__class_type_info()
00140718 00000020 T __cxxabiv1::__class_type_info::~__class_type_info()
00140738 0000002c T __cxxabiv1::__class_type_info::~__class_type_info()
00140764 00000068 T __cxxabiv1::__class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const
001407cc 0000002c T __cxxabiv1::__class_type_info::__do_upcast(__cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__upcast_result&) const
001407f8 00000044 T __cxxabiv1::__class_type_info::__do_catch(std::type_info const*, void**, unsigned int) const
0014083c 00000018 T std::__detail::_List_node_base::_M_hook(std::__detail::_List_node_base*)
00140854 00000014 T std::__detail::_List_node_base::_M_unhook()
00140868 0000002c T std::__throw_bad_alloc()
00140894 00000040 T std::__throw_logic_error(char const*)
001408d4 00000040 T std::__throw_invalid_argument(char const*)
00140914 00000040 T std::__throw_length_error(char const*)
00140954 00000040 T std::__throw_out_of_range(char const*)
00140994 0000007c T std::__throw_out_of_range_fmt(char const*, ...)
00140a10 00000038 T std::logic_error::logic_error(char const*)
00140a10 00000038 T std::logic_error::logic_error(char const*)
00140a48 00000020 T std::invalid_argument::invalid_argument(char const*)
00140a48 00000020 T std::invalid_argument::invalid_argument(char const*)
00140a68 00000020 T std::length_error::length_error(char const*)
00140a68 00000020 T std::length_error::length_error(char const*)
00140a88 00000020 T std::out_of_range::out_of_range(char const*)
00140a88 00000020 T std::out_of_range::out_of_range(char const*)
00140aa8 00000084 W std::string::_Rep::_S_create(unsigned int, unsigned int, std::allocator<char> const&)
00140b2c 00000004 W std::string::_Rep::_M_destroy(std::allocator<char> const&)
00140b30 000000b0 W char* std::string::_S_construct<char const*>(char const*, char const*, std::allocator<char> const&, std::forward_iterator_tag)
00140be0 00000040 W std::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(char const*, std::allocator<char> const&)
00140be0 00000040 W std::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(char const*, std::allocator<char> const&)
00140c20 00000054 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_create(unsigned int&, unsigned int)
00140c74 00000014 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_dispose()
00140c88 00000024 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_S_copy_chars(char*, char*, char*)
00140cac 00000024 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_S_copy_chars(char*, char const*, char const*)
00140cd0 000000b8 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_assign(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
00140d88 00000110 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_mutate(unsigned int, unsigned int, char const*, unsigned int)
00140e98 00000074 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_erase(unsigned int, unsigned int)
00140f0c 0000006c W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&&)
00140f0c 0000006c W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&&)
00140f78 00000024 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::~basic_string()
00140f78 00000024 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::~basic_string()
00140f9c 00000090 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::operator=(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&&)
0014102c 00000114 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::reserve(unsigned int)
00141140 0000006c W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::push_back(char)
001411ac 0000006c W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::erase(unsigned int, unsigned int)
00141218 00000028 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::erase(__gnu_cxx::__normal_iterator<char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >)
00141240 00000044 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::erase(__gnu_cxx::__normal_iterator<char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, __gnu_cxx::__normal_iterator<char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >)
00141284 00000018 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::pop_back()
0014129c 00000104 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_replace_aux(unsigned int, unsigned int, unsigned int, char)
001413a0 00000048 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::insert(unsigned int, unsigned int, char)
001413e8 00000288 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_replace(unsigned int, unsigned int, char const*, unsigned int)
00141670 00000038 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::operator=(char const*)
001416a8 0000004c W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::insert(unsigned int, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
001416f4 00000060 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::insert(unsigned int, char const*)
00141754 00000094 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_append(char const*, unsigned int)
001417e8 00000010 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::append(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
001417f8 00000010 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::operator+=(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
00141808 0000002c W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::append(char const*, unsigned int)
00141834 00000048 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::append(char const*)
0014187c 00000048 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::operator+=(char const*)
001418c4 000000a8 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::find(char const*, unsigned int, unsigned int) const
0014196c 00000010 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::find(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned int) const
0014197c 00000070 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::rfind(char const*, unsigned int, unsigned int) const
001419ec 00000030 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::rfind(char const*, unsigned int) const
00141a1c 0000004c W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::compare(char const*) const
00141a68 000000b0 W void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct<char*>(char*, char*, std::forward_iterator_tag)
00141b18 00000030 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
00141b18 00000030 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
00141b48 000000b0 W void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct<char const*>(char const*, char const*, std::forward_iterator_tag)
00141bf8 00000078 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::substr(unsigned int, unsigned int) const
00141c70 00000070 T __gnu_cxx::__throw_insufficient_space(char const*, char const*)
00141ce0 00000078 T __gnu_cxx::__concat_size_t(char*, unsigned int, unsigned int)
00141d58 00000100 T __gnu_cxx::__snprintf_lite(char*, unsigned int, char const*, std::__va_list)
00141e58 00000014 T std::get_new_handler()
00141e6c 00000034 T __cxxabiv1::__terminate(void (*)())
00141ea0 00000018 T std::terminate()
00141eb8 0000000c T __cxxabiv1::__unexpected(void (*)())
00141ec4 00000018 T std::unexpected()
00141edc 00000014 T std::get_terminate()
00141ef0 00000014 T std::get_unexpected()
00141f04 0000000c T std::bad_alloc::what() const
00141f10 00000020 T std::bad_alloc::~bad_alloc()
00141f10 00000020 T std::bad_alloc::~bad_alloc()
00141f30 0000002c T std::bad_alloc::~bad_alloc()
00141f5c T __cxa_end_cleanup
00141f6c 00000138 T __cxa_type_match
001420a4 000000b4 T __cxa_begin_cleanup
00142158 000000b4 T __gnu_end_cleanup
0014220c 00000070 t __cxxabiv1::__is_gxx_exception_class(char*)
0014227c 0000002c T __cxa_call_terminate
001422a8 0000013c T __cxa_call_unexpected
001423e4 00000008 T std::logic_error::what() const
001423ec 00000064 T std::logic_error::~logic_error()
001423ec 00000064 T std::logic_error::~logic_error()
00142450 0000001c T std::logic_error::~logic_error()
0014246c 00000020 T std::invalid_argument::~invalid_argument()
0014246c 00000020 T std::invalid_argument::~invalid_argument()
0014248c 00000028 T std::invalid_argument::~invalid_argument()
001424b4 00000020 T std::length_error::~length_error()
001424b4 00000020 T std::length_error::~length_error()
001424d4 00000028 T std::length_error::~length_error()
001424fc 00000020 T std::out_of_range::~out_of_range()
001424fc 00000020 T std::out_of_range::~out_of_range()
0014251c 00000028 T std::out_of_range::~out_of_range()
00142548 00000174 T ceil
001426bc 000000b8 T ceilf
00142778 00000174 T floor
001428ec 00000088 T roundf
00142978 00000020 T log2
00142998 0000015c T log
00142af8 000002c4 T __ieee754_log
00142dbc 00000008 T matherr
00142dc8 00000010 T nan
00142dd8 0000002c t __aeabi_f2lz
00142dd8 0000002c T __fixsfdi
00142e08 00000050 t __aeabi_f2ulz
00142e08 00000050 T __fixunssfdi
00142e58 00000158 t __udivmoddi4
00142fb0 00000018 t selfrel_offset31
00142fc8 0000008c t search_EIT_table
00143054 00000040 t __gnu_unwind_get_pr_addr
00143094 00000118 t get_eit_entry
001431ac 00000088 t restore_non_core_regs
00143234 00000014 t _Unwind_decode_typeinfo_ptr.isra.0
00143248 00000004 t _Unwind_DebugHook
0014324c 00000068 t unwind_phase2
001432b4 00000134 t unwind_phase2_forced
001433e8 000000a8 t __gnu_Unwind_RaiseException
00143490 00000024 t __gnu_Unwind_ForcedUnwind
001434b4 00000074 t __gnu_Unwind_Resume
00143528 00000020 t __gnu_Unwind_Resume_or_Rethrow
00143548 00000004 t _Unwind_Complete
0014354c 00000018 t _Unwind_DeleteException
00143564 00000068 t _Unwind_VRS_Get
001435cc 0000002c t _Unwind_GetGR
001435f8 00000068 t _Unwind_VRS_Set
00143660 0000002c t _Unwind_SetGR
0014368c 000000c0 t __gnu_Unwind_Backtrace
0014374c 0000044c t __gnu_unwind_pr_common
00143b98 00000008 T __aeabi_unwind_cpp_pr0
00143ba0 00000008 W __aeabi_unwind_cpp_pr1
00143ba8 00000008 W __aeabi_unwind_cpp_pr2
00143bb0 00000418 t _Unwind_VRS_Pop
00143fc8 00000060 t next_unwind_byte
00144028 0000002c t _Unwind_GetGR.constprop.0
00144054 00000004 t unwind_UCB_from_context
00144058 000003c8 t __gnu_unwind_execute
00144420 00000048 t __gnu_unwind_frame
00144468 00000010 t _Unwind_GetRegionStart
00144478 0000001c t _Unwind_GetLanguageSpecificData
00144494 00000008 t _Unwind_GetDataRelBase
0014449c 00000008 t _Unwind_GetTextRelBase
001444a4 00000010 T ctime
001444b4 00000014 T __cxa_atexit
001444c8 0000000c T __errno
001444d4 00000034 T exit
00144508 00000040 T __libc_fini_array
00144548 0000007c T __libc_init_array
001445c4 0000001c T isspace
001445e0 0000001c T isxdigit
001445fc 0000001c T localtime
00144618 00000364 T localtime_r
0014497c 00000024 T __locale_mb_cur_max
001449a0 00000008 T __locale_ctype_ptr_l
001449a8 00000024 T __locale_ctype_ptr
001449cc 00000018 T malloc
001449e4 00000018 T free
001449fc 000007a8 T _malloc_r
001451a4 000002fc T __utf8_mbtowc
001454a0 00000100 T memchr
001455a0 000000fc T memcmp
0014569c 0000010c T memcpy
001457a8 0000013c T memmove
001458e4 00000110 T memset
001459f4 0000000c T __malloc_lock
00145a00 0000000c T __malloc_unlock
00145a0c 00000064 T sprintf
00145a70 00000008 T __seofread
00145a78 000000f0 T strcpy
00145b68 00000158 t iso_year_adjust
00145cc0 00001024 t __strftime
00146ce4 00000050 T strftime
00146d34 0000005c T strlen
00146d90 000000f8 T strncmp
00146e88 000000d8 T strncpy
00146f60 00000054 t sulp
00146fb8 00001464 T _strtod_l
00148420 000000b8 T strtof
001484d8 000001bc t _strtol_l.isra.0
00148694 00000050 T _strtol_r
001486e8 00000260 t _strtoull_l.isra.0
00148948 00000050 T _strtoull_r
00148998 000001d0 t _strtoul_l.isra.0
00148b68 00000050 T _strtoul_r
00148bb8 00000054 T strtoul
00148c0c 000074a0 t get_arg
001500b0 00003e2c T _svfprintf_r
00153edc 00000038 T time
00153f14 00000218 T __tzcalc_limits
0015412c 0000000c T __tz_lock
00154138 0000000c T __tz_unlock
00154144 00000010 T _tzset_unlocked
00154154 0000049c T _tzset_unlocked_r
001545f0 000000a0 T _vsnprintf_r
00154690 00000038 T vsnprintf
001546c8 000000a0 T _wcrtomb_r
00154768 00000020 T _wcsrtombs_r
00154788 000000e8 T __utf8_wctomb
00154870 0000000c T abs
0015487c 0000001c T asctime
00154898 00000078 T asctime_r
00154910 000000f4 T __register_exitproc
00154a04 00000170 T __call_exitprocs
00154b74 000001bc t quorem
00154d30 00001224 T _dtoa_r
00155f54 000000f8 T _malloc_trim_r
0015604c 000002e4 T _free_r
00156330 00000104 t rshift
00156434 000007f8 T __gethex
00156c2c 00000060 T __match
00156c8c 00000254 T __hexnan
00156ee0 000000c8 T _findenv_r
00156fa8 00000018 T _getenv_r
00156fc0 0000000c T __gettzinfo
00156fcc 00000280 T gmtime_r
0015724c 0000000c T labs
00157258 00000008 T __localeconv_l
00157260 00000024 T _localeconv_r
00157284 00000088 T _Balloc
0015730c 0000001c T _Bfree
00157328 000000d0 T __multadd
001573f8 000000e0 T __s2b
001574d8 00000058 T __hi0bits
00157530 0000009c T __lo0bits
001575cc 00000020 T __i2b
001575ec 000001d4 T __multiply
001577c0 00000100 T __pow5mult
001578c0 000000e8 T __lshift
001579a8 0000005c T __mcmp
00157a04 00000168 T __mdiff
00157b6c 00000078 T __ulp
00157be4 000000d0 T __b2d
00157cb4 00000104 T __d2b
00157db8 00000084 T __ratio
00157e3c 00000088 T __copybits
00157ec4 00000078 T __any_on
00157f3c 0000000c T nanf
00157f48 0000009c T frexp
00157fe4 00000064 T siprintf
00158048 00000074 T siscanf
001580bc 000000c8 T sniprintf
00158184 000074a0 t get_arg
0015f624 00000188 T __ssprint_r
0015f7ac 0000295c T _svfiprintf_r
00162108 000000dc T _sungetc_r
001621e4 0000006c T __ssrefill_r
00162250 000000c8 T _sfread_r
00162318 00001d84 T __ssvfiscanf_r
0016409c 000000a4 T __submore
00164140 00000170 T _wcsnrtombs_l
001642b0 00000064 T _wcsnrtombs_r
00164314 00000090 T _calloc_r
001643a4 0000000c T __env_lock
001643b0 0000000c T __env_unlock
001643bc 00000074 T iswspace
00164430 000001e0 t __jp2uc
00164610 000000c4 T _jp2uc
001646d4 000000b4 T _mbrtowc_r
00164788 000004d0 T _realloc_r
00164c58 000000cc T __sccl
00164d24 00000274 t _strtoll_l.isra.0
00164f98 00000050 T _strtoll_r
00164fe8 0000002c T _gettimeofday_r
00165014 00000070 T _sbrk_r
00165084 00000024 T _exit
001650a8 00000018 T __libc_lock_acquire
001650c0 00000018 T __libc_lock_release
001650d8 00000018 T __libc_lock_acquire_recursive
001650f0 00000018 T __libc_lock_release_recursive
00165108 00000028 T __getreent
00165130 T _fini
00165180 000001e8 r CTRPluginFramework::eliminationMode(CTRPluginFramework::MenuEntry*)::buffer1
00165368 0000000c r CTRPluginFramework::eliminationMode(CTRPluginFramework::MenuEntry*)::buffer2
00165374 00000014 r CTRPluginFramework::eliminationMode(CTRPluginFramework::MenuEntry*)::buffer3
00165388 0000001c r CTRPluginFramework::eliminationMode(CTRPluginFramework::MenuEntry*)::buffer4
001653b0 00000030 r ._184
001653e8 00000058 r CTRPluginFramework::g_OSDPattern
00165440 00000a00 r font
00165e40 00000038 r CTRPluginFramework::stable
00165e78 00000038 r CTRPluginFramework::ktable
00165eb0 0000001c R vtable for CTRPluginFramework::MenuEntryImpl
00165ecc 00000014 R vtable for CTRPluginFramework::MenuFolderImpl
00165ee0 00000030 r ._184
00165f30 00000038 R vtable for CTRPluginFramework::Search32
00165f68 00000038 R vtable for CTRPluginFramework::Search
00165fa0 00000005 r CSWTCH.47
00165fa8 00000014 R vtable for CTRPluginFramework::ARCode
00165fbc 0000002d r ._89
00165fec 00000080 r CTRPluginFramework::KeysToString(unsigned long)::keysText
0016606c 0000000c r CTRPluginFramework::CommentCodeLine(CTRPluginFramework::ARCode const&)::condstr
00166078 00000008 r CTRPluginFramework::CommentCodeLine(CTRPluginFramework::ARCode const&)::offsets
00166080 00000008 r CTRPluginFramework::CommentCodeLine(CTRPluginFramework::ARCode const&)::data
00166088 00000008 r CTRPluginFramework::CommentCodeLine(CTRPluginFramework::ARCode const&)::storage
00166090 0000001c R vtable for CTRPluginFramework::MenuEntryActionReplay
001660ac 00000004 R About15_array_length
001660b0 00000384 r About15_array
00166434 00000004 R AddFavorite25_array_length
00166438 000009c4 r AddFavorite25_array
00166dfc 00000004 R AddFavoriteFilled25_array_length
00166e00 000009c4 r AddFavoriteFilled25_array
001677c4 00000004 R CapsLockOn15_array_length
001677c8 00000384 r CapsLockOn15_array
00167b4c 00000004 R CapsLockOnFilled15_array_length
00167b50 00000384 r CapsLockOnFilled15_array
00167ed4 00000004 R CheckedCheckbox_array_length
00167ed8 00000384 r CheckedCheckbox_array
0016825c 00000004 R ClearSymbol15_array_length
00168260 00000384 r ClearSymbol15_array
001685e4 00000004 R ClearSymbolFilled15_array_length
001685e8 00000384 r ClearSymbolFilled15_array
0016896c 00000004 R Clipboard25_array_length
00168970 000009c4 r Clipboard25_array
00169334 00000004 R ClipboardFilled25_array_length
00169338 000009c4 r ClipboardFilled25_array
00169cfc 00000004 R CloseWindow20_array_length
00169d00 00000640 r CloseWindow20_array
0016a340 00000004 R CloseWindowFilled20_array_length
0016a344 00000640 r CloseWindowFilled20_array
0016a984 00000004 R Controller15_array_length
0016a988 00000384 r Controller15_array
0016ad0c 00000004 R Cut25_array_length
0016ad10 000009c4 r Cut25_array
0016b6d4 00000004 R CutFilled25_array_length
0016b6d8 000009c4 r CutFilled25_array
0016c09c 00000004 R Duplicate25_array_length
0016c0a0 000009c4 r Duplicate25_array
0016ca64 00000004 R DuplicateFilled25_array_length
0016ca68 000009c4 r DuplicateFilled25_array
0016d42c 00000004 R Edit25_array_length
0016d430 000009c4 r Edit25_array
0016ddf4 00000004 R EditFilled25_array_length
0016ddf8 000009c4 r EditFilled25_array
0016e7bc 00000004 R EnterKey15_array_length
0016e7c0 00000384 r EnterKey15_array
0016eb44 00000004 R EnterKeyFilled15_array_length
0016eb48 00000384 r EnterKeyFilled15_array
0016eecc 00000004 R File15_array_length
0016eed0 00000384 r File15_array
0016f254 00000004 R FolderFilled_array_length
0016f258 00000384 r FolderFilled_array
0016f5dc 00000004 R GameController15_array_length
0016f5e0 00000384 r GameController15_array
0016f964 00000004 R GameController25_array_length
0016f968 000009c4 r GameController25_array
0017032c 00000004 R GameControllerFilled25_array_length
00170330 000009c4 r GameControllerFilled25_array
00170cf4 00000004 R Grid15_array_length
00170cf8 00000384 r Grid15_array
0017107c 00000004 R HandCursor15_array_length
00171080 00000384 r HandCursor15_array
00171404 00000004 R Info25_array_length
00171408 000009c4 r Info25_array
00171dcc 00000004 R InfoFilled25_array_length
00171dd0 000009c4 r InfoFilled25_array
00172794 00000004 R Keyboard25_array_length
00172798 000009c4 r Keyboard25_array
0017315c 00000004 R KeyboardFilled25_array_length
00173160 000009c4 r KeyboardFilled25_array
00173b24 00000004 R Maintenance15_array_length
00173b28 00000384 r Maintenance15_array
00173eac 00000004 R More15_array_length
00173eb0 00000384 r More15_array
00174234 00000004 R Plus25_array_length
00174238 000009c4 r Plus25_array
00174bfc 00000004 R PlusFilled25_array_length
00174c00 000009c4 r PlusFilled25_array
001755c4 00000004 R RAM15_array_length
001755c8 00000384 r RAM15_array
0017594c 00000004 R Restart15_array_length
00175950 00000384 r Restart15_array
00175cd4 00000004 R Rocket40_array_length
00175cd8 00001900 r Rocket40_array
001775d8 00000004 R Save25_array_length
001775dc 000009c4 r Save25_array
00177fa0 00000004 R Search15_array_length
00177fa4 00000384 r Search15_array
00178328 00000004 R Settings15_array_length
0017832c 00000384 r Settings15_array
001786b0 00000004 R Shutdown15_array_length
001786b4 00000384 r Shutdown15_array
00178a38 00000004 R Star15_array_length
00178a3c 00000384 r Star15_array
00178dc0 00000004 R Trash25_array_length
00178dc4 000009c4 r Trash25_array
00179788 00000004 R TrashFilled25_array_length
0017978c 000009c4 r TrashFilled25_array
0017a150 00000004 R UnCheckedCheckbox_array_length
0017a154 00000384 r UnCheckedCheckbox_array
0017a4d8 00000004 R UserManualFilled15_array_length
0017a4dc 00000384 r UserManualFilled15_array
0017a860 0000001c R vtable for CTRPluginFramework::CheckBox
0017a87c 0000001c R vtable for CTRPluginFramework::ComboBox
0017a898 0000001c R vtable for CTRPluginFramework::FloatingButton
0017a8b4 0000001c R vtable for CTRPluginFramework::NumericTextBox
0017a8d0 0000001c R vtable for CTRPluginFramework::TextBox
0017a8ec 0000001c R vtable for CTRPluginFramework::TouchKey
0017a908 00000020 r CTRPluginFramework::HexEditor::_RenderTop()::bytePos
0017a928 00000280 r CTRPluginFramework::_cursorPositions
0017aba8 00000008 r CTRPluginFramework::HexEditor::_PromptForAddress(int)::msg
0017abb0 00000048 r CTRPluginFramework::g_ctrpf
0017abf8 00000030 r CTRPluginFramework::g_byme
0017c584 0000001c V vtable for CTRPluginFramework::IconButton<CTRPluginFramework::Window, void>
0017c5a0 0000001c V vtable for CTRPluginFramework::IconButton<CTRPluginFramework::CheckBox, void>
0017c708 00000014 V vtable for CTRPluginFramework::MenuItem
0017c71c 0000001c V vtable for CTRPluginFramework::ToggleButton<CTRPluginFramework::PluginMenuActionReplay, void>
0017c738 0000001c V vtable for CTRPluginFramework::IconButton<CTRPluginFramework::PluginMenuActionReplay, void>
0017c7a8 0000001c V vtable for CTRPluginFramework::CheckedButton<CTRPluginFramework::PluginMenuHome, void>
0017c7c4 0000001c V vtable for CTRPluginFramework::Button<CTRPluginFramework::PluginMenuHome, void>
0017c7e0 0000001c V vtable for CTRPluginFramework::Button<CTRPluginFramework::PluginMenuSearch, void>
0017c7fc 0000001c V vtable for CTRPluginFramework::CheckedButton<CTRPluginFramework::PluginMenuSearch, void>
0017d824 0000001c V vtable for CTRPluginFramework::IconButton<CTRPluginFramework::GuideReader, void>
0017d848 0000001c V vtable for CTRPluginFramework::IconButton<CTRPluginFramework::HexEditor, void>
0017d9c8 0000001c V vtable for CTRPluginFramework::MenuEntryTools
0017d9e4 0000001c V vtable for CTRPluginFramework::IconButton<CTRPluginFramework::PluginMenuHome, void>
0017da00 0000001c V vtable for CTRPluginFramework::ToggleButton<CTRPluginFramework::PluginMenuHome, void>
0017da4c 0000000c R typeinfo for __gnu_cxx::recursive_init_error
0017da58 00000023 R typeinfo name for __gnu_cxx::recursive_init_error
0017da7c 00000014 R vtable for __gnu_cxx::recursive_init_error
0017dab4 00000008 R typeinfo for __cxxabiv1::__forced_unwind
0017dabc 00000008 R typeinfo for __cxxabiv1::__foreign_exception
0017dac4 0000000c R typeinfo for std::bad_exception
0017dad0 00000008 R typeinfo for std::exception
0017dad8 00000020 R typeinfo name for __cxxabiv1::__forced_unwind
0017daf8 00000024 R typeinfo name for __cxxabiv1::__foreign_exception
0017db1c 00000012 R typeinfo name for std::bad_exception
0017db30 0000000d R typeinfo name for std::exception
0017db40 00000014 R vtable for std::bad_exception
0017db54 0000000c R typeinfo for __cxxabiv1::__si_class_type_info
0017db60 00000025 R typeinfo name for __cxxabiv1::__si_class_type_info
0017db88 0000002c R vtable for __cxxabiv1::__si_class_type_info
0017dbb4 00000008 R typeinfo for std::type_info
0017dbbc 0000000d R typeinfo name for std::type_info
0017dbcc 0000000c R typeinfo for __cxxabiv1::__class_type_info
0017dbd8 00000022 R typeinfo name for __cxxabiv1::__class_type_info
0017dbfc 0000002c R vtable for __cxxabiv1::__class_type_info
0017de10 0000000c R typeinfo for std::bad_alloc
0017de1c 0000000d R typeinfo name for std::bad_alloc
0017de2c 00000014 R vtable for std::bad_alloc
0017de40 0000000c R typeinfo for std::logic_error
0017de4c 0000000c R typeinfo for std::length_error
0017de58 0000000c R typeinfo for std::out_of_range
0017de64 0000000c R typeinfo for std::invalid_argument
0017de70 00000010 R typeinfo name for std::logic_error
0017de80 00000011 R typeinfo name for std::length_error
0017de94 00000011 R typeinfo name for std::out_of_range
0017dea8 00000015 R typeinfo name for std::invalid_argument
0017dec0 00000014 R vtable for std::logic_error
0017ded4 00000014 R vtable for std::length_error
0017dee8 00000014 R vtable for std::out_of_range
0017defc 00000014 R vtable for std::invalid_argument
0017df14 00000004 R _global_impure_ptr
0017df5c 00000060 R __month_lengths
0017e048 00000014 r fpi.7439
0017e05c 00000014 r fpinan.7475
0017e070 00000028 r tinytens
0017e0dc 00000010 r blanks.8562
0017e0ec 00000010 r zeroes.8563
0017e0fc 000000fc R _C_time_locale
0017e3c4 00000015 r day_name.6011
0017e3dc 00000024 r mon_name.6012
0017e400 00000101 R _ctype_
0017e514 00000100 R __hexdig
0017e618 00000028 R __mprec_bigtens
0017e640 000000c8 R __mprec_tens
0017e708 0000000c r p05.7353
0017e714 0000006c R __action_table
0017e780 00000100 R __chclass
0017e880 0000006c R __state_table
0017e8ec 00000010 r blanks.8541
0017e8fc 00000010 r zeroes.8542
0017e90c 00000022 r basefix.8096
0017e944 000000bc r a1
0017ea00 000000bc r a2
0017eabc 0000005b r a3
0017eb18 00000070 r a6
0017eb88 000000a2 r a7
0017ec2c 00000040 r a8
0017ec6c 0000172a r b02cf
00180398 00001a7c r d02f4
00182080 R __exidx_start
001822a0 R __exidx_end
001822a0 00000004 d CTRPluginFramework::stalking(CTRPluginFramework::MenuEntry*)::player
001822a4 00000001 D CTRPluginFramework::g_keepRunning
001822a8 00000004 D CTRPluginFramework::Preferences::MenuHotkeys
001822ac 00000001 D CTRPluginFramework::Preferences::_bmpCanBeLoaded
001822b0 00000001 D CTRPluginFramework::PrivColor::_format
001822b4 00000004 D CTRPluginFramework::PrivColor::FromFramebuffer
001822b8 00000004 D CTRPluginFramework::PrivColor::ToFramebuffer
001822bc 00000001 d CTRPluginFramework::EventManager::PopEvent(CTRPluginFramework::Event&, bool)::refresh
001822bd 00000001 D CTRPluginFramework::SystemImpl::_language
001822c0 00000004 D g_KProcessPIDOffset
001822c4 00000004 D About15
001822c8 00000004 D AddFavorite25
001822cc 00000004 D AddFavoriteFilled25
001822d0 00000004 D CapsLockOn15
001822d4 00000004 D CapsLockOnFilled15
001822d8 00000004 D CheckedCheckbox
001822dc 00000004 D ClearSymbol15
001822e0 00000004 D ClearSymbolFilled15
001822e4 00000004 D Clipboard25
001822e8 00000004 D ClipboardFilled25
001822ec 00000004 D CloseWindow20
001822f0 00000004 D CloseWindowFilled20
001822f4 00000004 D Controller15
001822f8 00000004 D Cut25
001822fc 00000004 D CutFilled25
00182300 00000004 D Duplicate25
00182304 00000004 D DuplicateFilled25
00182308 00000004 D Edit25
0018230c 00000004 D EditFilled25
00182310 00000004 D EnterKey15
00182314 00000004 D EnterKeyFilled15
00182318 00000004 D File15
0018231c 00000004 D FolderFilled
00182320 00000004 D GameController15
00182324 00000004 D GameController25
00182328 00000004 D GameControllerFilled25
0018232c 00000004 D Grid15
00182330 00000004 D HandCursor15
00182334 00000004 D Info25
00182338 00000004 D InfoFilled25
0018233c 00000004 D Keyboard25
00182340 00000004 D KeyboardFilled25
00182344 00000004 D Maintenance15
00182348 00000004 D More15
0018234c 00000004 D Plus25
00182350 00000004 D PlusFilled25
00182354 00000004 D RAM15
00182358 00000004 D Restart15
0018235c 00000004 D Rocket40
00182360 00000004 D Save25
00182364 00000004 D Search15
00182368 00000004 D Settings15
0018236c 00000004 D Shutdown15
00182370 00000004 D Star15
00182374 00000004 D Trash25
00182378 00000004 D TrashFilled25
0018237c 00000004 D UnCheckedCheckbox
00182380 00000004 D UserManualFilled15
00182384 00000001 d CTRPluginFramework::PluginMenuHome::_RenderBottom()::framework
00182388 D __dso_handle
0018238c 00000004 D __cxxabiv1::__unexpected_handler
00182390 00000004 D __cxxabiv1::__terminate_handler
00182394 00000001 D __fdlib_version
00182398 00000004 D _impure_ptr
001823a0 00000460 d impure_data
00182800 0000016c D __global_locale
0018296c 00000408 D __malloc_av_
00182d74 00000004 D __malloc_sbrk_base
00182d78 00000004 D __malloc_trim_threshold
00182d7c 0000000c d __malloc_lock_object
00182d88 00000004 d __tz_lock_object
00182d8c 00000008 D _tzname
00182d94 0000000c D __atexit_lock
00182da0 00000040 d tzinfo
00182de0 00000004 D environ
00182de4 0000000c d __env_lock_object
00182df0 a _DYNAMIC
00182ec8 a _GLOBAL_OFFSET_TABLE_
00182ee0 t __frame_dummy_init_array_entry
00182ee0 T __init_array_start
00182ee0 B __preinit_array_end
00182ee0 B __preinit_array_start
00182ee0 D __tdata_lma
00182ee0 D __tdata_lma_end
00182ee0 D __TMC_END__
00182f2c t __do_global_dtors_aux_fini_array_entry
00182f2c T __fini_array_start
00182f2c T __init_array_end
00182f30 T __fini_array_end
00182f30 r __rel_dyn_start
001994b8 B __c_bss_start
001994b8 r __rel_dyn_end
001994b8 00000004 B CTRPluginFramework::offset
001994bc 00000004 B CTRPluginFramework::data
001994c0 00000004 b CTRPluginFramework::saveSlotTeleporter(CTRPluginFramework::MenuEntry*)::x
001994c4 00000004 b CTRPluginFramework::saveSlotTeleporter(CTRPluginFramework::MenuEntry*)::y
001994c8 00000004 b CTRPluginFramework::saveSlotTeleporter(CTRPluginFramework::MenuEntry*)::z
001994cc 00000001 b CTRPluginFramework::driveAnywhere(CTRPluginFramework::MenuEntry*)::enabled
001994d0 00000004 b CTRPluginFramework::stalking(CTRPluginFramework::MenuEntry*)::active
001994d4 00000004 b CTRPluginFramework::stalking(CTRPluginFramework::MenuEntry*)::pointer
001994d8 00000001 b CTRPluginFramework::stalking(CTRPluginFramework::MenuEntry*)::held
001994d9 00000001 b CTRPluginFramework::SetVR(CTRPluginFramework::MenuEntry*)::shown_dialogue
001994dc 00000004 b CTRPluginFramework::SetVR(CTRPluginFramework::MenuEntry*)::vr
001994e0 00000001 b CTRPluginFramework::SetVR(CTRPluginFramework::MenuEntry*)::execute
001994e4 00000004 B CTRPluginFramework::random
001994e8 00000001 b CTRPluginFramework::SetFlag(CTRPluginFramework::MenuEntry*)::error
001994ea 00000002 b CTRPluginFramework::SetFlag(CTRPluginFramework::MenuEntry*)::flag
001994ec 00000001 b CTRPluginFramework::SetFlag(CTRPluginFramework::MenuEntry*)::shown_dialogue
001994ed 00000001 b CTRPluginFramework::SetCoordinates(CTRPluginFramework::MenuEntry*)::shown_dialogue
001994f0 00000004 b CTRPluginFramework::SetCoordinates(CTRPluginFramework::MenuEntry*)::coordinates
001994f4 00000004 B CTRPluginFramework::g_itemPointer
001994f8 00000004 B CTRPluginFramework::g_oldRacePointer5D0
001994fc 00000004 B CTRPluginFramework::g_oldRacePointer5CC
00199500 00000004 B CTRPluginFramework::g_FNsPointer
00199504 00000004 B CTRPluginFramework::g_raceCondition
00199508 00000004 B CTRPluginFramework::g_racePointer
0019950c 00000004 B CTRPluginFramework::dataZ
00199510 00000004 B CTRPluginFramework::dataY
00199514 00000004 B CTRPluginFramework::dataX
00199518 00000050 B CTRPluginFramework::QuickMenu::_instance
00199568 00000008 B CTRPluginFramework::_sdmcArchive
00199570 00000004 B CTRPluginFramework::g_continueGameEvent
00199574 00000004 B __ctru_heap_size
00199578 00000004 B g_gspEventThreadPriority
0019957c 00000004 B CTRPluginFramework::g_keepEvent
00199580 00000004 B g_mainThread
00199584 00000004 b onLoadCroLock
00199588 00000038 b g_loadCroHook
001995c0 00000004 B croReturn
001995c4 00000004 B CTRPluginFramework::g_keepThreadHandle
001995c8 00000004 B CTRPluginFramework::g_resumeEvent
001995d0 00004000 b CTRPluginFramework::keepThreadStack
0019d5d0 00010000 b CTRPluginFramework::threadStack
001ad5d0 00000004 B CTRPluginFramework::Color::Black
001ad5d4 00000004 B CTRPluginFramework::Color::Blank
001ad5d8 00000004 B CTRPluginFramework::Color::Blue
001ad5dc 00000004 B CTRPluginFramework::Color::BlackGrey
001ad5e0 00000004 B CTRPluginFramework::Color::Brown
001ad5e4 00000004 B CTRPluginFramework::Color::Cyan
001ad5e8 00000004 B CTRPluginFramework::Color::DarkGrey
001ad5ec 00000004 B CTRPluginFramework::Color::DeepSkyBlue
001ad5f0 00000004 B CTRPluginFramework::Color::DimGrey
001ad5f4 00000004 B CTRPluginFramework::Color::DodgerBlue
001ad5f8 00000004 B CTRPluginFramework::Color::Gainsboro
001ad5fc 00000004 B CTRPluginFramework::Color::ForestGreen
001ad600 00000004 B CTRPluginFramework::Color::Green
001ad604 00000004 B CTRPluginFramework::Color::Grey
001ad608 00000004 B CTRPluginFramework::Color::LimeGreen
001ad60c 00000004 B CTRPluginFramework::Color::Magenta
001ad610 00000004 B CTRPluginFramework::Color::Orange
001ad614 00000004 B CTRPluginFramework::Color::Red
001ad618 00000004 B CTRPluginFramework::Color::Silver
001ad61c 00000004 B CTRPluginFramework::Color::SkyBlue
001ad620 00000004 B CTRPluginFramework::Color::Turquoise
001ad624 00000004 B CTRPluginFramework::Color::Yellow
001ad628 00000004 b CTRPluginFramework::ConvertToFloat(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, bool)::temp
001ad630 00000008 b CTRPluginFramework::ConvertToDouble(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, bool)::temp
001ad638 00000008 b CTRPluginFramework::ConvertToU64(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, bool)::temp
001ad640 00000002 b CTRPluginFramework::ConvertToU16(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, bool)::temp
001ad644 00000004 b CTRPluginFramework::ConvertToU32(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, bool)::temp
001ad648 00000001 b CTRPluginFramework::ConvertToU8(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, bool)::temp
001ad64c 00000180 b CTRPluginFramework::g_keyName
001ad7cc 00000004 b CTRPluginFramework::g_runningInstance
001ad7d0 00000004 B CTRPluginFramework::Controller::_keysDown
001ad7d4 00000004 B CTRPluginFramework::Controller::_keysHeld
001ad7d8 00000004 B CTRPluginFramework::Controller::_keysReleased
001ad7dc 00000018 b CTRPluginFramework::_workingDirectory
001ad7f4 00002002 b CTRPluginFramework::_Path::SdmcUtf16Path(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)::utf16Path
001af7f8 00000004 B CTRPluginFramework::System::OnAbort
001af800 00000008 B CTRPluginFramework::Time::Zero
001af808 000009c4 b CTRPluginFramework::g_rng
001b01d0 00000001 B CTRPluginFramework::Preferences::AutoLoadCheats
001b01d1 00000001 B CTRPluginFramework::Preferences::AutoLoadFavorites
001b01d2 00000001 B CTRPluginFramework::Preferences::AutoSaveCheats
001b01d3 00000001 B CTRPluginFramework::Preferences::AutoSaveFavorites
001b01d4 00000001 B CTRPluginFramework::Preferences::DrawTouchCursor
001b01d5 00000001 B CTRPluginFramework::Preferences::ShowBottomFps
001b01d6 00000001 B CTRPluginFramework::Preferences::ShowTopFps
001b01d7 00000001 B CTRPluginFramework::Preferences::UseFloatingBtn
001b01d8 00000001 B CTRPluginFramework::Preferences::_cheatsAlreadyLoaded
001b01d9 00000001 B CTRPluginFramework::Preferences::_favoritesAlreadyLoaded
001b01da 00000001 B CTRPluginFramework::Preferences::EcoMemoryMode
001b01dc 00000004 B CTRPluginFramework::Preferences::topBackgroundImage
001b01e0 00000004 B CTRPluginFramework::Preferences::bottomBackgroundImage
001b01e8 00000078 B CTRPluginFramework::Preferences::Settings
001b0260 00000001 B CTRPluginFramework::Preferences::DisplayFilesLoading
001b0261 00000001 B CTRPluginFramework::Preferences::DrawTouchCoord
001b0262 00000001 B CTRPluginFramework::Preferences::InjectBOnMenuClose
001b0264 00000004 b CTRPluginFramework::defaultSysFont
001b0268 00000004 B CTRPluginFramework::g_fontAllocated
001b026c 00000004 b CTRPluginFramework::tileData
001b0270 00000004 b CTRPluginFramework::glyph
001b0274 00000004 B CTRPluginFramework::g_glyphAllocated
001b0278 0000000c B CTRPluginFramework::OSDImpl::RecLock
001b0284 0000000c B CTRPluginFramework::OSDImpl::Notifications[abi:cxx11]
001b0290 00000018 B CTRPluginFramework::OSDImpl::TopScreen
001b02a8 00000018 B CTRPluginFramework::OSDImpl::BottomScreen
001b02c0 00000038 B CTRPluginFramework::OSDImpl::OSDHook
001b02f8 00000004 B CTRPluginFramework::OSDImpl::HookReturn
001b02fc 00000008 B CTRPluginFramework::OSDImpl::OnNewFrameEvent
001b0304 00000024 B CTRPluginFramework::OSDImpl::FloatingBtn
001b0328 0000000c B CTRPluginFramework::OSDImpl::Callbacks
001b0334 00000004 b CTRPluginFramework::g_second
001b0338 00000010 b CTRPluginFramework::g_fpsClock
001b0348 00000038 B CTRPluginFramework::OSDHook2
001b0380 00000004 B CTRPluginFramework::OSDImpl::FramesToPlay
001b0384 00000001 B CTRPluginFramework::OSDImpl::DrawSaveIcon
001b0385 00000001 B CTRPluginFramework::OSDImpl::MessColors
001b0388 00000001 B CTRPluginFramework::PrivColor::_useClamp
001b038c 00000010 B CTRPluginFramework::PrivColor::_clampArea
001b039c 00000001 B CTRPluginFramework::Renderer::_target
001b03a0 00000004 B CTRPluginFramework::Renderer::_screen
001b03a4 00000004 b guard variable for CTRPluginFramework::Renderer::EndFrame(bool)::background
001b03a8 00000004 b CTRPluginFramework::Renderer::EndFrame(bool)::background
001b03ac 00000004 B CTRPluginFramework::RendererPriv::g_customColor
001b03b0 00000028 B CTRPluginFramework::Window::BottomWindow
001b03d8 00000028 B CTRPluginFramework::Window::TopWindow
001b0400 00000010 b CTRPluginFramework::KeyboardImpl::_RenderTop()::background2
001b0410 00000010 b CTRPluginFramework::KeyboardImpl::_RenderTop()::background1
001b0420 00000004 b guard variable for CTRPluginFramework::KeyboardImpl::_RenderTop()::background1
001b0424 00000004 b guard variable for CTRPluginFramework::KeyboardImpl::_RenderTop()::background2
001b0428 00000004 b guard variable for CTRPluginFramework::KeyboardImpl::_RenderBottom()::background
001b042c 00000010 b CTRPluginFramework::KeyboardImpl::_RenderBottom()::background
001b043c 00000004 b guard variable for CTRPluginFramework::KeyboardImpl::_RenderBottom()::background2
001b0440 00000010 b CTRPluginFramework::KeyboardImpl::_RenderBottom()::background2
001b0450 00000004 b guard variable for CTRPluginFramework::KeyboardImpl::_RenderBottom()::clampArea
001b0454 00000010 b CTRPluginFramework::KeyboardImpl::_RenderBottom()::clampArea
001b0464 00000004 b guard variable for CTRPluginFramework::KeyboardImpl::_CheckKeys()::backspacetimer
001b0468 00000008 b CTRPluginFramework::KeyboardImpl::_CheckKeys()::backspacetimer
001b0470 00000004 b guard variable for CTRPluginFramework::KeyboardImpl::_CheckKeys()::FastModeWaitTime
001b0478 00000008 b CTRPluginFramework::KeyboardImpl::_CheckKeys()::FastModeWaitTime
001b0480 00000004 b guard variable for CTRPluginFramework::KeyboardImpl::_CheckKeys()::FastClearingFrame
001b0488 00000008 b CTRPluginFramework::KeyboardImpl::_CheckKeys()::FastClearingFrame
001b0490 00000004 b CTRPluginFramework::KeyboardImpl::_CheckKeys()::backspaceFastMode
001b0494 0000000c B CTRPluginFramework::KeyboardImpl::_QwertyKeys
001b04a0 0000000c B CTRPluginFramework::KeyboardImpl::_DecimalKeys
001b04ac 0000000c B CTRPluginFramework::KeyboardImpl::_HexaDecimalKeys
001b04b8 00000004 b guard variable for CTRPluginFramework::KeyboardImpl::_ProcessEvent(CTRPluginFramework::Event&)::inputClock
001b04c0 00000008 b CTRPluginFramework::KeyboardImpl::_ProcessEvent(CTRPluginFramework::Event&)::inputClock
001b04c8 00000004 b guard variable for CTRPluginFramework::KeyboardImpl::_ProcessEvent(CTRPluginFramework::Event&)::buttons
001b04cc 00000010 b CTRPluginFramework::KeyboardImpl::_ProcessEvent(CTRPluginFramework::Event&)::buttons
001b04dc 00000004 B CTRPluginFramework::MenuItem::_uidCounter
001b04e0 00000004 b CTRPluginFramework::__pmARinstance
001b04e4 00000004 b CTRPluginFramework::g_radioId
001b04e8 00000004 B CTRPluginFramework::PluginMenuExecuteLoop::_firstInstance
001b04ec 00000004 B CTRPluginFramework::PluginMenuExecuteLoop::_builtinLock
001b04f0 00000004 B CTRPluginFramework::PluginMenuExecuteLoop::_arLock
001b04f8 00000004 B CTRPluginFramework::PluginMenuImpl::_runningInstance
001b04fc 00000004 b CTRPluginFramework::PluginMenuImpl::Run()::count
001b0500 00000004 b guard variable for CTRPluginFramework::PluginMenuImpl::Run()::konamicode
001b0508 00000020 b CTRPluginFramework::PluginMenuImpl::Run()::konamicode
001b0528 00000010 b CTRPluginFramework::PluginMenuSearch::_ShowProgressWindow() const::background
001b0538 00000010 b CTRPluginFramework::PluginMenuSearch::_ShowProgressWindow() const::background2
001b0548 00000004 b guard variable for CTRPluginFramework::PluginMenuSearch::_ShowProgressWindow() const::background
001b054c 00000004 b guard variable for CTRPluginFramework::PluginMenuSearch::_ShowProgressWindow() const::background2
001b0550 00000004 b guard variable for CTRPluginFramework::PluginMenuSearch::_ShowProgressWindow() const::timer
001b0558 00000008 b CTRPluginFramework::PluginMenuSearch::_ShowProgressWindow() const::timer
001b0560 00000004 b CTRPluginFramework::PluginMenuSearch::_ShowProgressWindow() const::phase
001b0568 00000004 b CTRPluginFramework::g_mode
001b056c 00000004 b CTRPluginFramework::g_HookMode
001b0570 00000004 B CTRPluginFramework::g_index
001b0574 00000004 B CTRPluginFramework::g_OpenFileLock
001b0578 00000004 B CTRPluginFramework::g_filenames
001b057c 00000004 b CTRPluginFramework::g_buffer2
001b0580 00000030 b CTRPluginFramework::g_hookExportFile
001b05b0 00000038 b CTRPluginFramework::g_FsTryOpenFileHook
001b05e8 00000004 B CTRPluginFramework::g_FsTryOpenFileAddress
001b05ec 00000004 b CTRPluginFramework::g_buffer
001b05f0 00000004 b CTRPluginFramework::PluginMenuTools::_ProcessEvent(CTRPluginFramework::Event&)::mode
001b05f4 00000004 b guard variable for CTRPluginFramework::PluginMenuTools::_RenderBottom()::xpos
001b05f8 00000004 b CTRPluginFramework::PluginMenuTools::_RenderBottom()::xpos
001b0600 00000004 b guard variable for CTRPluginFramework::SearchMenu::ProcessEvent(std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >&, CTRPluginFramework::Time&)::_fastScroll
001b0608 00000008 b CTRPluginFramework::SearchMenu::ProcessEvent(std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >&, CTRPluginFramework::Time&)::_fastScroll
001b0610 00000004 b guard variable for CTRPluginFramework::SearchMenu::ProcessEvent(std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >&, CTRPluginFramework::Time&)::_startFastScroll
001b0618 00000008 b CTRPluginFramework::SearchMenu::ProcessEvent(std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >&, CTRPluginFramework::Time&)::_startFastScroll
001b0620 00000004 b guard variable for CTRPluginFramework::SubMenu::Draw()::background
001b0624 00000010 b CTRPluginFramework::SubMenu::Draw()::background
001b0634 00000004 B CTRPluginFramework::_pool
001b0638 00000001 b CTRPluginFramework::EventManager::ProcessEvents()::isTouching
001b063a 00000004 b CTRPluginFramework::EventManager::ProcessEvents()::firstTouch
001b0640 00000004 B CTRPluginFramework::Heap::__ctrpf_heap
001b0644 00000004 B CTRPluginFramework::Heap::__ctrpf_heap_size
001b0648 00000008 b CTRPluginFramework::Heap::g_heapPool
001b0650 0000000c b sAddrMap
001b0660 00000004 B CTRPluginFramework::ProcessImpl::_kProcess
001b0664 00000064 B CTRPluginFramework::ProcessImpl::_kCodeSet
001b06c8 00000004 B CTRPluginFramework::ProcessImpl::_processID
001b06cc 00000004 B CTRPluginFramework::ProcessImpl::_kProcessState
001b06d0 00000004 B CTRPluginFramework::ProcessImpl::mmuTableSize
001b06d4 00000004 B CTRPluginFramework::ProcessImpl::mmuTable
001b06d8 00000008 B CTRPluginFramework::ProcessImpl::_processName
001b06e0 00000008 B CTRPluginFramework::ProcessImpl::_titleID
001b06e8 00000004 B CTRPluginFramework::ProcessImpl::_processHandle
001b06ec 00000004 B CTRPluginFramework::ProcessImpl::_mainThreadHandle
001b06f0 0000000c B CTRPluginFramework::ProcessImpl::FrameLock
001b06fc 00000004 B CTRPluginFramework::ProcessImpl::FrameEvent
001b0700 00000004 B CTRPluginFramework::ProcessImpl::_isPaused
001b0704 00000001 B CTRPluginFramework::ProcessImpl::_isAcquiring
001b0708 00000038 b CTRPluginFramework::_topBuf
001b0740 00000004 B CTRPluginFramework::ScreenImpl::Top
001b0744 00000038 b CTRPluginFramework::_botBuf
001b077c 00000004 B CTRPluginFramework::ScreenImpl::Bottom
001b0780 00000001 B CTRPluginFramework::SystemImpl::_isInit
001b0781 00000001 B CTRPluginFramework::SystemImpl::_isNew3DS
001b0784 00000004 B CTRPluginFramework::SystemImpl::_IOBaseLCD
001b0788 00000004 B CTRPluginFramework::SystemImpl::_IOBasePAD
001b078c 00000004 B CTRPluginFramework::SystemImpl::_IOBasePDC
001b0790 00000004 B CTRPluginFramework::SystemImpl::CFWVersion
001b0794 00000004 B CTRPluginFramework::SystemImpl::RosalinaHotkey
001b0798 00000001 B CTRPluginFramework::SystemImpl::IsLoaderNTR
001b079c 0000000c B CTRPluginFramework::g_codeTypes
001b07a8 00000001 b CTRPluginFramework::g_condAgainstData
001b07a9 00000001 b CTRPluginFramework::g_newCondDataToggle
001b07ac 00000004 b CTRPluginFramework::__arCodeEditor
001b07b0 00000004 b guard variable for CTRPluginFramework::ARCodeEditor::_ReloadCodeLines()::tempar
001b07b4 0000000c b CTRPluginFramework::ARCodeEditor::_ReloadCodeLines()::tempar
001b07c0 00000001 b CTRPluginFramework::ARCodeEditor::operator()(std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >&)::isInHexEditor
001b07c4 00000004 b guard variable for CTRPluginFramework::ActionReplay_ProcessString(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, bool)::colors
001b07c8 0000000c b CTRPluginFramework::ActionReplay_ProcessString(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, bool)::colors
001b07d4 00000001 B CTRPluginFramework::g_heapError
001b07d8 00000004 b cfguRefCount
001b07dc 00000004 b cfguHandle
001b07e0 00000004 b sharedFontAddr
001b07e4 00000004 b srvRefCount
001b07e8 00000004 b srv2Handle
001b07ec 00000004 b arbiter
001b07f0 00000004 b acRefCount
001b07f4 00000004 b acHandle
001b07f8 00000004 b amRefCount
001b07fc 00000004 b amHandle
001b0800 0000000c b aptFirstHook
001b080c 00000004 b aptLockHandle
001b0810 00000004 b serviceName.7503
001b0814 00000004 b aptMessageFunc
001b0818 00000004 b aptMessageFuncData
001b081c 0000000c b aptEvents
001b0828 00000001 b aptHomeButtonState
001b082c 00000004 b aptRefCount
001b0830 00000008 b aptSleepEvent
001b0838 00000004 b aptEventHandlerThread
001b083c 00000001 b flagInit.7855
001b083d 00000001 b flagValue.7856
001b0840 00001000 b aptParameters
001b1840 00000004 b fsuHandle
001b1848 00000080 b fsExemptArchives
001b18c8 00000004 b fsuRefCount
001b18cc 00000001 B fs
001b18d0 00000004 b gspEventData
001b18d4 00000038 b gspEvents
001b190c 0000001c b gspEventCounts
001b1928 00000001 b gspRunEvents
001b192c 00000004 b gspRefCount
001b1930 00000004 b gfxSharedMemory
001b1934 00000001 b gfxThreadID
001b1935 00001000 b gspThreadEventStack
001b2938 00000004 b hidRefCount
001b293c 00000004 b kOld
001b2940 00000004 b kHeld
001b2944 00000004 b cPos
001b2948 00000004 b tPos
001b294c 00000006 b aVec
001b2952 00000006 b gRate
001b2958 00000004 b kDown
001b295c 00000004 b kUp
001b2960 00000004 b irrstRefCount
001b2964 00000004 b kHeld
001b2968 00000004 b csPos
001b296c 00000004 B _tls_size
001b2970 b saved_stack
001b2978 00000004 b guard variable for CTRPluginFramework::LineWriter::endl[abi:cxx11]()::end
001b297c 00000018 b CTRPluginFramework::LineWriter::endl[abi:cxx11]()::end
001b2994 00000004 b CTRPluginFramework::__converter
001b2998 00000004 b guard variable for CTRPluginFramework::GuideReader::Draw()::background
001b299c 00000010 b CTRPluginFramework::GuideReader::Draw()::background
001b29b0 00000004 b guard variable for CTRPluginFramework::HexEditor::_ProcessEvent(CTRPluginFramework::Event&)::timer
001b29b8 00000008 b CTRPluginFramework::HexEditor::_ProcessEvent(CTRPluginFramework::Event&)::timer
001b29c0 00000004 B CTRPluginFramework::__g_hexEditor
001b29c4 00000004 b guard variable for CTRPluginFramework::HexEditor::_PromptForAddress(int)::background
001b29c8 00000010 b CTRPluginFramework::HexEditor::_PromptForAddress(int)::background
001b29d8 00000001 b CTRPluginFramework::HexEditor::operator()(std::vector<CTRPluginFramework::Event, std::allocator<CTRPluginFramework::Event> >&)::keysAreDisabled
001b29e0 00000004 b CTRPluginFramework::PluginMenuHome::_showStarredBtn_OnClick()::bak
001b29e4 00000004 b guard variable for CTRPluginFramework::PluginMenuHome::_RenderBottom()::creditClock
001b29e8 00000008 b CTRPluginFramework::PluginMenuHome::_RenderBottom()::creditClock
001b29f0 00000004 b CTRPluginFramework::g_ctrpfString
001b29f4 00000004 b CTRPluginFramework::g_bymeString
001b29f8 00000004 b guard variable for CTRPluginFramework::PluginMenuHome::_ProcessEvent(CTRPluginFramework::Event&)::fastScroll
001b2a00 00000008 b CTRPluginFramework::PluginMenuHome::_ProcessEvent(CTRPluginFramework::Event&)::fastScroll
001b2a08 00000004 b guard variable for CTRPluginFramework::PluginMenuHome::_ProcessEvent(CTRPluginFramework::Event&)::inputClock
001b2a10 00000008 b CTRPluginFramework::PluginMenuHome::_ProcessEvent(CTRPluginFramework::Event&)::inputClock
001b2a18 00000004 b CTRPluginFramework::PluginMenuHome::_ProcessEvent(CTRPluginFramework::Event&)::last
001b2a1c 00000004 B CTRPluginFramework::ARHandler::ActiveData
001b2a20 00000001 B CTRPluginFramework::ARHandler::ExitCodeImmediately
001b2a24 00000008 B CTRPluginFramework::ARHandler::Offset
001b2a2c 00000004 B CTRPluginFramework::ARHandler::ActiveOffset
001b2a30 00000010 B CTRPluginFramework::ARHandler::Data
001b2a40 00000008 B CTRPluginFramework::ARHandler::Storage
001b2a48 00000001 b CTRPluginFramework::ToggleFloat
001b2a4c 00000008 b sMappablePool
001b2a54 0000000c b sAddrMap
001b2a60 b completed.7759
001b2a64 b object.7764
001b2a7c 0000000c b eh_globals
001b2a88 00000010 b (anonymous namespace)::emergency_pool
001b2a98 00000010 V std::string::_Rep::_S_empty_rep_storage
001b2aa8 00000004 b (anonymous namespace)::__new_handler
001b2aac 00000028 B __malloc_current_mallinfo
001b2ad4 00000004 B __malloc_max_sbrked_mem
001b2ad8 00000004 B __malloc_max_total_mem
001b2adc 00000004 B __malloc_top_pad
001b2ae0 0000000b b __tzname_dst
001b2aec 0000000b b __tzname_std
001b2af8 00000004 b prev_tzenv
001b2afc 00000004 B _daylight
001b2b00 00000004 B _timezone
001b2b04 00000004 b initial_env
001b2b08 00000004 b heap_start.7089
001b2b0c 00000004 B fake_heap_end
001b2b10 00000004 B fake_heap_start
001b2b14 00000038 B __syscalls
001b2b4c 00000004 B g_KProcessHandleDataOffset
001b2b50 00000080 B g_kernelParams
001b2bd0 00000004 B g_sharedFont
001b2bd4 00000004 B charPerSheet
001b2bd8 00000004 B gspEvent
001b2bdc 00000004 B gspGpuHandle
001b2be0 00000004 B gspSharedMemHandle
001b2be4 00000004 B gspThreadEventHandle
001b2be8 00000004 B hidMemHandle
001b2bec 00000004 B hidHandle
001b2bf0 00000014 B hidEvents
001b2c04 00000004 B hidSharedMem
001b2c08 00000004 B irrstMemHandle
001b2c0c 00000004 B irrstEvent
001b2c10 00000004 B irrstHandle
001b2c14 00000004 B irrstSharedMem
001b2c18 00000004 B __ctru_linear_heap
001b2c1c 00000004 B __tmp
001b2c20 00000004 B __ctru_linear_heap_size
001b2c24 00000004 B __system_retAddr
001b2c28 00000004 B __ctru_heap
001b2c2c B __c_bss_end
001b2c2c A __end__
001b2c2c B __tls_end
001b2c2c B __tls_start
